"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[4333],{17496:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"study/CKS/Supply Chain Security/SupplyChainStaticAnalysis","title":"Static Analysis","description":"Supply Chain Security and Static Analysis Tools.","source":"@site/docs/study/CKS/5. Supply Chain Security/SupplyChainStaticAnalysis.md","sourceDirName":"study/CKS/5. Supply Chain Security","slug":"/study/CKS/Supply Chain Security/SupplyChainStaticAnalysis","permalink":"/docs/study/CKS/Supply Chain Security/SupplyChainStaticAnalysis","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/study/CKS/5. Supply Chain Security/SupplyChainStaticAnalysis.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"title":"Static Analysis"},"sidebar":"docsSidebar","previous":{"title":"Secure Supply Chain","permalink":"/docs/study/CKS/Supply Chain Security/SupplyChainSecurity"},"next":{"title":"Auditing","permalink":"/docs/study/CKS/Runtime Security/RuntimeAuditing"}}');var a=s(74848),t=s(28453);const c={title:"Static Analysis"},r=void 0,o={},l=[{value:"Static Analysis",id:"static-analysis",level:2},{value:"CICD",id:"cicd",level:3},{value:"Manual Approach",id:"manual-approach",level:2},{value:"Tools for k8s &amp; scenarios",id:"tools-for-k8s--scenarios",level:2},{value:"kubesec",id:"kubesec",level:3},{value:"OPA conftest",id:"opa-conftest",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Supply Chain Security and Static Analysis Tools."}),"\n",(0,a.jsx)(n.h2,{id:"static-analysis",children:"Static Analysis"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"look at static code & text files"}),"\n",(0,a.jsx)(n.li,{children:"checks against rules"}),"\n",(0,a.jsx)(n.li,{children:"enforce rules"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:'example of rules? "always define requests & limits", "never use service accounts default"'}),"\n",(0,a.jsx)(n.h3,{id:"cicd",children:"CICD"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"code --\x3e commit --\x3e github --\x3e build --\x3e test --\x3e deploy to k8s"})}),"\n",(0,a.jsx)(n.p,{children:"where to do SA?"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"between code & commit"}),"\n",(0,a.jsx)(n.li,{children:"before build"}),"\n",(0,a.jsx)(n.li,{children:"in test phase"}),"\n",(0,a.jsx)(n.li,{children:"at the deploy phase using OPA"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"do it early, and also late phase as well for good coverage."}),"\n",(0,a.jsx)(n.h2,{id:"manual-approach",children:"Manual Approach"}),"\n",(0,a.jsx)(n.p,{children:"literally just looking at code, yaml, seeing certain no-no's like hard-coding tokens in the yaml, or even as ENV vars (hint: use secrets)"}),"\n",(0,a.jsx)(n.h2,{id:"tools-for-k8s--scenarios",children:"Tools for k8s & scenarios"}),"\n",(0,a.jsx)(n.h3,{id:"kubesec",children:"kubesec"}),"\n",(0,a.jsx)(n.p,{children:"kubesec.io"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"open source"}),"\n",(0,a.jsx)(n.li,{children:"opiniated"}),"\n",(0,a.jsx)(n.li,{children:"does a score for you and advise improvement"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"create a pod and then run kubesec at it"}),"\n",(0,a.jsxs)(n.p,{children:["pod: ",(0,a.jsx)(n.code,{children:"k run nginx --image=nginx -oyaml --dry-run=client > kubesec.yaml"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: nginx\n  name: nginx\nspec:\n  containers:\n  - image: nginx\n    name: nginx\n    resources: {}\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: {}\n"})}),"\n",(0,a.jsx)(n.p,{children:"run it at kubesec"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'docker run -i kubesec/kubesec:512c5e0 scan /dev/stdin < ./kubesec.yaml\nUnable to find image \'kubesec/kubesec:512c5e0\' locally\n512c5e0: Pulling from kubesec/kubesec\nc87736221ed0: Pull complete \n5dfbfe40753f: Pull complete \n0ab7f5410346: Pull complete \nb91424b4f19c: Pull complete \n0cff159cca1a: Pull complete \n32836ab12770: Pull complete \nDigest: sha256:8b1e0856fc64cabb1cf91fea6609748d3b3ef204a42e98d0e20ebadb9131bcb7\nStatus: Downloaded newer image for kubesec/kubesec:512c5e0\n[\n  {\n    "object": "Pod/nginx.default",\n    "valid": true,\n    "message": "Passed with a score of 0 points",\n    "score": 0,\n    "scoring": {\n      "advise": [\n        {\n          "selector": ".spec .serviceAccountName",\n          "reason": "Service accounts restrict Kubernetes API access and should be configured with least privilege"\n        },\n        {\n          "selector": "containers[] .resources .limits .cpu",\n          "reason": "Enforcing CPU limits prevents DOS via resource exhaustion"\n        },\n        {\n          "selector": "containers[] .securityContext .readOnlyRootFilesystem == true",\n          "reason": "An immutable root filesystem can prevent malicious binaries being added to PATH and increase attack cost"\n        },\n        {\n          "selector": "containers[] .securityContext .capabilities .drop | index(\\"ALL\\")",\n          "reason": "Drop all capabilities and add only those required to reduce syscall attack surface"\n        },\n        {\n          "selector": ".metadata .annotations .\\"container.seccomp.security.alpha.kubernetes.io/pod\\"",\n          "reason": "Seccomp profiles set minimum privilege and secure against unknown threats"\n        },\n        {\n          "selector": "containers[] .resources .requests .memory",\n          "reason": "Enforcing memory requests aids a fair balancing of resources across the cluster"\n        },\n        {\n          "selector": "containers[] .resources .requests .cpu",\n          "reason": "Enforcing CPU requests aids a fair balancing of resources across the cluster"\n        },\n        {\n          "selector": "containers[] .securityContext .runAsNonRoot == true",\n          "reason": "Force the running image to run as a non-root user to ensure least privilege"\n        },\n        {\n          "selector": ".metadata .annotations .\\"container.apparmor.security.beta.kubernetes.io/nginx\\"",\n          "reason": "Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY"\n        },\n        {\n          "selector": "containers[] .resources .limits .memory",\n          "reason": "Enforcing memory limits prevents DOS via resource exhaustion"\n        },\n        {\n          "selector": "containers[] .securityContext .runAsUser -gt 10000",\n          "reason": "Run as a high-UID user to avoid conflicts with the host\'s user table"\n        },\n        {\n          "selector": "containers[] .securityContext .capabilities .drop",\n          "reason": "Reducing kernel capabilities available to a container limits its attack surface"\n        }\n      ]\n    }\n  }\n]\n'})}),"\n",(0,a.jsx)(n.p,{children:"go through each advisory, make changes, re-run kubesec."}),"\n",(0,a.jsx)(n.h3,{id:"opa-conftest",children:"OPA conftest"}),"\n",(0,a.jsxs)(n.p,{children:["see ",(0,a.jsx)(n.code,{children:"conftest"})," in course materials"]}),"\n",(0,a.jsxs)(n.p,{children:["quick look at these policies ",(0,a.jsx)(n.code,{children:"base.rego"})," for rules on our base images"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'# from https://www.conftest.dev\npackage main\n\ndenylist = [\n  "ubuntu"\n]\n\ndeny[msg] {\n  input[i].Cmd == "from"\n  val := input[i].Value\n  contains(val[i], denylist[_])\n\n  msg = sprintf("unallowed image found %s", [val])\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"what's happening here?"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"a denly list of images not allowed"}),"\n",(0,a.jsxs)(n.li,{children:["policy looks at the ",(0,a.jsx)(n.code,{children:"FROM"})," lines via ",(0,a.jsx)(n.code,{children:'input[i].Cmd == "from"'})]}),"\n",(0,a.jsxs)(n.li,{children:["checks a ",(0,a.jsx)(n.code,{children:"contains(val[i], denyList[_])"})," against our denyList"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["let's have a look at our commands in ",(0,a.jsx)(n.code,{children:"commands.rego"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package commands\n\ndenylist = [\n  "apk",\n  "apt",\n  "pip",\n  "curl",\n  "wget",\n]\n\ndeny[msg] {\n  input[i].Cmd == "run"\n  val := input[i].Value\n  contains(val[_], denylist[_])\n\n  msg = sprintf("unallowed commands found %s", [val])\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"same again"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"have a denyList array with commands"}),"\n",(0,a.jsxs)(n.li,{children:["checking the ",(0,a.jsx)(n.code,{children:"RUN"})," lines via ",(0,a.jsx)(n.code,{children:'input[i].Cmd == "run"'})]}),"\n",(0,a.jsxs)(n.li,{children:["checks it ",(0,a.jsx)(n.code,{children:"contains(val[i]...)"})," in our ",(0,a.jsx)(n.code,{children:"denyList[_]"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"running the command to do a static analysis check"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"docker run --rm -v $(pwd):/project openpolicyagent/conftest test Dockerfile --all-namespaces"})}),"\n",(0,a.jsx)(n.p,{children:"output"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'FAIL - Dockerfile - main - unallowed image found ["ubuntu"]\nFAIL - Dockerfile - commands - unallowed commands found ["apt-get update && apt-get install -y golang-go"]\n\n2 tests, 0 passed, 0 warnings, 2 failures, 0 exceptions\n'})}),"\n",(0,a.jsxs)(n.p,{children:["edit ",(0,a.jsx)(n.code,{children:"Dockerfile"})," remove ",(0,a.jsx)(n.code,{children:"ubuntu"})," and replace with ",(0,a.jsx)(n.code,{children:"alpine"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'FAIL - Dockerfile - commands - unallowed commands found ["apt-get update && apt-get install -y golang-go"]\n\n2 tests, 1 passed, 0 warnings, 1 failure, 0 exceptions\n'})}),"\n",(0,a.jsxs)(n.p,{children:["edit ",(0,a.jsx)(n.code,{children:"commands.rego"})," and remove ",(0,a.jsx)(n.code,{children:"apt"})," from the denyList cos we need it."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"2 tests, 2 passed, 0 warnings, 0 failures, 0 exceptions\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var i=s(96540);const a={},t=i.createContext(a);function c(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);