"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[5367],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>l});var o=r(96540);const s={},i=o.createContext(s);function c(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:n},e.children)}},54761:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"study/CKS/System Hardening/SystemHardAppArmorSeccomp","title":"AppArmor and Seccomp","description":"Overview","source":"@site/docs/study/CKS/3. System Hardening/SystemHardAppArmorSeccomp.md","sourceDirName":"study/CKS/3. System Hardening","slug":"/study/CKS/System Hardening/SystemHardAppArmorSeccomp","permalink":"/docs/study/CKS/System Hardening/SystemHardAppArmorSeccomp","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/study/CKS/3. System Hardening/SystemHardAppArmorSeccomp.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"title":"AppArmor and Seccomp"},"sidebar":"docsSidebar","previous":{"title":"API Hardening / Restricting","permalink":"/docs/study/CKS/Cluster Hardening/HardenRestrictAPI"},"next":{"title":"Reduce Attack Surface","permalink":"/docs/study/CKS/System Hardening/SystemHardReduceAttackSurface"}}');var s=r(74848),i=r(28453);const c={title:"AppArmor and Seccomp"},l=void 0,t={},a=[{value:"Overview",id:"overview",level:2},{value:"AppArmor",id:"apparmor",level:2},{value:"AA on localhost curl",id:"aa-on-localhost-curl",level:3},{value:"AA in docker",id:"aa-in-docker",level:3},{value:"AA in a k8s pod",id:"aa-in-a-k8s-pod",level:3},{value:"Seccomp",id:"seccomp",level:2},{value:"Seccomp on Docker",id:"seccomp-on-docker",level:3},{value:"Seccomp on K8s",id:"seccomp-on-k8s",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"kernel vs user space"}),"\n",(0,s.jsx)(n.p,{children:"app --\x3e libs --\x3e seccomp/apparmor --\x3e syscall --\x3e OS kernel --\x3e hw"}),"\n",(0,s.jsx)(n.h2,{id:"apparmor",children:"AppArmor"}),"\n",(0,s.jsx)(n.p,{children:"create profiles to allow/restrict what an app do to e.g. filesystem, other processes, networks"}),"\n",(0,s.jsx)(n.p,{children:"profile modes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"unconfined - allow escape"}),"\n",(0,s.jsx)(n.li,{children:"complain - process can escape but log"}),"\n",(0,s.jsx)(n.li,{children:"enforce - no escape"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"aa-on-localhost-curl",children:"AA on localhost curl"}),"\n",(0,s.jsxs)(n.p,{children:["commands to install and get a profile for ",(0,s.jsx)(n.code,{children:"curl"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"aa-status"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"apt install -y apparmor-utils"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aa-genprof curl"})," to create an aa profile for ",(0,s.jsx)(n.code,{children:"curl"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"its now prevented"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"root@cks-worker:~# curl killer.sh -v\n* Rebuilt URL to: killer.sh/\n* Could not resolve host: killer.sh\n* Closing connection 0\ncurl: (6) Could not resolve host: killer.sh\n"})}),"\n",(0,s.jsxs)(n.p,{children:["update ",(0,s.jsx)(n.code,{children:"/etc/apparmor.d/usr.bin.curl"})," profile"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"# Last Modified: Sun Sep 12 00:21:00 2021\n#include <tunables/global />\n\n/usr/bin/curl {\n  #include <abstractions/base />\n\n  /lib/x86_64-linux-gnu/ld-*.so mr,\n  /usr/bin/curl mr,\n\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["by running ",(0,s.jsx)(n.code,{children:"aa-logprof"})," which scans log files for apparmor events not covered by a profile (e.g. new curl profile), and prompt user if they want to modify/augement the policy accordingly, then saves changes to disk."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"root@cks-worker:~# aa-logprof\nReading log entries from /var/log/syslog.\nUpdating AppArmor profiles in /etc/apparmor.d.\nEnforce-mode changes:\n\nProfile:  /usr/bin/curl\nPath:     /etc/ssl/openssl.cnf\nNew Mode: owner r\nSeverity: 2\n\n [1 - #include <abstractions/lxc/container-base />]\n  2 - #include <abstractions/lxc/start-container />\n  3 - #include <abstractions/openssl />\n  4 - #include <abstractions/ssl_keys />\n  5 - owner /etc/ssl/openssl.cnf r,\n(A)llow / [(D)eny] / (I)gnore / (G)lob / Glob with (E)xtension / (N)ew / Audi(t) / (O)wner permissions off / Abo(r)t / (F)inish\nAdding #include <abstractions/lxc/container-base /> to profile.\nDeleted 2 previous matching profile entries.\n\n= Changed Local Profiles =\n\nThe following local profiles were changed. Would you like to save them?\n\n [1 - /usr/bin/curl]\n(S)ave Changes / Save Selec(t)ed Profile / [(V)iew Changes] / View Changes b/w (C)lean profiles / Abo(r)t\nWriting updated profile for /usr/bin/curl.\n"})}),"\n",(0,s.jsx)(n.p,{children:"curl now works"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'root@cks-worker:~# curl killer.sh\n&lt;HTML&gt;&lt;HEAD&gt;&lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;\n&lt;TITLE&gt;301 Moved&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;\n&lt;H1&gt;301 Moved&lt;/H1&gt;\nThe document has moved\n&lt;A HREF="https://killer.sh/"&gt;here&lt;/A&gt;.\n&lt;/BODY&gt;&lt;/HTML&gt;\n'})}),"\n",(0,s.jsx)(n.h3,{id:"aa-in-docker",children:"AA in docker"}),"\n",(0,s.jsxs)(n.p,{children:["look at ",(0,s.jsx)(n.code,{children:"profile-docker-nginx"})," in course material."]}),"\n",(0,s.jsxs)(n.p,{children:["copy our profile to ",(0,s.jsx)(n.code,{children:"/etc/apparmor.d/docker-nginx"}),"\nnow load it using ",(0,s.jsx)(n.code,{children:"apparmor_parser /etc/apparmor.d/docker-nginx"}),"\ncheck to see it loaded in the list ",(0,s.jsx)(n.code,{children:"aa-status"})]}),"\n",(0,s.jsxs)(n.p,{children:["use the profile using: ",(0,s.jsx)(n.code,{children:"docker run --security-opt apparmor=docker-nginx nginx"}),"\nrun it detached ",(0,s.jsx)(n.code,{children:"-d"})," and ",(0,s.jsx)(n.code,{children:"exec"})," in to test what the AA policy allows e.g. touch, sh"]}),"\n",(0,s.jsx)(n.h3,{id:"aa-in-a-k8s-pod",children:"AA in a k8s pod"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"container runtime needs to support AppArmor (check your runtime)"}),"\n",(0,s.jsx)(n.li,{children:"AA needs to be installed on every node"}),"\n",(0,s.jsx)(n.li,{children:"AA profiles need to be available on every node i.e. on an available fsys that can be reached"}),"\n",(0,s.jsx)(n.li,{children:"AA profiles are PER CONTAINER no per pod"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["create pod with annotation of apparmor profile, container-specific i.e. the container named ",(0,s.jsx)(n.code,{children:"aa-pod"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: aa-pod\n  name: aa-pod\n  annotations:\n    container.apparmor.security.beta.kubernetes.io/aa-pod: localhost/docker-nginx\nspec:\n  containers:\n  - image: nginx\n    name: aa-pod\n    resources: {}\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: {}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"localhost/docker-nginx"}),' \u2190 NOT the filename, but the profile\'s name i.e. "docker-nginx"']}),"\n",(0,s.jsx)(n.h2,{id:"seccomp",children:"Seccomp"}),"\n",(0,s.jsx)(n.p,{children:"similar to apparmor in restriction/allow at the SYSCALL level, originally only allows the following 4 x calls"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"exit()"}),"\n",(0,s.jsx)(n.li,{children:"sigreturn()"}),"\n",(0,s.jsx)(n.li,{children:"read()"}),"\n",(0,s.jsx)(n.li,{children:"write()"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"originally a program would do a bunch of stuff unrestricted, no seccomp, then at a point in the program enable seccomp and it would be restricted from that point on."}),"\n",(0,s.jsx)(n.p,{children:"e.g. C"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-C",children:"#include\n\nint main () {\n  ...\n  prctl(PR_SET_SECCOMP, SECCOMP_MODE_STRICT)\n  ...\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["nowadays seccomp combined with BPF filters to form ",(0,s.jsx)(n.code,{children:"seccom-bpf"})," and here you can initialize a profile and do fine-grain controls"]}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-C",children:"#include\n\nint main() {\n  ...\n  # create filter\n  scmp_filter_ctx ctx = seccomp_init(SCMP_ACT_KILL);\n\n  # add your controls ALLOW\n  seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(read), 0);\n  seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(write), 0);\n  seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(sigreturn), 0);\n  seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit_group), 0);\n  ...\n\n  # load / enforce\n  seccomp_load(ctx);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"seccomp-on-docker",children:"Seccomp on Docker"}),"\n",(0,s.jsx)(n.p,{children:"save a seccomp profile somewhere"}),"\n",(0,s.jsxs)(n.p,{children:["save to ",(0,s.jsx)(n.code,{children:"docker.json"})," and then create a container using that profile"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"docker run --security-opt seccomp=default.json nginx"})}),"\n",(0,s.jsxs)(n.p,{children:["test by removing ",(0,s.jsx)(n.code,{children:"write"})," control from ",(0,s.jsx)(n.code,{children:"default.json"})," create another container with this profile and see it fail cos it needs ",(0,s.jsx)(n.code,{children:"write"})," permissions."]}),"\n",(0,s.jsx)(n.h3,{id:"seccomp-on-k8s",children:"Seccomp on K8s"}),"\n",(0,s.jsxs)(n.p,{children:["the profiles need to be available/accessible to the ",(0,s.jsx)(n.code,{children:"kubelet"})," to use, so put it in a profile directory"]}),"\n",(0,s.jsxs)(n.p,{children:["the default folder for the ",(0,s.jsx)(n.code,{children:"--seccomp-profile-root-string"})," points to ",(0,s.jsx)(n.code,{children:"/var/lib/kubelet/seccomp"})," so as long as you drop your profiles in there, it will be available for kubelet."]}),"\n",(0,s.jsx)(n.p,{children:"use securityContext for a per-container application"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: secc-pod\n  name: secc-pod\nspec:\n  securityContext:\n    seccompProfile:\n      type: Localhost\n      localhostProfile: default.json # filename\n  containers:\n  - image: nginx\n    name: secc-pod\n    resources: {}\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: {}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["remember you removed ",(0,s.jsx)(n.code,{children:"write"})," from ",(0,s.jsx)(n.code,{children:"default.json"})," from before which will cause an error if you try and create a pod from this, edit the profile and ensure it has ",(0,s.jsx)(n.code,{children:"write"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);