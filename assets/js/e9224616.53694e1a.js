"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[7190],{28453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>c});var i=o(96540);const s={},r=i.createContext(s);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(r.Provider,{value:n},e.children)}},84623:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"engineer/GCP/2020-05-25-GCE-OS-Login-VM","title":"Setup Google Compute Engine VM to ssh using OS Login.","description":"Published Date: 25-MAY-2020","source":"@site/docs/engineer/GCP/2020-05-25-GCE-OS-Login-VM.md","sourceDirName":"engineer/GCP","slug":"/engineer/GCP/2020-05-25-GCE-OS-Login-VM","permalink":"/docs/engineer/GCP/2020-05-25-GCE-OS-Login-VM","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/GCP/2020-05-25-GCE-OS-Login-VM.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"title":"Setup Google Compute Engine VM to ssh using OS Login."},"sidebar":"docsSidebar","previous":{"title":"Setup Ambassador API Gateway on GCP.","permalink":"/docs/engineer/GCP/2019-11-27-GCP-Install-Ambassador-Helm2"},"next":{"title":"Helm 3 Complete Guide - Kubernetes Package Manager and Application Deployment","permalink":"/docs/engineer/K8s/2019-11-11-Helm-3-Kubernetes-Package-Manager"}}');var s=o(74848),r=o(28453);const t={title:"Setup Google Compute Engine VM to ssh using OS Login."},c=void 0,a={},l=[{value:"Objective",id:"objective",level:2},{value:"Google API permissions",id:"google-api-permissions",level:2},{value:"GCP Service Account",id:"gcp-service-account",level:2},{value:"Terraform",id:"terraform",level:2},{value:"main.tf",id:"maintf",level:3},{value:"oslogin.tf",id:"oslogintf",level:3},{value:"Upload your SSH keys",id:"upload-your-ssh-keys",level:3},{value:"Build &amp; SSH",id:"build--ssh",level:2},{value:"get ip address &amp; ssh",id:"get-ip-address--ssh",level:3},{value:"References",id:"references",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Published Date: 25-MAY-2020"})}),"\n",(0,s.jsx)(n.p,{children:"A quick setup for when you're firing up GCE VM's and dont have to worry about managing and organizing ssh keys to jump into any of them. Setup OS Login for the project and any instance launched automatically allows access with the configure keys (obviously check your security needs)."}),"\n",(0,s.jsx)(n.h2,{id:"objective",children:"Objective"}),"\n",(0,s.jsxs)(n.p,{children:["To have a simple GCE VM instance you can ssh to easily with the same SSH key to any instance stood up in the project (can disble project-wide enable and do it per-instance using ",(0,s.jsx)(n.code,{children:"gcloud"}),")"]}),"\n",(0,s.jsx)(n.p,{children:"We will be using terraform to do the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Setup a simple GCE VM"}),"\n",(0,s.jsx)(n.li,{children:"Configure IAM for users to use OS Login method for managing ssh keys"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Manually upload ssh keys to GCP using ",(0,s.jsx)(n.code,{children:"gcloud"})]}),"\n",(0,s.jsx)(n.h2,{id:"google-api-permissions",children:"Google API permissions"}),"\n",(0,s.jsx)(n.p,{children:"You will need the following google api's enabled if you haven't already:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"cloudapis.googleapis.com             Google Cloud APIs"}),"\n",(0,s.jsx)(n.li,{children:"cloudresourcemanager.googleapis.com  Cloud Resource Manager API"}),"\n",(0,s.jsx)(n.li,{children:"compute.googleapis.com               Compute Engine API"}),"\n",(0,s.jsx)(n.li,{children:"oslogin.googleapis.com               Cloud OS Login API"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsxs)(n.p,{children:["find service ",(0,s.jsx)(n.code,{children:"gcloud services list --available"}),", enable with: ",(0,s.jsx)(n.code,{children:"gcloud services enable cloudresourcemanager.googleapis.com"})]}),"\n",(0,s.jsx)(n.h2,{id:"gcp-service-account",children:"GCP Service Account"}),"\n",(0,s.jsxs)(n.p,{children:["For terraform, I created a service account to run commands as ",(0,s.jsx)(n.code,{children:"terrform"})," user."]}),"\n",(0,s.jsxs)(n.p,{children:["Use this bash script to create a service account and a ",(0,s.jsx)(n.code,{children:"account.json"})," file for that user:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'#!/usr/bin/env bash\n\nproject="<your_project_name />"\n\ngcloud iam service-accounts create terraform \\\n    --display-name "Terraform Service Account" \\\n    --description "Service account to use with Terraform"\n\necho "Create IAM policy binding for the Terraform service account"\ngcloud projects add-iam-policy-binding "$\\{project}" \\\n  --member serviceAccount:"terraform@$\\{project}.iam.gserviceaccount.com" \\\n  --role roles/editor\n\necho "Create IAM service policy key \'account.json\'"\ngcloud iam service-accounts keys create account.json \\\n    --iam-account "terraform@$\\{project}.iam.gserviceaccount.com"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"terraform",children:"Terraform"}),"\n",(0,s.jsxs)(n.p,{children:["Now that we have our ",(0,s.jsx)(n.code,{children:"account.json"})," key file for our ",(0,s.jsx)(n.code,{children:"terraform"})," service account we can look at the following ",(0,s.jsx)(n.code,{children:"main.tf"})," file"]}),"\n",(0,s.jsx)(n.h3,{id:"maintf",children:"main.tf"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-terraform",children:'provider "google" {\n  credentials = "$\\{file("account.json")}"\n  project = "<your_project_name />"\n  region  = "us-east1"\n}\n\nresource "google_compute_instance" "demo" {\n  name         = "oslogin-demo"\n  machine_type = "n1-standard-1"\n  zone         = "us-east1-c"\n\n  tags = ["vm", "login"]\n\n  scheduling{\n    on_host_maintenance = "TERMINATE"\n  }\n\n  boot_disk {\n    initialize_params {\n      image = "ubuntu-os-cloud/ubuntu-1604-lts"\n      size = 50\n    }\n  }\n\n  network_interface {\n    network = "default"\n    access_config {\n    }\n  }\n\n  metadata = {\n    foo = "bar"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Super simple VM, based on ubuntu-16 LTS, all defaults."}),"\n",(0,s.jsx)(n.p,{children:"Next let's look at the OS Login setup"}),"\n",(0,s.jsx)(n.h3,{id:"oslogintf",children:"oslogin.tf"}),"\n",(0,s.jsx)(n.p,{children:"The two OS Login roles available are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"roles/compute.osLogin (non-root)"}),"\n",(0,s.jsx)(n.li,{children:"roles/compute.osAdminLogin (root available)"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["Your terraform user needs the ",(0,s.jsx)(n.code,{children:"Project IAM Admin"})," role enabled to be able to admin IAM Policy."]})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gcloud projects add-iam-policy-binding <your_project_name /> \\\n  --member serviceAccount:terraform@<your_project_name />.iam.gserviceaccount.com \\\n  --role roles/resourcemanager.projectIamAdmin\n"})}),"\n",(0,s.jsx)(n.p,{children:"Terraform for setting up OS Login"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-terraform",children:'resource "google_compute_project_metadata_item" "oslogin" {\n  project = "<your_project_name />"\n  key     = "enable-oslogin"\n  value   = "TRUE"\n}\n\nresource "google_project_iam_member" "owner_binding" {\n  project = "<your_project_name />"\n  role    = "roles/compute.osAdminLogin"\n  member  = "user:me@mydomain.com"\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["I'm using my GCP account owner account as the one that's going to login to any GCE instances created in this project, so the syntax is ",(0,s.jsx)(n.code,{children:"user:..."})," whereas if I were using a service account it would be e.g. ",(0,s.jsx)(n.code,{children:"serviceAccount:terraform@$\\{project}.iam.gserviceaccount.com"}),"."]})})}),"\n",(0,s.jsx)(n.h3,{id:"upload-your-ssh-keys",children:"Upload your SSH keys"}),"\n",(0,s.jsx)(n.p,{children:"This is the important step, upload the PUBLIC KEY of the pair you want to use to ssh into the instances"}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"gcloud compute os-login ssh-keys add --key-file ~/.ssh/ida_rsa.pub"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["this key will be associated with the GCLOUD USER you are logged in as i.e. not ",(0,s.jsx)(n.code,{children:"terraform"})]})}),"\n",(0,s.jsx)(n.p,{children:"For me, that was my GCP owner account on this project."}),"\n",(0,s.jsxs)(n.p,{children:["You can check your OS Login keys with this command: ",(0,s.jsx)(n.code,{children:"gcloud compute os-login ssh-keys list"})," or checkout your profile with ",(0,s.jsx)(n.code,{children:"gcloud compute os-login describe-profile"})]}),"\n",(0,s.jsx)(n.h2,{id:"build--ssh",children:"Build & SSH"}),"\n",(0,s.jsx)(n.p,{children:"Easy build, no remote statefile needed:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"terraform init"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"terraform apply"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"build takes about 18s, output looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"google_compute_project_metadata_item.oslogin: Creating...\ngoogle_project_iam_member.owner_binding: Creating...\ngoogle_compute_instance.demo: Creating...\ngoogle_compute_project_metadata_item.oslogin: Still creating... [10s elapsed]\ngoogle_project_iam_member.owner_binding: Still creating... [10s elapsed]\ngoogle_compute_instance.demo: Still creating... [10s elapsed]\ngoogle_project_iam_member.owner_binding: Creation complete after 13s [id=<your_project_name />/roles/compute.osAdminLogin/user:me@mydomain.com]\ngoogle_compute_project_metadata_item.oslogin: Creation complete after 14s [id=enable-oslogin]\ngoogle_compute_instance.demo: Creation complete after 18s [id=projects/<your_project_name />/zones/us-east1-c/instances/oslogin-demo]\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now, if all's gone right you will be able to ssh to your new vm."}),"\n",(0,s.jsx)(n.h3,{id:"get-ip-address--ssh",children:"get ip address & ssh"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gcloud compute instances list\nNAME          ZONE        MACHINE_TYPE   PREEMPTIBLE  INTERNAL_IP  EXTERNAL_IP    STATUS\noslogin-demo  us-east1-c  n1-standard-1               10.142.0.6   34.74.255.103  RUNNING\n"})}),"\n",(0,s.jsxs)(n.p,{children:["if you uploaded your default ",(0,s.jsx)(n.code,{children:"~/.ssh/id_rsa"})," keys, you can ssh directly like this:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"ssh me_mydomain_com@34.74.255.103"})}),"\n",(0,s.jsxs)(n.p,{children:["if you created a new key e.g. ",(0,s.jsx)(n.code,{children:"~/.ssh/newkey"}),", you will ssh like this (",(0,s.jsx)(n.code,{children:"-i /private/key"}),"):"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"ssh -i ~/.ssh/newkey me_mydomain_com@34.74.255.103"})}),"\n",(0,s.jsx)(n.p,{children:"And voila:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"Welcome to Ubuntu 16.04.6 LTS (GNU/Linux 4.15.0-1071-gcp x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n0 packages can be updated.\n0 updates are security updates.\n\n\n\nThe programs included with the Ubuntu system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nUbuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by\napplicable law.\n\n\nThe programs included with the Ubuntu system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nUbuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by\napplicable law.\n\nCreating directory '/home/me_mydomain_com'.\ngroups: cannot find name for group ID 1512007361\nme_mydomain_com@oslogin-demo:~$\n"})}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://medium.com/infrastructure-adventures/centralized-ssh-login-to-google-compute-engine-instances-d00f8654f379",children:"Centralized SSH login to Google Compute Engine instances"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.terraform.io/docs/providers/google/r/compute_instance.html#guest_accelerator",children:"Terraform: Google Compute Instance"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://cloud.google.com/compute/docs/instances/connecting-advanced#thirdpartytools",children:"Google: SSH with third party tools"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://cloud.google.com/iam/docs/granting-roles-to-service-accounts#gcloud",children:"Google: Granting Roles to Service Accounts"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);