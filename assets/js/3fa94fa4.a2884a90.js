"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[4723],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var i=s(96540);const r={},n=i.createContext(r);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(n.Provider,{value:t},e.children)}},36360:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"hacker/tryhackme/adbasics","title":"Active Directory Basics - TryHackMe Walkthrough and Study Notes","description":"Complete walkthrough of TryHackMe\'s Active Directory Basics room. Learn AD fundamentals, domain controllers, forests, authentication protocols, and Azure AD.","source":"@site/docs/hacker/tryhackme/adbasics.md","sourceDirName":"hacker/tryhackme","slug":"/hacker/tryhackme/adbasics","permalink":"/docs/hacker/tryhackme/adbasics","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/hacker/tryhackme/adbasics.md","tags":[{"inline":true,"label":"active-directory","permalink":"/docs/tags/active-directory"},{"inline":true,"label":"tryhackme","permalink":"/docs/tags/tryhackme"},{"inline":true,"label":"windows","permalink":"/docs/tags/windows"},{"inline":true,"label":"security","permalink":"/docs/tags/security"},{"inline":true,"label":"authentication","permalink":"/docs/tags/authentication"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":1,"frontMatter":{"title":"Active Directory Basics - TryHackMe Walkthrough and Study Notes","description":"Complete walkthrough of TryHackMe\'s Active Directory Basics room. Learn AD fundamentals, domain controllers, forests, authentication protocols, and Azure AD.","keywords":["active directory","tryhackme","AD basics","domain controller","kerberos","NTLM","azure ad","windows security"],"tags":["active-directory","tryhackme","windows","security","authentication"],"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"16 Essential Search Engines for Penetration Testing and Reconnaissance","permalink":"/docs/hacker/search"},"next":{"title":"TryHackMe Cyborg Walkthrough - Complete CTF Solution and Learning Guide","permalink":"/docs/hacker/tryhackme/cyborg"}}');var r=s(74848),n=s(28453);const o={title:"Active Directory Basics - TryHackMe Walkthrough and Study Notes",description:"Complete walkthrough of TryHackMe's Active Directory Basics room. Learn AD fundamentals, domain controllers, forests, authentication protocols, and Azure AD.",keywords:["active directory","tryhackme","AD basics","domain controller","kerberos","NTLM","azure ad","windows security"],tags:["active-directory","tryhackme","windows","security","authentication"],sidebar_position:1},c=void 0,a={},d=[{value:"Physcial AD",id:"physcial-ad",level:2},{value:"Forest",id:"forest",level:2},{value:"Users + Groups",id:"users--groups",level:2},{value:"Default Security Groups",id:"default-security-groups",level:3},{value:"Trust + Policies",id:"trust--policies",level:2},{value:"Domain Trust",id:"domain-trust",level:3},{value:"AD Domain Services + AuthN",id:"ad-domain-services--authn",level:2},{value:"Services",id:"services",level:3},{value:"AuthN",id:"authn",level:3},{value:"Azure AD",id:"azure-ad",level:2},{value:"Hands-on Lab",id:"hands-on-lab",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.admonition,{title:"Description",type:"info",children:[(0,r.jsxs)(t.p,{children:["These are my notes for the ",(0,r.jsx)(t.a,{href:"https://tryhackme.com/room/activedirectorybasics",children:"Active Directory Basics Room"})," on TryHackMe."]}),(0,r.jsx)(t.p,{children:"Credits: Me."}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"OS"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Level"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Rating"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Windows"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Easy"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2/5"})]})})]})]}),"\n",(0,r.jsx)(t.p,{children:"This room was mostly theory so these are notes on Active Directory Basics."}),"\n",(0,r.jsx)(t.h2,{id:"physcial-ad",children:"Physcial AD"}),"\n",(0,r.jsxs)(t.p,{children:["Domain Controllers (DC): ",(0,r.jsx)(t.em,{children:'"A domain controller is a Windows server that has Active Directory Domain Services (AD DS) installed and has been promoted to a domain controller in the forest. "'})]}),"\n",(0,r.jsxs)(t.p,{children:["AD DS Data Store: ",(0,r.jsx)(t.em,{children:'"The Active Directory Data Store holds the databases and processes needed to store and manage directory information such as users, groups, and services."'}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["keywords: ",(0,r.jsx)(t.code,{children:"NTDS.dit"})," database for AD data including hashes, stored in ",(0,r.jsx)(t.code,{children:"%SystemRoot%\\NTDS"}),", can only be accessed by the DC."]}),"\n",(0,r.jsx)(t.h2,{id:"forest",children:"Forest"}),"\n",(0,r.jsx)(t.p,{children:"The structure and hierarchy defining everything in AD. A forest is a collection of one or more domain trees inside an AD network."}),"\n",(0,r.jsxs)(t.p,{children:["keywords: ",(0,r.jsx)(t.code,{children:"Domains"}),", ",(0,r.jsx)(t.code,{children:"OU"}),", ",(0,r.jsx)(t.code,{children:"Trusts"}),", ",(0,r.jsx)(t.code,{children:"Objects"}),", ",(0,r.jsx)(t.code,{children:"Domain Services"}),", ",(0,r.jsx)(t.code,{children:"Domain Schema"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"users--groups",children:"Users + Groups"}),"\n",(0,r.jsx)(t.p,{children:"2 types of groups"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Security Groups: specifies permissions."}),"\n",(0,r.jsx)(t.li,{children:"Distribution Groups: specifies email distribution lists."}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"default-security-groups",children:"Default Security Groups"}),"\n",(0,r.jsx)(t.p,{children:"There are lots of them, examples: Domain Controllers, Domain Guests, Domain Admins etc."}),"\n",(0,r.jsx)(t.h2,{id:"trust--policies",children:"Trust + Policies"}),"\n",(0,r.jsx)(t.p,{children:'Together, allow domain + trees communicate and maintain "security" inside the network.'}),"\n",(0,r.jsx)(t.h3,{id:"domain-trust",children:"Domain Trust"}),"\n",(0,r.jsx)(t.p,{children:"2 x types of trust mechanisms:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Directional: flow from trusting --\x3e trusting domains"}),"\n",(0,r.jsx)(t.li,{children:'Transitive: "friend of a friend" trust i.e. not directly trusting, but trust by proxy, expanding to include other trusted domains.'}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"ad-domain-services--authn",children:"AD Domain Services + AuthN"}),"\n",(0,r.jsx)(t.h3,{id:"services",children:"Services"}),"\n",(0,r.jsx)(t.p,{children:"Services provided include:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"LDAP"}),"\n",(0,r.jsx)(t.li,{children:"Certificate Services (PKI)"}),"\n",(0,r.jsx)(t.li,{children:"DNS, NBT-NS (all things domain management)"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"authn",children:"AuthN"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Kerberos - ticket-granting tickets, service tickets"}),"\n",(0,r.jsx)(t.li,{children:"NTLM"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"azure-ad",children:"Azure AD"}),"\n",(0,r.jsx)(t.p,{children:"i.e. AD in the cloud."}),"\n",(0,r.jsx)(t.p,{children:"On-prem to Cloud equivalents"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"On-Prem"}),(0,r.jsx)(t.th,{children:"AzureAD"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"LDAP"}),(0,r.jsx)(t.td,{children:"Rest API"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"NTLM"}),(0,r.jsx)(t.td,{children:"OAuth/SAML"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Kerberos"}),(0,r.jsx)(t.td,{children:"OpenID"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"OU Tree"}),(0,r.jsx)(t.td,{children:"Flat Structure"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Domains+Forests"}),(0,r.jsx)(t.td,{children:"Tenants"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Trusts"}),(0,r.jsx)(t.td,{children:"Guests"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"hands-on-lab",children:"Hands-on Lab"}),"\n",(0,r.jsxs)(t.p,{children:["The lab was crap. Wrong ",(0,r.jsx)(t.code,{children:"PowerView.ps1"})," version of script didn't match the instructions and then the instructions were easily confusing."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);