"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[2488],{28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var r=s(96540);const a={},t=r.createContext(a);function d(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),r.createElement(t.Provider,{value:n},e.children)}},79486:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"study/CKS/Cluster Hardening/HardenRBAC","title":"Role Based Access Control (RBAC)","description":"RBAC is the use of (Cluster)Roles, (Cluster)RoleBindings and Service accounts to shape granual access to kubernetes resources.","source":"@site/docs/study/CKS/2. Cluster Hardening/HardenRBAC.md","sourceDirName":"study/CKS/2. Cluster Hardening","slug":"/study/CKS/Cluster Hardening/HardenRBAC","permalink":"/docs/study/CKS/Cluster Hardening/HardenRBAC","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/study/CKS/2. Cluster Hardening/HardenRBAC.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"title":"Role Based Access Control (RBAC)"},"sidebar":"docsSidebar","previous":{"title":"Secure Ingress","permalink":"/docs/study/CKS/Cluster Setup/ClusterSecureIngress"},"next":{"title":"API Hardening / Restricting","permalink":"/docs/study/CKS/Cluster Hardening/HardenRestrictAPI"}}');var a=s(74848),t=s(28453);const d={title:"Role Based Access Control (RBAC)"},c=void 0,l={},i=[{value:"Role &amp; Rolebinding",id:"role--rolebinding",level:2},{value:"ClusterRole &amp; ClusterRoleBinding",id:"clusterrole--clusterrolebinding",level:2},{value:"Accounts &amp; Users",id:"accounts--users",level:2},{value:"CertificateSigningRequests",id:"certificatesigningrequests",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"RBAC is the use of (Cluster)Roles, (Cluster)RoleBindings and Service accounts to shape granual access to kubernetes resources."}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.strong,{children:"role"})," define permissions - roles (where are they available? namespace=role, all-namespaces=clusterrole)"]}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.strong,{children:"service account"}),' is the "subject" who accesses/uses the Role.']}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.strong,{children:"binding"})," defines who gets them - bindings (where are they applied? namespace=rolebinding, all-namespces=clusterrolebinding)"]}),"\n",(0,a.jsx)(n.p,{children:"A role & rolebinding matrix"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"2 x 2 matrix of role/clusterrole && rolebinding/clusterrolebinding"}),"\n",(0,a.jsx)(n.li,{children:"namespaced vs non-namespaced (clusterwide) resources"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"valid combinations of the 2 x 2 matrix:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"role (namespaced) + rolebinding (namespaced) \u2705"}),"\n",(0,a.jsx)(n.li,{children:"clusterrole (non-namespaced) + clusterrolebinding (non-namespaced) \u2705"}),"\n",(0,a.jsx)(n.li,{children:"clusterrole (non-namespaced) + rolebinding (namespaced) \u2705"}),"\n",(0,a.jsx)(n.li,{children:"role (namesapced) + clusterrolebinding (non-namespaced) \u274c"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:['permissions are "additive" - specify "allowed", everything else ',(0,a.jsx)(n.code,{children:"denied"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"role--rolebinding",children:"Role & Rolebinding"}),"\n",(0,a.jsxs)(n.p,{children:["pro-tip: create well-formed yaml by using ",(0,a.jsx)(n.code,{children:"--dry-run"})]}),"\n",(0,a.jsxs)(n.p,{children:["e.g. ",(0,a.jsx)(n.code,{children:"k -n red create role secret-manager --verb=get --resource=secrets -oyaml --dry-run=client"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  creationTimestamp: null\n  name: secret-manager\n  namespace: red\nrules:\n- apiGroups:\n  - ""\n  resources:\n  - secrets\n  verbs:\n  - get\n---\n# k -n red create rolebinding secret-manager --role=secret-manager --user=jane -oyaml --dry-run=client\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  creationTimestamp: null\n  name: secret-manager\n  namespace: red\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: secret-manager\nsubjects:\n- apiGroup: rbac.authorization.k8s.io\n  kind: User\n  name: jane\n'})}),"\n",(0,a.jsx)(n.p,{children:"commands used:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"k create ns red\nk create ns blue\n\nk -n red create role secret-manager --verb=get --resource=secrets\nk -n red create rolebinding secret-manager --role=secret-manager --user=jane\nk -n blue create role secret-manager --verb=get --verb=list --resource=secrets\nk -n blue create rolebinding secret-manager --role=secret-manager --user=jane\n\n\n# check permissions\nk -n red auth can-i -h\nk -n red auth can-i create pods --as jane # no\nk -n red auth can-i get secrets --as jane # yes\nk -n red auth can-i list secrets --as jane # no\n\nk -n blue auth can-i list secrets --as jane # yes\nk -n blue auth can-i get secrets --as jane # yes\n\nk -n default auth can-i get secrets --as jane #no\n"})}),"\n",(0,a.jsx)(n.h2,{id:"clusterrole--clusterrolebinding",children:"ClusterRole & ClusterRoleBinding"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# k create clusterrole deploy-deleter --verb=delete --resource=deployment -oyaml --dry-run=client\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  creationTimestamp: null\n  name: deploy-deleter\nrules:\n- apiGroups:\n  - apps\n  resources:\n  - deployments\n  verbs:\n  - delete\n---\n\n# k create clusterrolebinding deploy-deleter --clusterrole=deploy-deleter --user=jane -oyaml --dry-run=client\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  creationTimestamp: null\n  name: deploy-deleter\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: deploy-deleter\nsubjects:\n- apiGroup: rbac.authorization.k8s.io\n  kind: User\n  name: jane\n"})}),"\n",(0,a.jsx)(n.p,{children:"commands used:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"k create clusterrole deploy-deleter --verb=delete --resource=deployment\n\nk create clusterrolebinding deploy-deleter --clusterrole=deploy-deleter --user=jane\n\nk -n red create rolebinding deploy-deleter --clusterrole=deploy-deleter --user=jim\n\n\n# test jane\nk auth can-i delete deploy --as jane # yes\nk auth can-i delete deploy --as jane -n red # yes\nk auth can-i delete deploy --as jane -n blue # yes\nk auth can-i delete deploy --as jane -A # yes\nk auth can-i create deploy --as jane --all-namespaces # no\n\n\n\n# test jim\nk auth can-i delete deploy --as jim # no\nk auth can-i delete deploy --as jim -A # no\nk auth can-i delete deploy --as jim -n red # yes\nk auth can-i delete deploy --as jim -n blue # no\n"})}),"\n",(0,a.jsx)(n.h2,{id:"accounts--users",children:"Accounts & Users"}),"\n",(0,a.jsx)(n.p,{children:"service account - machines, pods, created by k8s api\nuser accounts - no k8s user resource, uses IDM of cloud, a user just has its own cert & key."}),"\n",(0,a.jsxs)(n.p,{children:['the users "client cert" must be signed by the k8s CA, its "username" will be whatevers under the ',(0,a.jsx)(n.code,{children:"/CN=jane"})," part of the cert."]}),"\n",(0,a.jsx)(n.p,{children:"how does this user cert get created?"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"openssl CSR from user"}),"\n",(0,a.jsxs)(n.li,{children:["user sends this CSR to k8s API by including it in a ",(0,a.jsx)(n.code,{children:"CertificateSigningRequest"})," resource"]}),"\n",(0,a.jsx)(n.li,{children:"k8s API signs the CSR with CA (easier to manage CSR-signing as an API)"}),"\n",(0,a.jsx)(n.li,{children:"CRT is then available for user to download and use as auth to k8s."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Note"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"no way to invalidate a cert - once created, stays valid"}),"\n",(0,a.jsx)(n.li,{children:"if cert leaked your options are 1) remove all access via RBAC, 2) make sure to never use the username until cert expires OR 3) create new CA and re-issue all certs."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"certificatesigningrequests",children:"CertificateSigningRequests"}),"\n",(0,a.jsx)(n.p,{children:"flow: create key --\x3e create CSR --\x3e get k8s API to sign with CA --\x3e download CRT from k8s API --\x3e use CRT+KEY to talk to API"}),"\n",(0,a.jsxs)(n.p,{children:["note, in scenario ",(0,a.jsx)(n.code,{children:"user=jane"}),' so the CN has to be "jane".']}),"\n",(0,a.jsx)(n.p,{children:"commands used:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# create key\nopenssl genrsa -out jane.key 2048\nopenssl req -new -key jane.key -out jane.csr # only set Common Name = jane\n\n# e.g.\nCountry Name (2 letter code) [AU]:NZ\nState or Province Name (full name) [Some-State]:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:jane\nEmail Address []:\n\n"})}),"\n",(0,a.jsxs)(n.p,{children:["create ",(0,a.jsx)(n.code,{children:"CertificateSigningRequest"})," from the ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests",children:"k8s docs"})," into ",(0,a.jsx)(n.code,{children:"csr.yaml"})]}),"\n",(0,a.jsxs)(n.p,{children:["but in the ",(0,a.jsx)(n.code,{children:"request"})," section paste the output of: ",(0,a.jsx)(n.code,{children:"cat jane.csr | base64 -w 0"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: certificates.k8s.io/v1\nkind: CertificateSigningRequest\nmetadata:\n  name: myuser\nspec:\n  request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ21UQ0NBWUVDQVFBd1ZERUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeApJVEFmQmdOVkJBb01HRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpERU5NQXNHQTFVRUF3d0VhbUZ1ClpUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU05SWRsb2hITmhJRWMxUVp0Z2wKMGlwNUFCTU9ZakFiSDFCdi9Hd0pNNmI0QjVtdXZzMlJXdUVVWnRnMW5ZWXZaY0JNZUpNRXM3VFJyU1JZU0ZGNAowRUNMcGdpNHBULzhVNVZjNXNObC9MWk5zdndCNFdqbXVGZjFDeVRDSkFja2NQOFJIdHZTdDZiRGMvcWlmQm9QCmM3UHg4YnI1K1dncmcvYk0zL2RndXBOUnhuMVNLYnNMNndnN1p1OTlwRWxsam1ndlpEMnpFVEV6V2hNclRYU20KSktMdW9US0p0S2VxZzB5NndyaVpyZWxBaTFrUTJ0SlVGUHVyZ2R1cktWOTVON0M3Vk5EeFNDK2VtMndLL01IVQplWXhwaEJUWm5lSWZleG5velpNcTA2Vk1OQ3RseVRNS1BMWDZuKzZMeENBSjk3U0pYbTR6Q0dQclNaWjFaTU9QCnh3Y0NBd0VBQWFBQU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUsxT2QzQ3J6aE1xN1g0THpQQTBVK1ZiYUEKcTFwZnlVYXprSEEwTXlncUhFK1lQMVNnNEkva0ZYVkE3NlZKZ3FHY29BalZNRFNFQkdYT3BKdkZaMlBMdUZsKwpTSGtHM2pXYTcwQWdIV0w5a3N3R0pHUDBsNHRhYXE0UHY4M0lYcW5rdW4yQU9PU0tDKzRWOHd6YmZSbWhUT25hCnpzOWxtYUp3VW9EajhQMjZVQlh5QXVlUDFEbGJGZnNSZkpvUHJ2UXNCaDZzZ3ZZOU1ja1BIZ0tZSThWL2xHbWEKV1V2YzN1UHBMWWlITXRNd2dlZENOSGppd0F2OU1ERFhFYTRhZzVMWWdaN2Q5TEdxbFRHaUEyY2JZRHoveE9uTAorRmw1SWoxUGtOdC85dWlielhLUmNZM0orVmwwSEFuTGxIbjM1MGNPaHI3ZEc5SDdvWE92OEtJeUZEZEIKLS0tLS1FTkQgQ0VSVElGSUNBVEUgUkVRVUVTVC0tLS0tCg==\n  signerName: kubernetes.io/kube-apiserver-client\n  usages:\n  - client auth\n"})}),"\n",(0,a.jsxs)(n.p,{children:["now create the CSR resource: ",(0,a.jsx)(n.code,{children:"k create -f ./csr.yaml"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"root@cks-master:~/csr# k create -f ./csr.yaml \ncertificatesigningrequest.certificates.k8s.io/jane created\nroot@cks-master:~/csr# k get csr\nNAME   AGE   SIGNERNAME                            REQUESTOR          CONDITION\njane   5s    kubernetes.io/kube-apiserver-client   kubernetes-admin   Pending\n"})}),"\n",(0,a.jsx)(n.p,{children:"we can see the CSR is pending - admin, needs to approve this."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"root@cks-master:~/csr# k certificate approve jane\ncertificatesigningrequest.certificates.k8s.io/jane approved\nroot@cks-master:~/csr# k get csr\nNAME   AGE   SIGNERNAME                            REQUESTOR          CONDITION\njane   33s   kubernetes.io/kube-apiserver-client   kubernetes-admin   Approved,Issued\n"})}),"\n",(0,a.jsx)(n.p,{children:"now that the CSR is signed, grab that CRT"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'root@cks-master:~/csr# k get csr -oyaml\napiVersion: v1\nitems:\n- apiVersion: certificates.k8s.io/v1\n  kind: CertificateSigningRequest\n  metadata:\n    creationTimestamp: "2021-09-02T22:25:09Z"\n    name: jane\n    resourceVersion: "421994"\n    uid: 2cc50fcc-d565-47fb-baf6-6d3db57bde84\n  spec:\n    groups:\n    - system:masters\n    - system:authenticated\n    request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ21UQ0NBWUVDQVFBd1ZERUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeApJVEFmQmdOVkJBb01HRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpERU5NQXNHQTFVRUF3d0VhbUZ1ClpUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU05SWRsb2hITmhJRWMxUVp0Z2wKMGlwNUFCTU9ZakFiSDFCdi9Hd0pNNmI0QjVtdXZzMlJXdUVVWnRnMW5ZWXZaY0JNZUpNRXM3VFJyU1JZU0ZGNAowRUNMcGdpNHBULzhVNVZjNXNObC9MWk5zdndCNFdqbXVGZjFDeVRDSkFja2NQOFJIdHZTdDZiRGMvcWlmQm9QCmM3UHg4YnI1K1dncmcvYk0zL2RndXBOUnhuMVNLYnNMNndnN1p1OTlwRWxsam1ndlpEMnpFVEV6V2hNclRYU20KSktMdW9US0p0S2VxZzB5NndyaVpyZWxBaTFrUTJ0SlVGUHVyZ2R1cktWOTVON0M3Vk5EeFNDK2VtMndLL01IVQplWXhwaEJUWm5lSWZleG5velpNcTA2Vk1OQ3RseVRNS1BMWDZuKzZMeENBSjk3U0pYbTR6Q0dQclNaWjFaTU9QCnh3Y0NBd0VBQWFBQU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUsxT2QzQ3J6aE1xN1g0THpQQTBVK1ZiYUEKcTFwZnlVYXprSEEwTXlncUhFK1lQMVNnNEkva0ZYVkE3NlZKZ3FHY29BalZNRFNFQkdYT3BKdkZaMlBMdUZsKwpTSGtHM2pXYTcwQWdIV0w5a3N3R0pHUDBsNHRhYXE0UHY4M0lYcW5rdW4yQU9PU0tDKzRWOHd6YmZSbWhUT25hCnpzOWxtYUp3VW9EajhQMjZVQlh5QXVlUDFEbGJGZnNSZkpvUHJ2UXNCaDZzZ3ZZOU1ja1BIZ0tZSThWL2xHbWEKV1V2YzN1UHBMWWlITXRNd2dlZENOSGppd0F2OU1ERFhFYTRhZzVMWWdaN2Q5TEdxbFRHaUEyY2JZRHoveE9uTAorRmw1SWoxUGtOdC85dWlielhLUmNZM0orVmwwSEFuTGxIbjM1MGNPaHI3ZEc5SDdvWE92OEtJeUZEZEIKLS0tLS1FTkQgQ0VSVElGSUNBVEUgUkVRVUVTVC0tLS0tCg==\n    signerName: kubernetes.io/kube-apiserver-client\n    usages:\n    - client auth\n    username: kubernetes-admin\n  status:\n    certificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPVENDQWlHZ0F3SUJBZ0lRRTdMemQzcWRaREd1Q3N5WUdkTEcxVEFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwcmRXSmxjbTVsZEdWek1CNFhEVEl4TURrd01qSXlNakF6T1ZvWERUSXlNRGt3TWpJeQpNakF6T1Zvd1ZERUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdUQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WCkJBb1RHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpERU5NQXNHQTFVRUF4TUVhbUZ1WlRDQ0FTSXcKRFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU05SWRsb2hITmhJRWMxUVp0Z2wwaXA1QUJNTwpZakFiSDFCdi9Hd0pNNmI0QjVtdXZzMlJXdUVVWnRnMW5ZWXZaY0JNZUpNRXM3VFJyU1JZU0ZGNDBFQ0xwZ2k0CnBULzhVNVZjNXNObC9MWk5zdndCNFdqbXVGZjFDeVRDSkFja2NQOFJIdHZTdDZiRGMvcWlmQm9QYzdQeDhicjUKK1dncmcvYk0zL2RndXBOUnhuMVNLYnNMNndnN1p1OTlwRWxsam1ndlpEMnpFVEV6V2hNclRYU21KS0x1b1RLSgp0S2VxZzB5NndyaVpyZWxBaTFrUTJ0SlVGUHVyZ2R1cktWOTVON0M3Vk5EeFNDK2VtMndLL01IVWVZeHBoQlRaCm5lSWZleG5velpNcTA2Vk1OQ3RseVRNS1BMWDZuKzZMeENBSjk3U0pYbTR6Q0dQclNaWjFaTU9QeHdjQ0F3RUEKQWFOR01FUXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRQpHREFXZ0JReWxzQWxMUlo1UTVEeTZYVW9PVzdLaTNIQ0NUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFTcW1vCmVSSDFVL01QMFF0ZExiV1M0Z1kzVVZYK3BEYlZRdlZvUEFxcENWMGVDbml6VXRtTzlJMW1DVnBEZ2pNQ3ZZZWMKaWFYaFBwSmtIQWd6UWJnSEFoVUJrbzB6OVQ5ZURDV2oxWTZERUhhV3FoSVkrWkFvR004Q0VtMnJxTEJqekJJOApWaWZndkZJRks5eG80SHovWFE0dG5NRGl3alFEZHNGT0dzbTJXUG4vUzZQa1VoSHppRXdTSGcvOGZjUVZDOWdECkVVV3h3eGhHTDNvMElHNm9NdlExNkRmVHVvbVhpT1RLQVFJYy91bDd6WUlYeXBoNlBvd1NVUEdWUHdZRkpPQVoKaGp6Q2c4bUhQMm1naWduclY2ZjZncE1CSmdyWDVoVjJ6OVNFUEhkdFJ5QmFySXA4SFNwRllXbGdWbnkvWjlHRgovdWU0V2xVM2FqSFdpeXFTSWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    conditions:\n    - lastTransitionTime: "2021-09-02T22:25:39Z"\n      lastUpdateTime: "2021-09-02T22:25:39Z"\n      message: This CSR was approved by kubectl certificate approve.\n      reason: KubectlApprove\n      status: "True"\n      type: Approved\nkind: List\nmetadata:\n  resourceVersion: ""\n  selfLink: ""\n'})}),"\n",(0,a.jsxs)(n.p,{children:["copy the ",(0,a.jsx)(n.code,{children:"certificate:"})," section, base64 decode it (",(0,a.jsx)(n.code,{children:"-d"}),"), and that is now your CRT."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"echo LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPVENDQWlHZ0F3SUJBZ0lRRTdMemQzcWRaREd1Q3N5WUdkTEcxVEFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwcmRXSmxjbTVsZEdWek1CNFhEVEl4TURrd01qSXlNakF6T1ZvWERUSXlNRGt3TWpJeQpNakF6T1Zvd1ZERUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdUQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WCkJBb1RHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpERU5NQXNHQTFVRUF4TUVhbUZ1WlRDQ0FTSXcKRFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU05SWRsb2hITmhJRWMxUVp0Z2wwaXA1QUJNTwpZakFiSDFCdi9Hd0pNNmI0QjVtdXZzMlJXdUVVWnRnMW5ZWXZaY0JNZUpNRXM3VFJyU1JZU0ZGNDBFQ0xwZ2k0CnBULzhVNVZjNXNObC9MWk5zdndCNFdqbXVGZjFDeVRDSkFja2NQOFJIdHZTdDZiRGMvcWlmQm9QYzdQeDhicjUKK1dncmcvYk0zL2RndXBOUnhuMVNLYnNMNndnN1p1OTlwRWxsam1ndlpEMnpFVEV6V2hNclRYU21KS0x1b1RLSgp0S2VxZzB5NndyaVpyZWxBaTFrUTJ0SlVGUHVyZ2R1cktWOTVON0M3Vk5EeFNDK2VtMndLL01IVWVZeHBoQlRaCm5lSWZleG5velpNcTA2Vk1OQ3RseVRNS1BMWDZuKzZMeENBSjk3U0pYbTR6Q0dQclNaWjFaTU9QeHdjQ0F3RUEKQWFOR01FUXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRQpHREFXZ0JReWxzQWxMUlo1UTVEeTZYVW9PVzdLaTNIQ0NUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFTcW1vCmVSSDFVL01QMFF0ZExiV1M0Z1kzVVZYK3BEYlZRdlZvUEFxcENWMGVDbml6VXRtTzlJMW1DVnBEZ2pNQ3ZZZWMKaWFYaFBwSmtIQWd6UWJnSEFoVUJrbzB6OVQ5ZURDV2oxWTZERUhhV3FoSVkrWkFvR004Q0VtMnJxTEJqekJJOApWaWZndkZJRks5eG80SHovWFE0dG5NRGl3alFEZHNGT0dzbTJXUG4vUzZQa1VoSHppRXdTSGcvOGZjUVZDOWdECkVVV3h3eGhHTDNvMElHNm9NdlExNkRmVHVvbVhpT1RLQVFJYy91bDd6WUlYeXBoNlBvd1NVUEdWUHdZRkpPQVoKaGp6Q2c4bUhQMm1naWduclY2ZjZncE1CSmdyWDVoVjJ6OVNFUEhkdFJ5QmFySXA4SFNwRllXbGdWbnkvWjlHRgovdWU0V2xVM2FqSFdpeXFTSWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== | base64 -d > jane.crt\n"})}),"\n",(0,a.jsxs)(n.p,{children:["now we need to add a jane user and context to your kubeconfig to talk to the API as ",(0,a.jsx)(n.code,{children:"jane"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# add jane user credentials to kubeconfig\nroot@cks-master:~/csr# k config set-credentials jane --client-key=jane.key --client-certificate=jane.crt\nUser "jane" set.\n'})}),"\n",(0,a.jsxs)(n.p,{children:["note: ",(0,a.jsx)(n.code,{children:"set-credentials"})," in the above way just puts references in the ",(0,a.jsx)(n.code,{children:"~/.kube/config"})," file like this"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"kind: Config\npreferences: {}\nusers:\n- name: jane\n  user:\n    client-certificate: /root/csr/jane.crt\n    client-key: /root/csr/jane.key\n"})}),"\n",(0,a.jsxs)(n.p,{children:["to embed the cert+key and use the contents of the files instead of referencing them, add ",(0,a.jsx)(n.code,{children:"--embed-certs"})," like this: ",(0,a.jsx)(n.code,{children:"k config set-credentials jane --client-key=jane.key --client-certificate=jane.crt --embed-certs"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["have a look at ",(0,a.jsx)(n.code,{children:"~/.kube/config"})," and see jane now has a context"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"kind: Config\npreferences: {}\nusers:\n- name: jane\n  user:\n    client-certificate: /root/csr/jane.crt\n    client-key: /root/csr/jane.key\n"})}),"\n",(0,a.jsx)(n.p,{children:"so user is created, now we need to create a jane context"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'root@cks-master:~/csr# k config set-context jane --cluster=kubernetes --user=jane\nContext "jane" created.\nroot@cks-master:~/csr# k config get-contexts \nCURRENT   NAME                          CLUSTER      AUTHINFO           NAMESPACE\n          jane                          kubernetes   jane               \n*         kubernetes-admin@kubernetes   kubernetes   kubernetes-admin   \n'})}),"\n",(0,a.jsx)(n.p,{children:"jane context has now been added"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"root@cks-master:~/csr# k config view\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: DATA+OMITTED\n    server: https://10.152.0.2:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: jane\n  name: jane\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: jane\n  user:\n    client-certificate: /root/csr/jane.crt\n    client-key: /root/csr/jane.key\n- name: kubernetes-admin\n  user:\n    client-certificate-data: REDACTED\n    client-key-data: REDACTED\n"})}),"\n",(0,a.jsxs)(n.p,{children:["set it and use it: ",(0,a.jsx)(n.code,{children:"k config use-context jane"})]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}}}]);