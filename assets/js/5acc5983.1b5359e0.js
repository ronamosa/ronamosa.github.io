"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[5438],{28453:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>i});var n=s(96540);const t={},a=n.createContext(t);function c(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(a.Provider,{value:r},e.children)}},64748:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"engineer/K8s/2020-08-17-Secrethub-Secret-Management","title":"SecretHub Kubernetes Secrets Management - Secure Secret Storage and Distribution","description":"Complete guide to using SecretHub for Kubernetes secrets management. Learn secure secret storage, distribution, and access control for containerized applications.","source":"@site/docs/engineer/K8s/2020-08-17-Secrethub-Secret-Management.md","sourceDirName":"engineer/K8s","slug":"/engineer/K8s/2020-08-17-Secrethub-Secret-Management","permalink":"/docs/engineer/K8s/2020-08-17-Secrethub-Secret-Management","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/K8s/2020-08-17-Secrethub-Secret-Management.md","tags":[{"inline":true,"label":"kubernetes","permalink":"/docs/tags/kubernetes"},{"inline":true,"label":"secrets","permalink":"/docs/tags/secrets"},{"inline":true,"label":"security","permalink":"/docs/tags/security"},{"inline":true,"label":"secrethub","permalink":"/docs/tags/secrethub"},{"inline":true,"label":"management","permalink":"/docs/tags/management"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":5,"frontMatter":{"title":"SecretHub Kubernetes Secrets Management - Secure Secret Storage and Distribution","description":"Complete guide to using SecretHub for Kubernetes secrets management. Learn secure secret storage, distribution, and access control for containerized applications.","keywords":["secrethub","kubernetes secrets","secret management","secure storage","k8s security","secrets distribution","container security"],"tags":["kubernetes","secrets","security","secrethub","management"],"sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Ambassador API Gateway TLS Security - Disable TLS 1.0 and 1.1 for Better Security","permalink":"/docs/engineer/K8s/2019-07-09-Ambassador-Disable-TLS1"},"next":{"title":"Home Lab Infrastructure Hub: Complete Setup & Automation Guide","permalink":"/docs/engineer/LAB"}}');var t=s(74848),a=s(28453);const c={title:"SecretHub Kubernetes Secrets Management - Secure Secret Storage and Distribution",description:"Complete guide to using SecretHub for Kubernetes secrets management. Learn secure secret storage, distribution, and access control for containerized applications.",keywords:["secrethub","kubernetes secrets","secret management","secure storage","k8s security","secrets distribution","container security"],tags:["kubernetes","secrets","security","secrethub","management"],sidebar_position:5},i=void 0,o={},l=[{value:"Objective",id:"objective",level:2},{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Storage Account &amp; Key",id:"storage-account--key",level:3},{value:"Service Principal",id:"service-principal",level:3},{value:"SSH Public Keys",id:"ssh-public-keys",level:3},{value:"SecretHub Setup",id:"secrethub-setup",level:2},{value:"Directory Structure",id:"directory-structure",level:3},{value:"Create Directories",id:"create-directories",level:3},{value:"Create SecretHub Secrets",id:"create-secrethub-secrets",level:3},{value:"Terraform AKS Setup",id:"terraform-aks-setup",level:2},{value:"Install Terraform Provider",id:"install-terraform-provider",level:3},{value:"SecretHub Terraform Resources",id:"secrethub-terraform-resources",level:3},{value:"Run Deployment",id:"run-deployment",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsx)(r.p,{children:"Published Date: 17-AUG-2020"})}),"\n",(0,t.jsx)(r.p,{children:"A simple example of setting up SecretHub secrets manager to secure all your application and infrastructure secrets at deployment"}),"\n",(0,t.jsx)(r.p,{children:"Secrets management, especially as part of a project/product team, is something that can easily get very messy with user, system and application credentials all over the place due to a lack of a secrets management system and practice setup. It's important to figure this out early in the piece, especially for all the engineers who are going to be working on the application and infrastructure for that app, you want people to come into the team and have access to everything they need and not have to compromise any security to do so."}),"\n",(0,t.jsx)(r.h2,{id:"objective",children:"Objective"}),"\n",(0,t.jsxs)(r.p,{children:["In this post I'm going to go through setting up ",(0,t.jsx)(r.a,{href:"https://secrethub.io/docs/start/getting-started/",children:"SecretHub Secret Manager"})," to take care of the following common secrets management patterns:"]}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Shell Environment secrets"}),"\n",(0,t.jsx)(r.li,{children:"Infrastructure Code secrets"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Essentially we're taking something that usually looks like this:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"pipeline problem",src:s(67296).A+"",width:"921",height:"281"})}),"\n",(0,t.jsx)(r.p,{children:"Into this:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"pipeline solution",src:s(99228).A+"",width:"962",height:"412"})}),"\n",(0,t.jsx)(r.p,{children:"By the end you will see how secrets can be managed for:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"A storage account key for terraform remote state file, in an ENV variable"}),"\n",(0,t.jsx)(r.li,{children:"An azure service principal for AKS, in the infrastructure code (terraform)"}),"\n",(0,t.jsx)(r.li,{children:"ssh private keys for AKS nodes, also in the infrastructure code (terraform)"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,t.jsx)(r.p,{children:"This post builds on Microsoft Azure so to follow along you will need the following things:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Azure Account"}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"az-cli"})," tool"]}),"\n",(0,t.jsxs)(r.li,{children:["terraform ",(0,t.jsx)(r.code,{children:"0.12.x"})]}),"\n",(0,t.jsxs)(r.li,{children:["clone of repo ",(0,t.jsx)(r.a,{href:"https://github.com/ronamosa/aks-secrethub-cluster",children:"'aks-secrethub-cluster'"})]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"storage-account--key",children:"Storage Account & Key"}),"\n",(0,t.jsx)(r.p,{children:"Best practice for Terraform means using a remote state file saved on your cloud provider (securely) so we need to create an Azure storage account."}),"\n",(0,t.jsx)(r.p,{children:"First, create a resource group:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'export RESOURCE_GROUP_NAME="terraform-rg"\nexport LOCATION="australiasoutheast"\naz group create --name $\\{RESOURCE_GROUP_NAME} --location $\\{LOCATION}\n'})}),"\n",(0,t.jsx)(r.p,{children:"Now create the storage account:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'export STORAGE_ACCOUNT_NAME="terraform"\naz storage account create --resource-group $\\{RESOURCE_GROUP_NAME} --name $\\{STORAGE_ACCOUNT_NAME} --sku Standard_LRS --encryption-services blob\n'})}),"\n",(0,t.jsx)(r.p,{children:"Get the ARM access key from the storage account and use it to create a storage account container:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'CONTAINER_NAME="tfstate"\nexport ARM_ACCESS_KEY=$(az storage account keys list --resource-group $\\{RESOURCE_GROUP_NAME} --account-name $\\{STORAGE_ACCOUNT_NAME} --query [0].value -o tsv)\naz storage container create --name $\\{CONTAINER_NAME} --account-name $\\{STORAGE_ACCOUNT_NAME} --account-key $\\{ARM_ACCESS_KEY}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Note the value of your ",(0,t.jsx)(r.code,{children:"ARM_ACCESS_KEY"})," somewhere for later."]}),"\n",(0,t.jsx)(r.h3,{id:"service-principal",children:"Service Principal"}),"\n",(0,t.jsx)(r.p,{children:"AKS needs a service principal with the permission to provision & manage resources in Azure."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'# you need your subcription ID handy\naz account set --subscription="SUBSCRIPTION_ID"\naz ad sp create-for-rbac --role="Contributor" --scopes="/subscriptions/SUBSCRIPTION_ID"\n'})}),"\n",(0,t.jsx)(r.p,{children:"Output looks like this:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'{\n  "appId": "00000000-0000-0000-0000-000000000000",\n  "displayName": "azure-cli-2020-08-17-10-41-15",\n  "name": "http://azure-cli-2020-08-17-10-41-15",\n  "password": "0000-0000-0000-0000-000000000000",\n  "tenant": "00000000-0000-0000-0000-000000000000"\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Note the ",(0,t.jsx)(r.code,{children:"appId"})," as ",(0,t.jsx)(r.code,{children:"SPN_ID"})," and ",(0,t.jsx)(r.code,{children:"password"})," as ",(0,t.jsx)(r.code,{children:"SPN_SECRET"})," for later."]}),"\n",(0,t.jsx)(r.h3,{id:"ssh-public-keys",children:"SSH Public Keys"}),"\n",(0,t.jsxs)(r.p,{children:["AKS ",(0,t.jsx)(r.code,{children:"linux_profile"})," requires an ",(0,t.jsx)(r.code,{children:"ssh_key"})," public key used to access the cluster."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-terraform",children:"  linux_profile {\n    admin_username = var.vm_user_name\n\n    ssh_key {\n      key_data = data.secrethub_secret.aks_ssh_key.value\n    }\n  }\n"})}),"\n",(0,t.jsx)(r.p,{children:"Generate a new keypair:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"$ ssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/user/.ssh/id_rsa): ./secrethub-keypair\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in ./secrethub-keypair.\nYour public key has been saved in ./secrethub-keypair.pub.\nThe key fingerprint is:\nSHA256:80P9EDgEkiEVpgpiYEuzqWFAJW43TlBqKimTvezHIjg user@laptop\nThe keys randomart image is:\n+---[RSA 2048]----+\n|+Boo..*+...      |\n|* O  +.. . .     |\n|+@ +.     o .    |\n|O*+..      o .   |\n|O o.    S . o    |\n|oo .     +   o   |\n|. o.      o   .  |\n|E.. o      .     |\n| o.o             |\n+----[SHA256]-----+\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Once you have your account, check it with: ",(0,t.jsx)(r.code,{children:"secrethub account inspect"})]}),"\n",(0,t.jsxs)(r.p,{children:["Substitute ",(0,t.jsx)(r.code,{children:"SECRETHUB_ACCOUNT"})," for your secrethub account from now on."]}),"\n",(0,t.jsx)(r.h2,{id:"secrethub-setup",children:"SecretHub Setup"}),"\n",(0,t.jsx)(r.h3,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,t.jsx)(r.p,{children:"Your secrethub setup is path based, so you need to think about directory structure of how you want your secret mapped out."}),"\n",(0,t.jsxs)(r.p,{children:["For this simple setup we will go with the following ",(0,t.jsx)(r.a,{href:"https://secrethub.io/docs/basics/best-practices/",children:"recommended structure"}),", to group our secrets in terms of ",(0,t.jsx)(r.code,{children:"environments"})," first and then more granularly in terms of ",(0,t.jsx)(r.code,{children:"application"})," they belong to:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-txt",children:"$SECRETHUB_ACCOUNT/\n\u251c\u2500\u2500 aks_secrets/\n    \u2514\u2500\u2500 prod/\n        \u251c\u2500\u2500 terraform/\n        |   |-- aks_service_principal_id\n        |   |-- aks_service_principal_secret\n        |   |-- aks_ssh_key\n        |\u2500\u2500 azure/\n            |-- arm_access_key\n"})}),"\n",(0,t.jsx)(r.h3,{id:"create-directories",children:"Create Directories"}),"\n",(0,t.jsx)(r.p,{children:"We need to create the directory paths mentioned in the previous section for our secrets:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"secrethub repo init $SECRETHUB_ACCOUNT/aks_secrets\nsecrethub mkdir $SECRETHUB_ACCOUNT/aks_secrets/prod\nsecrethub mkdir $SECRETHUB_ACCOUNT/aks_secrets/prod/terraform\nsecrethub mkdir $SECRETHUB_ACCOUNT/aks_secrets/prod/azure\n"})}),"\n",(0,t.jsx)(r.h3,{id:"create-secrethub-secrets",children:"Create SecretHub Secrets"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"# azure secrets directory\necho $\\{ARM_ACCESS_KEY} | secrethub write $SECRETHUB_ACCOUNT/aks_secrets/prod/azure/arm_access_key\n\n# terraform secrets directory\necho $\\{SPN_ID} | secrethub write $SECRETHUB_ACCOUNT/aks_secrets/prod/terraform/aks_service_principal_id\necho $\\{SPN_SECRET} | secrethub write $SECRETHUB_ACCOUNT/aks_secrets/prod/terraform/aks_service_principal_secret\ncat $\\{SSH_KEYPAIR} | secrethub write $SECRETHUB_ACCOUNT/aks_secrets/prod/terraform/aks_ssh_key\n"})}),"\n",(0,t.jsx)(r.h2,{id:"terraform-aks-setup",children:"Terraform AKS Setup"}),"\n",(0,t.jsxs)(r.p,{children:["Clone the following repo if you haven't already done so ",(0,t.jsx)(r.a,{href:"https://github.com/ronamosa/aks-secrethub-cluster",children:"'aks-secrethub-cluster'"})]}),"\n",(0,t.jsx)(r.h3,{id:"install-terraform-provider",children:"Install Terraform Provider"}),"\n",(0,t.jsxs)(r.p,{children:["SecretHub provides a terraform provider, follow the installation instructions found at ",(0,t.jsx)(r.a,{href:"https://secrethub.io/docs/reference/terraform/install/",children:"'Install SecretHub Terraform Provider'"})]}),"\n",(0,t.jsxs)(r.p,{children:["Or, run this for ",(0,t.jsx)(r.code,{children:"amd64"})," version:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"mkdir -p ~/.terraform.d/plugins && curl -SfL https://github.com/secrethub/terraform-provider-secrethub/releases/latest/download/terraform-provider-secrethub-linux-amd64.tar.gz | tar zxf - -C ~/.terraform.d/plugins\n"})}),"\n",(0,t.jsx)(r.h3,{id:"secrethub-terraform-resources",children:"SecretHub Terraform Resources"}),"\n",(0,t.jsx)(r.p,{children:"The main components where all the magic happen are as follows:"}),"\n",(0,t.jsxs)(r.p,{children:["Declare the provider, and where to find your secrethub credentials in ",(0,t.jsx)(r.code,{children:"prodiver.tf"})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-hcl",children:'provider "secrethub" {\n  credential = file("~/.secrethub/credential")\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Because your secrets already exist, you want to set them up as data sources in ",(0,t.jsx)(r.code,{children:"aks.tf"})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsxs)(r.em,{children:["(remember to replace ",(0,t.jsx)(r.code,{children:"$SECRETHUB_ACCOUNT"})," with your account details)"]})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-hcl",children:'# secrethub secret - service principal id\ndata "secrethub_secret" "aks_service_principal_id" {\n  path = "$SECRETHUB_ACCOUNT/aks_secrets/prod/terraform/aks_service_principal_id"\n}\n\n# secrethub secret - service principal secret\ndata "secrethub_secret" "aks_service_principal_secret" {\n  path = "$SECRETHUB_ACCOUNT/aks_secrets/prod/terraform/aks_service_principal_secret"\n}\n\n# secrethub secret - ssh key for aks nodes\ndata "secrethub_secret" "aks_ssh_key" {\n  path = "$SECRETHUB_ACCOUNT/aks_secrets/prod/terraform/aks_ssh_key"\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["As a deployment-time secret, you use the file provided, ",(0,t.jsx)(r.code,{children:"secrethub.env"})," which has the entry for the ",(0,t.jsx)(r.code,{children:"ARM_ACCESS_KEY"})," to access your remote storage account to manage the terraform state file:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"{% raw %}\nARM_ACCESS_KEY = \\{\\{ $SECRETHUB_ACCOUNT/aks_secrets/prod/azure/arm_access_key \\}\\}\n{% endraw %}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"run-deployment",children:"Run Deployment"}),"\n",(0,t.jsxs)(r.p,{children:["Make sure to update ",(0,t.jsx)(r.code,{children:"aks.tf"})," backend details, with your details (see above)"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-hcl",children:'terraform {\n  backend "azurerm" {\n    resource_group_name  = RESOURCE_GROUP_NAME\n    storage_account_name = STORAGE_ACCOUNT_NAME\n    container_name       = CONTAINER_NAME\n  }\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["After you have confirmed everything is in place, use the ",(0,t.jsx)(r.code,{children:"make"})," command to build your infra:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"ENV=prod make plan\nENV=prod make apply\n"})}),"\n",(0,t.jsx)(r.p,{children:"The Makefile will run an apply like this:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"secrethub run -- terraform apply\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Where ",(0,t.jsx)(r.code,{children:"secrethub.env"})," file will get picked up by default, the ",(0,t.jsx)(r.code,{children:"ARM_ACCESS_KEY"})," will be imported in as an Environment variable, allowing terraform to access the remote storage account."]}),"\n",(0,t.jsx)(r.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(r.p,{children:"In this post we have setup a simple AKS cluster using terraform to use SecretHub, to manage and secure our secrets."}),"\n",(0,t.jsx)(r.p,{children:"We have setup a remote state file secret; an azure service principal secret and a terraform ssh key secret. All into the SecretHub Secrets Manager and have injected them securely at infrastructure deployment time."}),"\n",(0,t.jsx)(r.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.terraform.io/docs/providers/azurerm/guides/service_principal_client_secret.html",children:"Terraform Azure Service Principal"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#ssh_key",children:"Terraform Azure SSH Keys"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://secrethub.io/docs/guides/environment-variables/",children:"SecretHub Environment Variables"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://github.com/ronamosa/aks-secrethub-cluster",children:"Github: aks-secrethub-cluster"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://secrethub.io/blog/decouple-application-secrets-from-ci-cd-pipeline/",children:"SecretHub Pipeline Post"})}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},67296:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/pipeline-problem-109da26ca3aaa119bd1b057347b26a0f.svg"},99228:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/pipeline-cover-8557522fdeaf5c04fcd746b308b3cf8d.svg"}}]);