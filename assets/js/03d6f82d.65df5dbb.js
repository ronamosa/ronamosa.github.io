"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[7870],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var a=s(96540);const t={},o=a.createContext(t);function c(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),a.createElement(o.Provider,{value:n},e.children)}},93664:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"engineer/AWS/AWS-ECS-2Monitoring","title":"AWS Workshop ECS Monitoring","description":"- ECS Workshop: Monitoring","source":"@site/docs/engineer/AWS/AWS-ECS-2Monitoring.md","sourceDirName":"engineer/AWS","slug":"/engineer/AWS/AWS-ECS-2Monitoring","permalink":"/docs/engineer/AWS/AWS-ECS-2Monitoring","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/AWS/AWS-ECS-2Monitoring.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"title":"AWS Workshop ECS Monitoring"},"sidebar":"docsSidebar","previous":{"title":"AWS EKS Cluster Creation - Complete Guide to Kubernetes Cluster Setup","permalink":"/docs/engineer/AWS/AWS-EKS-Create-Clusters"},"next":{"title":"AWS Workshop ECS Capacity Providers","permalink":"/docs/engineer/AWS/AWS-ECS-3CapacityProviders"}}');var t=s(74848),o=s(28453);const c={title:"AWS Workshop ECS Monitoring"},r=void 0,i={},d=[{value:"Tools Install",id:"tools-install",level:2},{value:"Environment Setup",id:"environment-setup",level:2},{value:"install cdk cli",id:"install-cdk-cli",level:3},{value:"clear context &amp; deploy",id:"clear-context--deploy",level:3},{value:"frontend cdk",id:"frontend-cdk",level:3},{value:"cdk.json",id:"cdkjson",level:4},{value:"aws cli",id:"aws-cli",level:4},{value:"env vars",id:"env-vars",level:4},{value:"backend nodejs",id:"backend-nodejs",level:3},{value:"backend crystal",id:"backend-crystal",level:3},{value:"Container Insights",id:"container-insights",level:2},{value:"cluster name",id:"cluster-name",level:3},{value:"enable container insights",id:"enable-container-insights",level:3},{value:"enable instance insights",id:"enable-instance-insights",level:3},{value:"verify enabled",id:"verify-enabled",level:3},{value:"Check CloudWatch",id:"check-cloudwatch",level:2},{value:"Load Test with Siege",id:"load-test-with-siege",level:2},{value:"get ALB URL",id:"get-alb-url",level:3},{value:"siege it",id:"siege-it",level:3},{value:"Alarms CloudWatch Metrics",id:"alarms-cloudwatch-metrics",level:2},{value:"Amazon Managed Prometheus (AMP) &amp; Amazon Managed Grafana (AMG)",id:"amazon-managed-prometheus-amp--amazon-managed-grafana-amg",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{title:"Workshop Links",type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["ECS Workshop: ",(0,t.jsx)(n.a,{href:"https://ecsworkshop.com/monitoring/",children:"Monitoring"})]}),"\n"]})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"I am running this from my local machine, with AWS creds and config setup with keys."})}),"\n",(0,t.jsx)(n.h2,{id:"tools-install",children:"Tools Install"}),"\n",(0,t.jsx)(n.p,{children:"All good, nothing new."}),"\n",(0,t.jsx)(n.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,t.jsxs)(n.p,{children:["Following ",(0,t.jsx)(n.a,{href:"https://ecsworkshop.com/monitoring/container_insights/build_environment/",children:"this"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["From the same setup as ",(0,t.jsx)(n.a,{href:"/docs/engineer/AWS/AWS-ECS-1Microservices",children:"Microservices"}),", you now setup the the app via CDK scripts instead."]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["I didn't delete from the previous section, so I needed to run ",(0,t.jsx)(n.code,{children:"copilot app delete"})," to clear the way for the cdk commands in this part."]})}),"\n",(0,t.jsx)(n.h3,{id:"install-cdk-cli",children:"install cdk cli"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"sudo npm install -g aws-cdk"})}),"\n",(0,t.jsx)(n.h3,{id:"clear-context--deploy",children:"clear context & deploy"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cdk context --clear && cdk deploy --require-approval never                                                at \uf017 18:24:05\nAll context values cleared.\n\n\n\u2728  Synthesis time: 2.48s\n\ncurrent credentials could not be used to assume 'arn:aws:iam::REDACTED:role/cdk-hnb659fds-deploy-role-REDACTED-us-east-1', but are for the right account. Proceeding anyway.\n\n \u274c Deployment failed: Error: ecsworkshop-base: SSM parameter /cdk-bootstrap/hnb659fds/version not found. Has the environment been bootstrapped? Please run 'cdk bootstrap' (see https://docs.aws.amazon.com/cdk/latest/guide/bootstrapping.html)\n    at Deployments.validateBootstrapStackVersion (/usr/local/lib/node_modules/aws-cdk/lib/index.js:436:12032)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Deployments.buildSingleAsset (/usr/local/lib/node_modules/aws-cdk/lib/index.js:436:10797)\n    at async Object.buildAsset (/usr/local/lib/node_modules/aws-cdk/lib/index.js:436:196976)\n    at async /usr/local/lib/node_modules/aws-cdk/lib/index.js:436:180802\n\necsworkshop-base: SSM parameter /cdk-bootstrap/hnb659fds/version not found. Has the environment been bootstrapped? Please run 'cdk bootstrap' (see https://docs.aws.amazon.com/cdk/latest/guide/bootstrapping.html)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["because I am running it from my local machine and not in AWS Cloud9, I need to ",(0,t.jsx)(n.code,{children:"bootstrap"})," my environment"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-platform/cdk on main ?3 \u276f cdk bootstrap                                                                                             at \uf017 18:29:30\n \u23f3  Bootstrapping environment aws://REDACTED/us-east-1...\nTrusted accounts for deployment: (none)\nTrusted accounts for lookup: (none)\nUsing default execution policy of 'arn:aws:iam::aws:policy/AdministratorAccess'. Pass '--cloudformation-execution-policies' to customize.\nCDKToolkit: creating CloudFormation changeset...\n[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7] (8/12)\n\n6:29:59 PM | CREATE_IN_PROGRESS   | AWS::CloudFormation::Stack | CDKToolkit\n6:30:24 PM | CREATE_IN_PROGRESS   | AWS::IAM::Policy        | ImagePublishingRoleDefaultPolicy\n6:30:29 PM | CREATE_IN_PROGRESS   | AWS::IAM::Policy        | FilePublishingRoleDefaultPolicy\n6:30:30 PM | CREATE_IN_PROGRESS   | AWS::IAM::Role          | DeploymentActionRole\n"})}),"\n",(0,t.jsx)(n.p,{children:"if successful you'll see this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-platform/cdk on main ?3 \u276f cdk bootstrap                                                                                             at \uf017 18:29:30\n \u23f3  Bootstrapping environment aws://REDACTED/us-east-1...\nTrusted accounts for deployment: (none)\nTrusted accounts for lookup: (none)\nUsing default execution policy of 'arn:aws:iam::aws:policy/AdministratorAccess'. Pass '--cloudformation-execution-policies' to customize.\nCDKToolkit: creating CloudFormation changeset...\n \u2705  Environment aws://REDACTED/us-east-1 bootstrapped.\n"})}),"\n",(0,t.jsx)(n.p,{children:"Deploy again"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-platform/cdk on main ?3 \u276f cdk context --clear && cdk deploy --require-approval never                                  took \uf252 1m 12s at \uf017 18:30:54\nAll context values cleared.\n\n\n\u2728  Synthesis time: 2.73s\n\necsworkshop-base:  start: Building 501b12cada059b8a002436a2e40130542e4fe93c4911af529bf4b243ef2a1f88:REDACTED-current_region\necsworkshop-base:  success: Built 501b12cada059b8a002436a2e40130542e4fe93c4911af529bf4b243ef2a1f88:REDACTED-current_region\necsworkshop-base:  start: Publishing 501b12cada059b8a002436a2e40130542e4fe93c4911af529bf4b243ef2a1f88:REDACTED-current_region\necsworkshop-base:  success: Published 501b12cada059b8a002436a2e40130542e4fe93c4911af529bf4b243ef2a1f88:REDACTED-current_region\necsworkshop-base: deploying... [1/1]\necsworkshop-base: creating CloudFormation changeset...\n\n \u2705  ecsworkshop-base\n\n\u2728  Deployment time: 189.54s\n\nOutputs:\necsworkshop-base.ECSClusterName = container-demo\necsworkshop-base.ECSClusterSecGrp = []\necsworkshop-base.FE2BESecGrp = sg-08ad8552ab5a42e2d\necsworkshop-base.NSArn = arn:aws:servicediscovery:us-east-1:REDACTED:namespace/ns-qbclwxxkojytxj2w\necsworkshop-base.NSId = ns-qbclwxxkojytxj2w\necsworkshop-base.NSName = service.local\necsworkshop-base.ServicesSecGrp = sg-08ad8552ab5a42e2d\necsworkshop-base.StressToolEc2Id = i-0b5aa0dca21ce4bec\necsworkshop-base.StressToolEc2Ip = 10.0.0.188\nStack ARN:\narn:aws:cloudformation:us-east-1:REDACTED:stack/ecsworkshop-base/ca39eeb0-ed8d-11ee-b7f5-0affd09b0077\n\n\u2728  Total time: 192.27s\n"})}),"\n",(0,t.jsx)(n.h3,{id:"frontend-cdk",children:"frontend cdk"}),"\n",(0,t.jsx)(n.p,{children:"Running commands from the workshop as is gets me an error"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'~/Repos/AWSECS/ecsdemo-frontend/cdk on main \u276f\ncdk context --clear && cdk deploy --require-approval never\nAll context values cleared.\n\njsii.errors.JavaScriptError:\n  @jsii/kernel.RuntimeError: Error: Cannot retrieve value from context provider vpc-provider since account/region are not specified at the stack level. Configure "env" with an account and region when you define your stack.See https://docs.aws.amazon.com/cdk/latest/guide/environments.html for more details.\n      at Kernel._Kernel_ensureSync (/private/var/folders/kd/2pwbps0n4tl4cz7km7wm63100000gn/T/tmpdqe_wrcc/lib/program.js:10491:23)\n      at Kernel.sinvoke (/private/var/folders/kd/2pwbps0n4tl4cz7km7wm63100000gn/T/tmpdqe_wrcc/lib/program.js:9876:102)\n      at KernelHost.processRequest (/private/var/folders/kd/2pwbps0n4tl4cz7km7wm63100000gn/T/tmpdqe_wrcc/lib/program.js:11696:36)\n      at KernelHost.run (/private/var/folders/kd/2pwbps0n4tl4cz7km7wm63100000gn/T/tmpdqe_wrcc/lib/program.js:11656:22)\n      at Immediate._onImmediate (/private/var/folders/kd/2pwbps0n4tl4cz7km7wm63100000gn/T/tmpdqe_wrcc/lib/program.js:11657:46)\n      at process.processImmediate (node:internal/timers:476:21)\n'})}),"\n",(0,t.jsx)(n.p,{children:"CDK contexts need to be set to specify the account number and region."}),"\n",(0,t.jsx)(n.p,{children:"3 Options to fix context"}),"\n",(0,t.jsx)(n.h4,{id:"cdkjson",children:"cdk.json"}),"\n",(0,t.jsxs)(n.p,{children:["update ",(0,t.jsx)(n.code,{children:"cdk.json"})," to this"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "app": "python3 app.py",\n  "context": {\n    "@aws-cdk/core:account": "123456789012",\n    "@aws-cdk/core:region": "us-east-1"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"aws-cli",children:"aws cli"}),"\n",(0,t.jsxs)(n.p,{children:["run cdk command with args: ",(0,t.jsx)(n.code,{children:"cdk deploy -c account=123456789012 -c region=us-east-1"})]}),"\n",(0,t.jsx)(n.h4,{id:"env-vars",children:"env vars"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export CDK_DEFAULT_ACCOUNT=123456789012\nexport CDK_DEFAULT_REGION=us-east-1\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:"None of these methods worked for me."}),(0,t.jsxs)(n.p,{children:["What did work was setting ",(0,t.jsx)(n.code,{children:"export AWS_DEFAULT_REGION=us-east-1"})," and ",(0,t.jsx)(n.code,{children:"export AWS_DEFAULT_ACCOUNT=123456789"})," and re-running the cdk deploy command."]})]}),"\n",(0,t.jsxs)(n.p,{children:["Then ",(0,t.jsx)(n.code,{children:"cdk deploy"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-frontend/cdk on main !1 \u276f cdk context --clear && cdk deploy --require-approval never                                                at \uf017 20:04:32\nAll context values cleared.\n\n[Warning at /ecsworkshop-frontend/FrontendFargateLBService/Service/SecurityGroup] Ignoring Egress rule since 'allowAllOutbound' is set to true; To add customized rules, set allowAllOutbound=false on the SecurityGroup\n\n\u2728  Synthesis time: 10.53s\n\necsworkshop-frontend:  start: Building 9379029ed2b9b951adc00b294eed2fd4990bfbc465d165aec5fa17bae49202f1:REDACTED-us-east-1\necsworkshop-frontend:  success: Built 9379029ed2b9b951adc00b294eed2fd4990bfbc465d165aec5fa17bae49202f1:REDACTED-us-east-1\necsworkshop-frontend:  start: Publishing 9379029ed2b9b951adc00b294eed2fd4990bfbc465d165aec5fa17bae49202f1:REDACTED-us-east-1\necsworkshop-frontend:  success: Published 9379029ed2b9b951adc00b294eed2fd4990bfbc465d165aec5fa17bae49202f1:REDACTED-us-east-1\necsworkshop-frontend: deploying... [1/1]\necsworkshop-frontend: creating CloudFormation changeset...\n[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\xb7\xb7\xb7\xb7\xb7\xb7] (16/18)\n\n8:08:00 PM | CREATE_IN_PROGRESS   | AWS::ECS::Service                         | FrontendFargateLBService/Service/Service\n8:08:00 PM | CREATE_IN_PROGRESS   | AWS::CloudFormation::Stack                | ecsworkshop-frontend\n"})}),"\n",(0,t.jsx)(n.p,{children:"success looks like"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-frontend/cdk on main !1 \u276f cdk context --clear && cdk deploy --require-approval never                                                at \uf017 20:04:32\nAll context values cleared.\n\n[Warning at /ecsworkshop-frontend/FrontendFargateLBService/Service/SecurityGroup] Ignoring Egress rule since 'allowAllOutbound' is set to true; To add customized rules, set allowAllOutbound=false on the SecurityGroup\n\n\u2728  Synthesis time: 10.53s\n\necsworkshop-frontend:  start: Building 9379029ed2b9b951adc00b294eed2fd4990bfbc465d165aec5fa17bae49202f1:REDACTED-us-east-1\necsworkshop-frontend:  success: Built 9379029ed2b9b951adc00b294eed2fd4990bfbc465d165aec5fa17bae49202f1:REDACTED-us-east-1\necsworkshop-frontend:  start: Publishing 9379029ed2b9b951adc00b294eed2fd4990bfbc465d165aec5fa17bae49202f1:REDACTED-us-east-1\necsworkshop-frontend:  success: Published 9379029ed2b9b951adc00b294eed2fd4990bfbc465d165aec5fa17bae49202f1:REDACTED-us-east-1\necsworkshop-frontend: deploying... [1/1]\necsworkshop-frontend: creating CloudFormation changeset...\n\n \u2705  ecsworkshop-frontend\n\n\u2728  Deployment time: 306.42s\n\nOutputs:\necsworkshop-frontend.FrontendFargateLBServiceLoadBalancerDNSAFFB8F0B = ecswor-Front-gwdgFnVMYQrg-1215657672.us-east-1.elb.amazonaws.com\necsworkshop-frontend.FrontendFargateLBServiceServiceURL55F424CF = http://ecswor-Front-gwdgFnVMYQrg-1215657672.us-east-1.elb.amazonaws.com\nStack ARN:\narn:aws:cloudformation:us-east-1:REDACTED:stack/ecsworkshop-frontend/ab06cc40-ed9a-11ee-b8c6-125c14dde269\n\n\u2728  Total time: 316.95s\n"})}),"\n",(0,t.jsx)(n.h3,{id:"backend-nodejs",children:"backend nodejs"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["looking back, I may have missed the ",(0,t.jsx)(n.code,{children:"pip install -r requirements.txt"})," command for frontend."]})}),"\n",(0,t.jsxs)(n.p,{children:["same again, cd into ",(0,t.jsx)(n.code,{children:"nodejs/cdk"})," folder and build: ",(0,t.jsx)(n.code,{children:"pip install -r requirements.txt && cdk context --clear && cdk deploy --require-approval never"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"...\nAll context values cleared.\n\n\n\u2728  Synthesis time: 10.31s\n\necsworkshop-nodejs:  start: Building 2460045766487d8fe8ff85e38ecad876f151c9dc40247319cf9e5d8cc956fb65:REDACTED-us-east-1\necsworkshop-nodejs:  success: Built 2460045766487d8fe8ff85e38ecad876f151c9dc40247319cf9e5d8cc956fb65:REDACTED-us-east-1\necsworkshop-nodejs:  start: Publishing 2460045766487d8fe8ff85e38ecad876f151c9dc40247319cf9e5d8cc956fb65:REDACTED-us-east-1\necsworkshop-nodejs:  success: Published 2460045766487d8fe8ff85e38ecad876f151c9dc40247319cf9e5d8cc956fb65:REDACTED-us-east-1\necsworkshop-nodejs: deploying... [1/1]\necsworkshop-nodejs: creating CloudFormation changeset...\n\n \u2705  ecsworkshop-nodejs\n\n\u2728  Deployment time: 129.83s\n\nStack ARN:\narn:aws:cloudformation:us-east-1:REDACTED:stack/ecsworkshop-nodejs/ed498c60-ed9e-11ee-9f71-0ee2a4991b27\n\n\u2728  Total time: 140.14s\n"})}),"\n",(0,t.jsx)(n.p,{children:"completed successfully."}),"\n",(0,t.jsx)(n.h3,{id:"backend-crystal",children:"backend crystal"}),"\n",(0,t.jsx)(n.p,{children:"same again."}),"\n",(0,t.jsx)(n.p,{children:"successfully completed."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"All context values cleared.\n\n\n\u2728  Synthesis time: 10.15s\n\necsworkshop-crystal:  start: Building 6e41ad25c27668a10872892a146d52c57ceda0b352303125ff4c9ce5e73f37ce:REDACTED-us-east-1\necsworkshop-crystal:  success: Built 6e41ad25c27668a10872892a146d52c57ceda0b352303125ff4c9ce5e73f37ce:REDACTED-us-east-1\necsworkshop-crystal:  start: Publishing 6e41ad25c27668a10872892a146d52c57ceda0b352303125ff4c9ce5e73f37ce:REDACTED-us-east-1\necsworkshop-crystal:  success: Published 6e41ad25c27668a10872892a146d52c57ceda0b352303125ff4c9ce5e73f37ce:REDACTED-us-east-1\necsworkshop-crystal: deploying... [1/1]\necsworkshop-crystal: creating CloudFormation changeset...\n\n \u2705  ecsworkshop-crystal\n\n\u2728  Deployment time: 100.67s\n\nStack ARN:\narn:aws:cloudformation:us-east-1:REDACTED:stack/ecsworkshop-crystal/98faa490-ed9f-11ee-833b-0affe12f9d3b\n\n\u2728  Total time: 110.82s\n"})}),"\n",(0,t.jsx)(n.h2,{id:"container-insights",children:"Container Insights"}),"\n",(0,t.jsx)(n.h3,{id:"cluster-name",children:"cluster name"}),"\n",(0,t.jsx)(n.p,{children:"setup variables"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-crystal/cdk on main !1 ?1 \u276f\ncluster_arn=$(aws ecs list-clusters | jq -r '.clusterArns[] | select(contains(\"container-demo\"))')\nclustername=$(aws ecs describe-clusters --clusters $cluster_arn | jq -r '.clusters[].clusterName')\n\n~/Repos/AWSECS/ecsdemo-crystal/cdk on main !1 ?1 \u276f\n"})}),"\n",(0,t.jsx)(n.p,{children:"check"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-crystal/cdk on main !1 ?1 \u276f echo $\\{cluster_arn}                                                                                     at \uf017 20:46:50\narn:aws:ecs:us-east-1:REDACTED:cluster/container-demo\n~/Repos/AWSECS/ecsdemo-crystal/cdk on main !1 ?1 \u276f echo $\\{clustername}                                                                                     at \uf017 20:47:20\ncontainer-demo\n~/Repos/AWSECS/ecsdemo-crystal/cdk on main !1 ?1 \u276f\n"})}),"\n",(0,t.jsx)(n.h3,{id:"enable-container-insights",children:"enable container insights"}),"\n",(0,t.jsxs)(n.p,{children:["command: ",(0,t.jsx)(n.code,{children:"aws ecs update-cluster-settings --cluster $\\{clustername}  --settings name=containerInsights,value=enabled --region $\\{AWS_DEFAULT_REGION}"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'{\n    "cluster": {\n        "clusterArn": "arn:aws:ecs:us-east-1:REDACTED:cluster/container-demo",\n        "clusterName": "container-demo",\n        "status": "ACTIVE",\n        "registeredContainerInstancesCount": 0,\n        "runningTasksCount": 0,\n        "pendingTasksCount": 0,\n        "activeServicesCount": 0,\n        "statistics": [],\n        "tags": [],\n        "settings": [\n            {\n                "name": "containerInsights",\n                "value": "enabled"\n            }\n        ],\n        "capacityProviders": [],\n        "defaultCapacityProviderStrategy": [],\n        "attachments": []\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"enable-instance-insights",children:"enable instance insights"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'aws cloudformation create-stack --stack-name CWAgentECS-$clustername-$\\{AWS_DEFAULT_REGION} --template-body "$(curl -Ls https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/ecs-task-definition-templates/deployment-mode/daemon-service/cwagent-ecs-instance-metric/cloudformation-quickstart/cwagent-ecs-instance-metric-cfn.json)" --parameters ParameterKey=ClusterName,ParameterValue=$clustername ParameterKey=CreateIAMRoles,ParameterValue=True --capabilities CAPABILITY_NAMED_IAM --region $\\{AWS_DEFAULT_REGION}\n'})}),"\n",(0,t.jsx)(n.p,{children:"output"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'{\n    "StackId": "arn:aws:cloudformation:us-east-1:REDACTED:stack/CWAgentECS-container-demo-us-east-1/3904fd90-eda1-11ee-aa77-0e0e5a47e273"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"verify-enabled",children:"verify enabled"}),"\n",(0,t.jsxs)(n.p,{children:["command: ",(0,t.jsx)(n.code,{children:"aws ecs describe-clusters --cluster $\\{clustername} --include SETTINGS"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'{\n    "clusters": [\n        {\n            "clusterArn": "arn:aws:ecs:us-east-1:REDACTED:cluster/container-demo",\n            "clusterName": "container-demo",\n            "status": "ACTIVE",\n            "registeredContainerInstancesCount": 0,\n            "runningTasksCount": 3,\n            "pendingTasksCount": 0,\n            "activeServicesCount": 4,\n            "statistics": [],\n            "tags": [],\n            "settings": [\n                {\n                    "name": "containerInsights",\n                    "value": "enabled"\n                }\n            ],\n            "capacityProviders": [],\n            "defaultCapacityProviderStrategy": []\n        }\n    ],\n    "failures": []\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"check-cloudwatch",children:"Check CloudWatch"}),"\n",(0,t.jsxs)(n.p,{children:['Instructions are bit shit, they mash a couple of steps together e.g. in order to "Scroll down to see all the Containers that are part of the Tasks in the Service", you change the drop down menu from ',(0,t.jsx)(n.code,{children:"ECS Clusters"})," to ",(0,t.jsx)(n.code,{children:"ECS Services"})," and then scroll down."]}),"\n",(0,t.jsx)(n.h2,{id:"load-test-with-siege",children:"Load Test with Siege"}),"\n",(0,t.jsxs)(n.p,{children:["I'm on macos locally, so install is : ",(0,t.jsx)(n.code,{children:"brew install siege"})]}),"\n",(0,t.jsx)(n.h3,{id:"get-alb-url",children:"get ALB URL"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"alb_url=$(aws cloudformation describe-stacks --stack-name container-demo-alb --query 'Stacks[0].Outputs[?OutputKey==`ExternalUrl`].OutputValue' --output text 2> /dev/null || aws cloudformation describe-stacks --stack-name ecsworkshop-frontend | jq -r '.Stacks[].Outputs[] | select(.OutputKey | contains(\"FrontendFargateLBServiceServiceURL\")) | .OutputValue')\n"})}),"\n",(0,t.jsx)(n.p,{children:"check"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-crystal/cdk on \uf113 \uf126 main !1 ?1 \u276f echo $\\{alb_url}\nhttp://ecswor-Front-gwdgFnVMYQrg-1215657672.us-east-1.elb.amazonaws.com\n"})}),"\n",(0,t.jsx)(n.h3,{id:"siege-it",children:"siege it"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"siege -c 200 -i $alb_url"})}),"\n",(0,t.jsx)(n.p,{children:"watch it for 20-30 seconds, ctrl+c to kill it, then go through your container insights on cloudwatch."}),"\n",(0,t.jsx)(n.h2,{id:"alarms-cloudwatch-metrics",children:"Alarms CloudWatch Metrics"}),"\n",(0,t.jsx)(n.p,{children:"I skipped this part."}),"\n",(0,t.jsx)(n.h2,{id:"amazon-managed-prometheus-amp--amazon-managed-grafana-amg",children:"Amazon Managed Prometheus (AMP) & Amazon Managed Grafana (AMG)"}),"\n",(0,t.jsx)(n.p,{children:"Skipped, but interested in revisiting"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://ecsworkshop.com/monitoring/amp_amg/",children:'"CONFIGURE AMAZON MANAGED SERVICE FOR PROMETHEUS / GRAFANA FOR YOUR ECS CLUSTER"'})})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);