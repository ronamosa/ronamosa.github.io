"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[6880],{10291:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"archive/terraform-aws-ec2/2018-04-10-Terraform-AWS-EC2-Deployment-Part3","title":"Part 3 - Demos, Testing and Healthchecks.","description":"In Part II we continued from single web EC2 instance, to an Auto-Scaling Load Balanced cluster of EC2 instances.","source":"@site/docs/archive/terraform-aws-ec2/2018-04-10-Terraform-AWS-EC2-Deployment-Part3.md","sourceDirName":"archive/terraform-aws-ec2","slug":"/archive/terraform-aws-ec2/terraform-aws-3","permalink":"/docs/archive/terraform-aws-ec2/terraform-aws-3","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/archive/terraform-aws-ec2/2018-04-10-Terraform-AWS-EC2-Deployment-Part3.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"slug":"terraform-aws-3","title":"Part 3 - Demos, Testing and Healthchecks."},"sidebar":"docsSidebar","previous":{"title":"Part 2 - Clusters, Launch Config, Auto-Scaling Groups.","permalink":"/docs/archive/terraform-aws-ec2/terraform-aws-2"},"next":{"title":"Creating VM\'s using Ansible and ESXi 5.5 Free Version.","permalink":"/docs/archive/2016-02-13-Ansible-CreateVMs-Vsphere-free_version"}}');var a=t(74848),s=t(28453);const i={slug:"terraform-aws-3",title:"Part 3 - Demos, Testing and Healthchecks."},o=void 0,l={},c=[{value:"Terraform files",id:"terraform-files",level:2},{value:"Video Example of Launch",id:"video-example-of-launch",level:2},{value:"EC2 Cluster of Web Servers",id:"ec2-cluster-of-web-servers",level:2},{value:"Test Auto Scaling Setting",id:"test-auto-scaling-setting",level:2},{value:"Added healthchecks",id:"added-healthchecks",level:2},{value:"ELB: Healthchecks Targeting EC2&#39;s",id:"elb-healthchecks-targeting-ec2s",level:2},{value:"Interpolating count for EC2 instance names (failed)",id:"interpolating-count-for-ec2-instance-names-failed",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["In ",(0,a.jsx)(n.a,{href:"terraform-aws-2",children:"Part II"})," we continued from single web EC2 instance, to an Auto-Scaling Load Balanced cluster of EC2 instances."]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["You need the pre-requisites and setup from ",(0,a.jsx)(n.a,{href:"terraform-aws-1",children:"Part I"})," before you can follow along."]})}),"\n",(0,a.jsx)(n.h2,{id:"terraform-files",children:"Terraform files"}),"\n",(0,a.jsx)(n.p,{children:"The terraform files you should have to work with are as follows"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"auto.scaling.group.tf"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"elastic.load.balancer.tf"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"launch.configuration.tf"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"output.tf"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"provider.tf"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"security.groups.tf"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"variables.tf"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"video-example-of-launch",children:"Video Example of Launch"}),"\n",(0,a.jsx)(n.p,{children:"The Plan is good, it's time to launch our plan into the Cloud/AWS."}),"\n",(0,a.jsxs)(n.p,{children:["The bottom screen shows a ",(0,a.jsx)(n.code,{children:"watch aws ec2 describe-instance-status"})," command which shows the moment an EC2 instance is born:"]}),"\n",(0,a.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/bEFVLyw-jtk?rel=0&controls=0&showinfo=0",frameBorder:"0",allow:"autoplay; encrypted-media",allowFullScreen:!0}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"output.tf"})," config had the ELB's public DNS outputted so we can go and connect to it."]}),"\n",(0,a.jsx)(n.h2,{id:"ec2-cluster-of-web-servers",children:"EC2 Cluster of Web Servers"}),"\n",(0,a.jsx)(n.p,{children:"Check everything's launched as we needed and the web servers are serving our web page:"}),"\n",(0,a.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/tqxlnkwOFhE?rel=0&controls=0&showinfo=0",frameBorder:"0",allow:"autoplay; encrypted-media",allowFullScreen:!0}),"\n",(0,a.jsx)(n.h2,{id:"test-auto-scaling-setting",children:"Test Auto Scaling Setting"}),"\n",(0,a.jsx)(n.p,{children:"Let's test the Autoscaling Group by killing one instance, and watch ASG launch another instance (remember the minimum acceptable instances is 2):"}),"\n",(0,a.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/SX7Os5gWoyQ?rel=0&controls=0&showinfo=0",frameBorder:"0",allow:"autoplay; encrypted-media",allowFullScreen:!0}),"\n",(0,a.jsx)(n.p,{children:"What was new/different from the previous configs? I've noted some of the changes below."}),"\n",(0,a.jsx)(n.h2,{id:"added-healthchecks",children:"Added healthchecks"}),"\n",(0,a.jsx)(n.p,{children:'These are cool. It tells the Load Balancer what\'s a "healthy" number of EC2 instances we want running(2 is the magic number here), sets timeout values and intervals.'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-hcl",children:'# elastic.load.balancer.tf\nresource "aws_elb" "ElasticLoadBalancer" {\n  name = "ELBAutoScalingGroup"\n  security_groups = ["$\\{aws_security_group.ELBSecurityGroup.id}"]\n  availability_zones = ["$\\{data.aws_availability_zones.available.names}"]\n\n  health_check {\n    healthy_threshold = 2\n    unhealthy_threshold = 2\n    timeout = 3\n    interval = 30\n    target = "HTTP:$\\{var.inbound_port}/"\n  }\n\n  listener {\n    lb_port = 80\n    lb_protocol = "http"\n    instance_port = "$\\{var.inbound_port}"\n    instance_protocol = "http"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"elb-healthchecks-targeting-ec2s",children:"ELB: Healthchecks Targeting EC2's"}),"\n",(0,a.jsx)(n.p,{children:"AWS healthchecks are essentially \"pings\" to the EC2 endpoints defined by the 'target' parameter."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["'",(0,a.jsx)(n.code,{children:"HTTP"}),"' is the ping protocol"]}),"\n",(0,a.jsxs)(n.li,{children:["'",(0,a.jsx)(n.code,{children:"var.inbound_port"}),"' is the ping port"]}),"\n",(0,a.jsxs)(n.li,{children:["the ping ",(0,a.jsx)(n.code,{children:"PATH"})," the '/' on the end."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"interpolating-count-for-ec2-instance-names-failed",children:"Interpolating count for EC2 instance names (failed)"}),"\n",(0,a.jsx)(n.p,{children:"Well this failed miserably. I wanted to have each EC2 fire up with a unique name. Need to look into this more, but from the little I've read up on this approach it might not be the way to go."}),"\n",(0,a.jsx)(n.p,{children:"Anyway, the new changes:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"variables.tf"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-hcl",children:'variable "count" {\n  default = 1\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"auto.scaling.group.tf"})," (note 'tags' not 'tag')"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-hcl",children:'tags {\n    Name = "$\\{format("ASG-%03d", count.index + 1)}"\n    propagate_at_launch = true\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(n.p,{children:"Overall this was a really good basic steps exercise in getting familiar with the building blocks of Terraform. It's a really great infrastructure management platform and I think one that I'm going to get properly familiar with and I definitely recommend it as part of your DevOps toolchain."}),"\n",(0,a.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.terraform.io/docs/configuration/data-sources.html",children:"Terraform - Data Sources"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.terraform.io/intro/getting-started/variables.html",children:"Terraform - Input Variables"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html#security-group-rules",children:"AWS Security Groups"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.terraform.io/docs/providers/aws/d/availability_zones.html",children:"Terraform  - Availability Zones"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.terraform.io/docs/providers/aws/",children:"Terraform - AWS Provider"})}),"\n"]})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(96540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);