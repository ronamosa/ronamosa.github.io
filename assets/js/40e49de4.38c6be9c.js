"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[4460],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(96540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}},33999:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"engineer/LAB/pihole-dns","title":"Pi-hole DNS Setup - Network-wide Ad Blocking and DNS Filtering","description":"Complete guide to setting up Pi-hole DNS for network-wide ad blocking and DNS filtering on Ubuntu. Includes installation, configuration, and troubleshooting.","source":"@site/docs/engineer/LAB/pihole-dns.md","sourceDirName":"engineer/LAB","slug":"/engineer/LAB/pihole-dns","permalink":"/docs/engineer/LAB/pihole-dns","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/LAB/pihole-dns.md","tags":[{"inline":true,"label":"pihole","permalink":"/docs/tags/pihole"},{"inline":true,"label":"dns","permalink":"/docs/tags/dns"},{"inline":true,"label":"networking","permalink":"/docs/tags/networking"},{"inline":true,"label":"privacy","permalink":"/docs/tags/privacy"},{"inline":true,"label":"ubuntu","permalink":"/docs/tags/ubuntu"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":1,"frontMatter":{"title":"Pi-hole DNS Setup - Network-wide Ad Blocking and DNS Filtering","description":"Complete guide to setting up Pi-hole DNS for network-wide ad blocking and DNS filtering on Ubuntu. Includes installation, configuration, and troubleshooting.","keywords":["pihole","dns filtering","ad blocking","network dns","ubuntu dns","dns server","home network","privacy"],"tags":["pihole","dns","networking","privacy","ubuntu"],"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Proxmox Virtualization Hub: Complete Guide Collection","permalink":"/docs/engineer/LAB/proxmox-hub"},"next":{"title":"Create Cloud-Init VM Templates with Packer on Proxmox","permalink":"/docs/engineer/LAB/proxmox-packer-vm"}}');var t=s(74848),o=s(28453);const r={title:"Pi-hole DNS Setup - Network-wide Ad Blocking and DNS Filtering",description:"Complete guide to setting up Pi-hole DNS for network-wide ad blocking and DNS filtering on Ubuntu. Includes installation, configuration, and troubleshooting.",keywords:["pihole","dns filtering","ad blocking","network dns","ubuntu dns","dns server","home network","privacy"],tags:["pihole","dns","networking","privacy","ubuntu"],sidebar_position:1},a=void 0,l={},d=[{value:"Installation",id:"installation",level:2},{value:"Unbound",id:"unbound",level:2},{value:"Test Validation",id:"test-validation",level:3},{value:"Configure PiHole Web",id:"configure-pihole-web",level:3},{value:"Logging",id:"logging",level:3},{value:"AppArmor",id:"apparmor",level:3},{value:"Adlists",id:"adlists",level:2},{value:"Config Files",id:"config-files",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"installed on proxmox with Ubuntu 22.04.3"}),"\n",(0,t.jsxs)(n.p,{children:["following ",(0,t.jsx)(n.a,{href:"https://docs.pi-hole.net/main/basic-install/",children:"docs"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"curl -sSL https://install.pi-hole.net | bash"})}),"\n",(0,t.jsx)(n.h2,{id:"unbound",children:"Unbound"}),"\n",(0,t.jsxs)(n.p,{children:["Upstream DNS provider = for max privacy we will be setting up a recursive DNS solution using ",(0,t.jsx)(n.a,{href:"https://docs.pi-hole.net/guides/dns/unbound/",children:"unbound"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"apt install -y unbound"})}),"\n",(0,t.jsx)(n.p,{children:"it's going to be broken until you do the following:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["get the ",(0,t.jsx)(n.code,{children:"root.hints"})," file ",(0,t.jsx)(n.code,{children:"wget https://www.internic.net/domain/named.root -qO- | sudo tee /var/lib/unbound/root.hints"})]}),"\n",(0,t.jsxs)(n.li,{children:["create this file ",(0,t.jsx)(n.code,{children:"/etc/unbound/unbound.conf.d/pi-hole.conf"})," and put this in it:"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"test-validation",children:"Test Validation"}),"\n",(0,t.jsx)(n.p,{children:"restart and test:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo service unbound restart\ndig pi-hole.net @127.0.0.1 -p 5335\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"restart and dig",src:s(42129).A+"",width:"633",height:"403"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dig fail01.dnssec.works @127.0.0.1 -p 5335\ndig dnssec.works @127.0.0.1 -p 5335\n"})}),"\n",(0,t.jsxs)(n.p,{children:["expect: ",(0,t.jsx)(n.code,{children:"SERVFAIL"})," and no IP first command, ",(0,t.jsx)(n.code,{children:"NOERROR"})," and an IP second command."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"test dnssec",src:s(92931).A+"",width:"699",height:"701"})}),"\n",(0,t.jsx)(n.h3,{id:"configure-pihole-web",children:"Configure PiHole Web"}),"\n",(0,t.jsx)(n.p,{children:"Disable the other upstream DNS servers and set your custom to the unbound service you just set up:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"pihole dns",src:s(59984).A+"",width:"1227",height:"629"})}),"\n",(0,t.jsxs)(n.p,{children:["restart unbound: ",(0,t.jsx)(n.code,{children:"sudo service unbound restart"})]}),"\n",(0,t.jsx)(n.h3,{id:"logging",children:"Logging"}),"\n",(0,t.jsx)(n.p,{children:"Setup specific unbound log dir and file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo mkdir -p /var/log/unbound\nsudo touch /var/log/unbound/unbound.log\nsudo chown unbound /var/log/unbound/unbound.log\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Add this log destination to config ",(0,t.jsx)(n.code,{children:"/etc/unbound/unbound.conf.d/pi-hole.conf"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'server:\n    # If no logfile is specified, syslog is used\n    logfile: "/var/log/unbound/unbound.log"\n    log-time-ascii: yes\n    verbosity: 1\n'})}),"\n",(0,t.jsxs)(n.admonition,{title:"Logging Levels",type:"tip",children:[(0,t.jsx)(n.p,{children:"Level 0 means no verbosity, only errors"}),(0,t.jsx)(n.p,{children:"Level 1 gives operational information"}),(0,t.jsx)(n.p,{children:"Level 2 gives  detailed operational  information"}),(0,t.jsx)(n.p,{children:"Level 3 gives query level information"}),(0,t.jsx)(n.p,{children:"Level 4 gives  algorithm  level  information"}),(0,t.jsx)(n.p,{children:"Level 5 logs client identification for cache misses"})]}),"\n",(0,t.jsxs)(n.p,{children:["restart unbound: ",(0,t.jsx)(n.code,{children:"sudo service unbound restart"})]}),"\n",(0,t.jsx)(n.h3,{id:"apparmor",children:"AppArmor"}),"\n",(0,t.jsxs)(n.p,{children:["Create this file (if doesn't exist) ",(0,t.jsx)(n.code,{children:"/etc/apparmor.d/local/usr.sbin.unbound"})]}),"\n",(0,t.jsxs)(n.p,{children:["Add this line: ",(0,t.jsx)(n.code,{children:"/var/log/unbound/unbound.log rw,"})]}),"\n",(0,t.jsxs)(n.p,{children:["Reload AppArmor: ",(0,t.jsx)(n.code,{children:"sudo apparmor_parser -r /etc/apparmor.d/usr.sbin.unbound"})]}),"\n",(0,t.jsxs)(n.p,{children:["restart ubound: ",(0,t.jsx)(n.code,{children:"sudo service unbound restart"})]}),"\n",(0,t.jsx)(n.p,{children:"You're done."}),"\n",(0,t.jsx)(n.h2,{id:"adlists",children:"Adlists"}),"\n",(0,t.jsxs)(n.p,{children:["Login to your pihole's web GUI: ",(0,t.jsx)(n.a,{href:"http:/pihole.local/admin",children:"http:/pihole.local/admin"})]}),"\n",(0,t.jsxs)(n.p,{children:["Go to ",(0,t.jsx)(n.a,{href:"http://pihole.local/admin/groups-adlists.php",children:"'addlists page'"})]}),"\n",(0,t.jsx)(n.p,{children:'Add these lists "space separated", don\'t use commas.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts\nhttps://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext\nhttps://raw.githubusercontent.com/mhhakim/pihole-blocklist/master/porn.txt\nhttps://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt\nhttps://osint.digitalside.it/Threat-Intel/lists/latestdomains.txt\nhttps://v.firebog.net/hosts/Easyprivacy.txt\nhttps://raw.githubusercontent.com/mhhakim/pihole-blocklist/master/list.txt\n"})}),"\n",(0,t.jsx)(n.p,{children:'Update gravity "Tools>Update Gravity" in the left-hand menu, to pull down your new lists.'}),"\n",(0,t.jsx)(n.h2,{id:"config-files",children:"Config Files"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'server:\n    # If no logfile is specified, syslog is used\n    # logfile: "/var/log/unbound/unbound.log"\n    verbosity: 0\n\n    interface: 127.0.0.1\n    port: 5335\n    do-ip4: yes\n    do-udp: yes\n    do-tcp: yes\n\n    # May be set to yes if you have IPv6 connectivity\n    do-ip6: no\n\n    # You want to leave this to no unless you have *native* IPv6. With 6to4 and\n    # Terredo tunnels your web browser should favor IPv4 for the same reasons\n    prefer-ip6: no\n\n    # Use this only when you downloaded the list of primary root servers!\n    # If you use the default dns-root-data package, unbound will find it automatically\n    #root-hints: "/var/lib/unbound/root.hints"\n\n    # Trust glue only if it is within the server\'s authority\n    harden-glue: yes\n\n    # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes BOGUS\n    harden-dnssec-stripped: yes\n\n    # Don\'t use Capitalization randomization as it known to cause DNSSEC issues sometimes\n    # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378 for further details\n    use-caps-for-id: no\n\n    # Reduce EDNS reassembly buffer size.\n    # IP fragmentation is unreliable on the Internet today, and can cause\n    # transmission failures when large DNS messages are sent via UDP. Even\n    # when fragmentation does work, it may not be secure; it is theoretically\n    # possible to spoof parts of a fragmented DNS message, without easy\n    # detection at the receiving end. Recently, there was an excellent study\n    # >>> Defragmenting DNS - Determining the optimal maximum UDP response size for DNS <<<\n    # by Axel Koolhaas, and Tjeerd Slokker (https://indico.dns-oarc.net/event/36/contributions/776/)\n    # in collaboration with NLnet Labs explored DNS using real world data from the\n    # the RIPE Atlas probes and the researchers suggested different values for\n    # IPv4 and IPv6 and in different scenarios. They advise that servers should\n    # be configured to limit DNS messages sent over UDP to a size that will not\n    # trigger fragmentation on typical network links. DNS servers can switch\n    # from UDP to TCP when a DNS response is too big to fit in this limited\n    # buffer size. This value has also been suggested in DNS Flag Day 2020.\n    edns-buffer-size: 1232\n\n    # Perform prefetching of close to expired message cache entries\n    # This only applies to domains that have been frequently queried\n    prefetch: yes\n\n    # One thread should be sufficient, can be increased on beefy machines. In reality for most users running on small networks or on a single machine, it should be unnecessary to seek performance enhancement by increasing num-threads above 1.\n    num-threads: 1\n\n    # Ensure kernel buffer is large enough to not lose messages in traffic spikes\n    so-rcvbuf: 1m\n\n    # Ensure privacy of local IP ranges\n    private-address: 192.168.0.0/16\n    private-address: 169.254.0.0/16\n    private-address: 172.16.0.0/12\n    private-address: 10.0.0.0/8\n    private-address: fd00::/8\n    private-address: fe80::/10\n'})}),"\n",(0,t.jsxs)(n.p,{children:["restart unbound ",(0,t.jsx)(n.code,{children:"sudo systemctl restart unbound"})]}),"\n",(0,t.jsx)(n.p,{children:"check it's working"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"root@dns:~# dig pi-hole.net @127.0.0.1 -p 5335\n\n; <<>> DiG 9.18.12-0ubuntu0.22.04.3-Ubuntu <<>> pi-hole.net @127.0.0.1 -p 5335\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 33858\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 1232\n;; QUESTION SECTION:\n;pi-hole.net.\t\t\tIN\tA\n\n;; ANSWER SECTION:\npi-hole.net.\t\t300\tIN\tA\t3.18.136.52\n\n;; Query time: 543 msec\n;; SERVER: 127.0.0.1#5335(127.0.0.1) (UDP)\n;; WHEN: Sat Oct 14 09:49:40 UTC 2023\n;; MSG SIZE  rcvd: 56\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},42129:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/pihole-restart-test-d4ff7c2007220bbe5435fb1f2191b72e.png"},59984:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/pihole-config-web-fa239aad749cdfb0b8c241c003cc0cdd.png"},92931:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/pihole-testdnssec-527ddbc87ff363d958092704e5731c8f.png"}}]);