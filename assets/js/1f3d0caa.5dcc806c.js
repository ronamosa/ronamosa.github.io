"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[7626],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(96540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},65950:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ec2-lab-08-469f2321fa75722cb5f81e8d1fb25472.png"},95589:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"engineer/AWS/CloudDemoNotes","title":"TechNesian Live Stream: Cloud Demo Notes","description":"You want to demonstrate creating cloud resources, i.e. 3 x EC2 Web Servers, in 3 x Regions, using 3 x methods.","source":"@site/docs/engineer/AWS/CloudDemoNotes.md","sourceDirName":"engineer/AWS","slug":"/engineer/AWS/CloudDemoNotes","permalink":"/docs/engineer/AWS/CloudDemoNotes","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/AWS/CloudDemoNotes.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"title":"TechNesian Live Stream: Cloud Demo Notes"},"sidebar":"docsSidebar","previous":{"title":"AWS Workshop ECS Cats and Dogs - Part 1","permalink":"/docs/engineer/AWS/AWS-ECS-Cats-n-Dogs"},"next":{"title":"UPNG: AWS Workshops","permalink":"/docs/upng"}}');var t=s(74848),r=s(28453);const a={title:"TechNesian Live Stream: Cloud Demo Notes"},o=void 0,d={},l=[{value:"Pre-requsites",id:"pre-requsites",level:2},{value:"Console",id:"console",level:2},{value:"user-data script",id:"user-data-script",level:3},{value:"CloudFormation",id:"cloudformation",level:2},{value:"CLI",id:"cli",level:2},{value:"Pre-requisites",id:"pre-requisites",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"You want to demonstrate creating cloud resources, i.e. 3 x EC2 Web Servers, in 3 x Regions, using 3 x methods."}),"\n",(0,t.jsx)(n.h2,{id:"pre-requsites",children:"Pre-requsites"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["3 x KeyPairs","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ManualEC2Key"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"CloudFormationEC2Key"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"AWSCLIEC2Key"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Pre-launch 1 x WebServer in another Region as a backup"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Download the private key & prepare ",(0,t.jsx)(n.code,{children:"chmod 0600"}),' on a fresh Ubuntu install for TechNesian "local" work.']}),"\n",(0,t.jsx)(n.h2,{id:"console",children:"Console"}),"\n",(0,t.jsxs)(n.admonition,{title:"Config",type:"info",children:[(0,t.jsxs)(n.p,{children:["Region: US East (N. Virginia), ",(0,t.jsx)(n.code,{children:"us-east-1"})]}),(0,t.jsxs)(n.p,{children:["KeyPair: ",(0,t.jsx)(n.code,{children:"ManualEC2Key"})]})]}),"\n",(0,t.jsxs)(n.p,{children:["Basically doing the Linux EC2 part from ",(0,t.jsx)(n.a,{href:"https://catalog.workshops.aws/general-immersionday/en-US/basic-modules/10-ec2/ec2-linux/2-ec2",children:"AWS General Immersion Day"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Run through lanching an EC2 instance"}),"\n",(0,t.jsxs)(n.li,{children:["include ",(0,t.jsx)(n.code,{children:"user-data"})," script below"]}),"\n",(0,t.jsx)(n.li,{children:"Launch and show it's pending"}),"\n",(0,t.jsxs)(n.li,{children:["Move onto ",(0,t.jsx)(n.a,{href:"#cloudformation",children:"CloudFormation Section"})," while you're waiting"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"HTTP! Web Server",type:"danger",children:(0,t.jsxs)(n.p,{children:["the URL for the EC2 is ",(0,t.jsx)(n.strong,{children:"HTTP"})," ",(0,t.jsx)(n.em,{children:"not"})," HTTPS!"]})}),"\n",(0,t.jsx)(n.h3,{id:"user-data-script",children:"user-data script"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"#!/bin/sh\n\u200b\n#Install a LAMP stack\ndnf install -y httpd wget php-fpm php-mysqli php-json php php-devel\ndnf install -y mariadb105-server\ndnf install -y httpd php-mbstring\n\u200b\n#Start the web server\nchkconfig httpd on\nsystemctl start httpd\n\u200b\n#Install the web pages for our lab\nif [ ! -f /var/www/html/immersion-day-app-php7.zip ]; then\n   cd /var/www/html\n   wget -O 'immersion-day-app-php7.zip' 'https://static.us-east-1.prod.workshops.aws/public/b8d66c76-0455-4d13-8acd-9002b999b537/assets/immersion-day-app-php7.zip'\n   unzip immersion-day-app-php7.zip\nfi\n\u200b\n#Install the AWS SDK for PHP\nif [ ! -f /var/www/html/aws.zip ]; then\n   cd /var/www/html\n   mkdir vendor\n   cd vendor\n   wget https://docs.aws.amazon.com/aws-sdk-php/v3/download/aws.zip\n   unzip aws.zip\nfi\n\u200b\n# Update existing packages\ndnf update -y\n"})}),"\n",(0,t.jsx)(n.p,{children:"Success looks like this:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"aws webserver",src:s(65950).A+"",width:"1356",height:"600"})}),"\n",(0,t.jsx)(n.h2,{id:"cloudformation",children:"CloudFormation"}),"\n",(0,t.jsxs)(n.admonition,{title:"Config",type:"info",children:[(0,t.jsxs)(n.p,{children:["Region: Asia Pacific (Singapore), ",(0,t.jsx)(n.code,{children:"ap-southeast-1"})]}),(0,t.jsxs)(n.p,{children:["KeyPair: ",(0,t.jsx)(n.code,{children:"CloudFormationEC2Key"})]})]}),"\n",(0,t.jsx)(n.admonition,{title:"Change Region",type:"warning",children:(0,t.jsxs)(n.p,{children:["Remember to Change Region to ",(0,t.jsx)(n.code,{children:"ap-southeast-1"})," before running cloudformation"]})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create Stack"}),"\n",(0,t.jsxs)(n.li,{children:["Upload file ",(0,t.jsx)(n.code,{children:"CloudDemoCF.yaml"})]}),"\n",(0,t.jsx)(n.li,{children:"Launch"}),"\n",(0,t.jsx)(n.li,{children:"Review the YAML on the stream"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"AWSTemplateFormatVersion: '2010-09-09'\nDescription: 'AWS CloudFormation Template: EC2 instance with user-data script and security groups'\n\nResources:\n  MyEC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      InstanceType: t2.micro # Free tier eligible instance type\n      ImageId: !FindInMap [RegionMap, !Ref \"AWS::Region\", AMI] # Amazon Linux AMI ID\n      KeyName: CloudFormationEC2Key # Key pair name\n      SecurityGroups:\n        - Ref: InstanceSecurityGroup\n      UserData:\n        Fn::Base64: |\n          #!/bin/sh\n\n          #Install a LAMP stack\n          dnf install -y httpd wget php-fpm php-mysqli php-json php php-devel\n          dnf install -y mariadb105-server\n          dnf install -y httpd php-mbstring\n\n          #Start the web server\n          chkconfig httpd on\n          systemctl start httpd\n\n          #Install the web pages for our lab\n          if [ ! -f /var/www/html/immersion-day-app-php7.zip ]; then\n            cd /var/www/html\n            wget -O 'immersion-day-app-php7.zip' 'https://static.us-east-1.prod.workshops.aws/public/b8d66c76-0455-4d13-8acd-9002b999b537/assets/immersion-day-app-php7.zip'\n            unzip immersion-day-app-php7.zip\n          fi\n\n          #Install the AWS SDK for PHP\n          if [ ! -f /var/www/html/aws.zip ]; then\n            cd /var/www/html\n            mkdir vendor\n            cd vendor\n            wget https://docs.aws.amazon.com/aws-sdk-php/v3/download/aws.zip\n            unzip aws.zip\n          fi\n\n          # Update existing packages\n          dnf update -y\n\n  InstanceSecurityGroup:\n    Type: 'AWS::EC2::SecurityGroup'\n    Properties:\n      GroupDescription: Enable SSH and HTTP access\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: '22'\n          ToPort: '22'\n          CidrIp: 0.0.0.0/0\n        - IpProtocol: tcp\n          FromPort: '80'\n          ToPort: '80'\n          CidrIp: 0.0.0.0/0\n\nMappings:\n  RegionMap:\n    ap-southeast-1:\n      AMI: ami-02453f5468b897e31 # Amazon Linux 2023 AMI\n    us-east-1:\n      AMI: ami-0230bd60aa48260c6 # Amazon Linux 2023 AMI\n    # Add other regions as needed\n"})}),"\n",(0,t.jsx)(n.h2,{id:"cli",children:"CLI"}),"\n",(0,t.jsxs)(n.admonition,{title:"Config",type:"info",children:[(0,t.jsxs)(n.p,{children:["Region: Asia Pacific (Sydney), ",(0,t.jsx)(n.code,{children:"ap-southeast-2"})]}),(0,t.jsxs)(n.p,{children:["KeyPair: ",(0,t.jsx)(n.code,{children:"AWSCLIEC2Key"})]})]}),"\n",(0,t.jsx)(n.h3,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"keypairs downloaded ready"}),"\n",(0,t.jsx)(n.li,{children:"aws cli is installed"}),"\n",(0,t.jsx)(n.li,{children:"aws cli is configured with necessary access keys"}),"\n",(0,t.jsx)(n.li,{children:"user has necessary permissions"}),"\n",(0,t.jsx)(n.li,{children:"create security groups in correct region ahead of time"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Easy as pie, your cli command is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"  aws ec2 run-instances \\\n      --image-id ami-0361bbf2b99f46c1d \\\n      --count 1 \\\n      --instance-type t2.micro \\\n      --key-name AWSCLIEC2Key \\\n      --security-group-ids sg-079750aa87d66752c \\\n      --user-data file://./scripts/user-data.sh \\\n      --region ap-southeast-2\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);