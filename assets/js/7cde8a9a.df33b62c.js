"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[9043],{7822:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"archive/2017-01-20-Docker-Private-Registry_v1.0","title":"Docker Trusted Registry (private) 1.0","description":"I wanted to setup a Docker Trusted Registry for my lab, so I did a search and walked through a few tutorials before landing on this one which \'mostly\' worked for me: bobcares.com","source":"@site/docs/archive/2017-01-20-Docker-Private-Registry_v1.0.md","sourceDirName":"archive","slug":"/archive/2017-01-20-Docker-Private-Registry_v1.0","permalink":"/docs/archive/2017-01-20-Docker-Private-Registry_v1.0","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/archive/2017-01-20-Docker-Private-Registry_v1.0.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"title":"Docker Trusted Registry (private) 1.0"},"sidebar":"docsSidebar","previous":{"title":"Initializing a CISCO ASA 5505","permalink":"/docs/archive/2016-03-18-First-Config_CISCO-ASA5505"},"next":{"title":"Troubleshooting Docker Volumes errors","permalink":"/docs/archive/2017-06-09-Docker-volumes-no-such-file-ISSUE"}}');var n=t(74848),o=t(28453);const i={title:"Docker Trusted Registry (private) 1.0"},c=void 0,a={},d=[{value:"create storage location",id:"create-storage-location",level:2},{value:"create TLS certs, keys using a special-purpose container",id:"create-tls-certs-keys-using-a-special-purpose-container",level:2},{value:"setup your native basic auth",id:"setup-your-native-basic-auth",level:2},{value:"create and run registry container",id:"create-and-run-registry-container",level:2},{value:"check its running and test your login:",id:"check-its-running-and-test-your-login",level:2},{value:"time to test its working for storing our images!",id:"time-to-test-its-working-for-storing-our-images",level:2},{value:"pull, tag, push",id:"pull-tag-push",level:2},{value:"systemd (OPTIONAL)",id:"systemd-optional",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"error: &quot;code&quot;:&quot;UNAUTHORIZED&quot;,&quot;message&quot;:&quot;authentication required&quot;",id:"error-codeunauthorizedmessageauthentication-required",level:3},{value:"fix",id:"fix",level:4},{value:"error: x509: certificate signed by unknown authority",id:"error-x509-certificate-signed-by-unknown-authority",level:3},{value:"fix no.1",id:"fix-no1",level:4},{value:"fix no.2",id:"fix-no2",level:4},{value:"References",id:"references",level:2},{value:"Appendix",id:"appendix",level:2}];function l(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:["I wanted to setup a Docker Trusted Registry for my lab, so I did a search and walked through a few tutorials before landing on this one which 'mostly' worked for me: ",(0,n.jsx)(r.a,{href:"https://bobcares.com/blog/docker-private-repository/2/",children:"bobcares.com"})]}),"\n",(0,n.jsx)(r.p,{children:"This is basically my (abbreviated) walk-through of that with the troubleshooting steps"}),"\n",(0,n.jsx)(r.h2,{id:"create-storage-location",children:"create storage location"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"mkdir -p /opt/registry/{data,ssl,config}"})}),"\n",(0,n.jsx)(r.h2,{id:"create-tls-certs-keys-using-a-special-purpose-container",children:"create TLS certs, keys using a special-purpose container"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"docker run --rm -v /opt/registry/ssl:/certs -e SSL_SUBJECT=<FQDN-of-your-registry-host /> paulczar/omgwtfssl\n"})}),"\n",(0,n.jsx)(r.p,{children:"find your files in ''/opt/registry/ssl' (ca-key.pem, ca.pem, ca.srl, cert.pem, key.csr, key.pem, openssl.cnf)"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.em,{children:"note: the bobcares guys go with a registry.env file to define their registry config.yml but I decided to go a different way."})}),"\n",(0,n.jsx)(r.h2,{id:"setup-your-native-basic-auth",children:"setup your native basic auth"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"docker run --entrypoint htpasswd registry:2 -Bbn usertest userpasswd > auth/htpasswd\n"})}),"\n",(0,n.jsx)(r.h2,{id:"create-and-run-registry-container",children:"create and run registry container"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"[root@dockeregistry registry]$ docker-compose up -d\nCreating registry ...\nCreating registry ... done\n"})}),"\n",(0,n.jsx)(r.h2,{id:"check-its-running-and-test-your-login",children:"check its running and test your login:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'[root@dockeregistry registry]# docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\n60cf3aae3d83        registry:2          "/entrypoint.sh /etc/"   37 seconds ago      Up 35 seconds       0.0.0.0:5000->5000/tcp   registry\n'})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"[root@docker ~]# docker login https://dockeregistry:5000\nUsername: usertest\nPassword:\nLogin Succeeded\n"})}),"\n",(0,n.jsx)(r.p,{children:"test the API:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"curl -k -u usertest:userpasswd -X GET https://dockeregistry:5000/v2/_catalog\n"})}),"\n",(0,n.jsxs)(r.p,{children:["(if you get an UNAUTHORIZED error here, see the ",(0,n.jsx)(r.em,{children:"'troubleshooting'"})," section below)"]}),"\n",(0,n.jsx)(r.h2,{id:"time-to-test-its-working-for-storing-our-images",children:"time to test its working for storing our images!"}),"\n",(0,n.jsx)(r.h2,{id:"pull-tag-push",children:"pull, tag, push"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"[root@docker ~]# docker pull python\nUsing default tag: latest\nTrying to pull repository docker.io/library/python ...\nlatest: Pulling from docker.io/library/python\n\nef0380f84d05: Pull complete\n24c170465c65: Pull complete\n4f38f9d5c3c0: Pull complete\n4125326b53d8: Pull complete\n35de80d77198: Pull complete\nee2411f41489: Pull complete\n887347005f96: Pull complete\n9afc04448f28: Pull complete\nDigest: sha256:cbab919d1fe9f619f5f7d55b852bc04ba661c27abb4db90b802df40287e0f541\n\n[root@docker ~]# docker tag 41397f4f2887 dockeregistry:5000/python\n[root@docker ~]# docker push dockeregistry:5000/python\nThe push refers to a repository [dockeregistry:5000/python]\ne95f4a878d0c: Pushed\n7cd56c69527f: Pushed\nca8fcddadb39: Pushing [===============================================>   ] 59.26 MB/61.89 MB\n201187968504: Pushed\necf5c2e2468e: Pushing [=====>                                             ] 33.47 MB/318.7 MB\nbb07d0c1008d: Pushing [=================>                                 ] 42.44 MB/122.9 MB\n4902b007e6a7: Pushing [==========================================>        ] 38.14 MB/44.55 MB\n007ab444b234: Pushing [==================>                                ] 45.04 MB/123.4 MB\n\n[root@docker ~]# docker tag 41397f4f2887 dockeregistry:5000/python\n[root@docker ~]# docker push dockeregistry:5000/python\nThe push refers to a repository [dockeregistry:5000/python]\ne95f4a878d0c: Pushed\n7cd56c69527f: Pushed\nca8fcddadb39: Pushed\n201187968504: Pushed\necf5c2e2468e: Pushed\nbb07d0c1008d: Pushed\n4902b007e6a7: Pushed\n007ab444b234: Pushed\nlatest: digest: sha256:cbab919d1fe9f619f5f7d55b852bc04ba661c27abb4db90b802df40287e0f541 size: 2007\n"})}),"\n",(0,n.jsx)(r.p,{children:"a quick query of the registry API should show you your newly pushed image:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"curl -k -u usertest:userpasswd -X GET https://dockeregistry:5000/v2/_catalog\n"})}),"\n",(0,n.jsx)(r.p,{children:"and now you can go grab a muffin cos you're FINISHED =)"}),"\n",(0,n.jsx)(r.h2,{id:"systemd-optional",children:"systemd (OPTIONAL)"}),"\n",(0,n.jsx)(r.p,{children:"if you're wanting to have a nice clean startup process for your registry, you can do follow this systemd setup."}),"\n",(0,n.jsx)(r.p,{children:"$ vim /usr/lib/systemd/system/docker.trusted.registry.service"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ini",children:"[Unit]\nDescription=Docker Trusted Registry\nAuthor=devops@drkcu.be\nAfter=docker.service\n\n[Service]\nRestart=always\nExecStart=/usr/bin/docker start -a registry\nExecStop=/usr/bin/docker stop -t 60 registry\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,n.jsx)(r.p,{children:"$ systemctl enable docker.trusted.registry\n$ systemctl start docker.trusted.registry"}),"\n",(0,n.jsx)(r.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,n.jsx)(r.p,{children:"cos shit never goes right the first time"}),"\n",(0,n.jsx)(r.h3,{id:"error-codeunauthorizedmessageauthentication-required",children:'error: "code":"UNAUTHORIZED","message":"authentication required"'}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'[root@dockeregistry registry]# curl -k -u usertest:userpasswd -X GET https://dockeregistry:5000/v2/_catalog\n{"errors":[{"code":"UNAUTHORIZED","message":"authentication required","detail":[{"Type":"registry","Class":"","Name":"catalog","Action":"*"}]}]}\n'})}),"\n",(0,n.jsx)(r.h4,{id:"fix",children:"fix"}),"\n",(0,n.jsx)(r.p,{children:"check your htpasswd is setup (properly), and check registry logs (docker logs -f registry) for errors."}),"\n",(0,n.jsx)(r.h3,{id:"error-x509-certificate-signed-by-unknown-authority",children:"error: x509: certificate signed by unknown authority"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"[root@dockeregistry ~]# docker push dockeregistry:5000/ubuntu\nThe push refers to a repository [dockeregistry:5000/ubuntu]\nGet https://dockeregistry:5000/v1/_ping: x509: certificate signed by unknown authority\n"})}),"\n",(0,n.jsx)(r.h4,{id:"fix-no1",children:"fix no.1"}),"\n",(0,n.jsx)(r.p,{children:"make sure you have the 'ca.crt' in a folder in /etc/docker/certs.d that matches your registry tag exactly (note: you need to do this 'ca.crt' on EVERY host that needs to talk to the registry)"}),"\n",(0,n.jsxs)(r.p,{children:["e.g.\nif your command is ",(0,n.jsx)(r.code,{children:"docker tag 7b9b13f7b9c0 dockeregistry:5000/ubuntu"}),"\nthen you have to have a 'ca.crt' in ",(0,n.jsx)(r.code,{children:"/etc/docker/certs.d/dockeregistry:5000"})," (includes colon and port number)"]}),"\n",(0,n.jsx)(r.h4,{id:"fix-no2",children:"fix no.2"}),"\n",(0,n.jsxs)(r.p,{children:["if fix no.1 doesn't work and you're still getting the 'unknown authority' error try the following from the ",(0,n.jsx)(r.a,{href:"https://docs.docker.com/datacenter/dtr/2.2/guides/user/access-dtr/#windows",children:"docker product manual"})," for your distribution."]}),"\n",(0,n.jsx)(r.p,{children:"e.g. I'm on xubuntu so this worked for me (on my laptop):"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"root@hx0:/usr/local/share/ca-certificates# cp /path/to/dtr/ca.crt .\nroot@hx0:/usr/local/share/ca-certificates# update-ca-certificates\nUpdating certificates in /etc/ssl/certs...\n1 added, 0 removed; done.\nRunning hooks in /etc/ca-certificates/update.d...\n\nAdding debian:ca.pem\ndone.\nUpdating Mono key store\nLinux Cert Store Sync - version 4.2.1.0\nSynchronize local certs with certs from local Linux trust store.\nCopyright 2002, 2003 Motus Technologies. Copyright 2004-2008 Novell. BSD licensed.\n\nI already trust 176, your new list has 177\nCertificate added: CN=test-ca\n1 new root certificates were added to your trust store.\nImport process completed.\nDone\ndone.\nroot@hx0:/usr/local/share/ca-certificates# systemctl restart docker\nroot@hx0:/usr/local/share/ca-certificates# docker login https://dockeregistry:5000\nUsername: usertest\nPassword:\nLogin Succeeded\n"})}),"\n",(0,n.jsx)(r.h2,{id:"references",children:"References"}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://docs.docker.com/registry/deploying/#native-basic-auth",children:"registry with native basic auth"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://docs.docker.com/registry/insecure/#using-self-signed-certificates",children:"enable insecure registry with self-signed certs"})}),"\n"]})}),"\n",(0,n.jsx)(r.h2,{id:"appendix",children:"Appendix"}),"\n",(0,n.jsx)(r.p,{children:"random doesnt-fit-anywhere-else note: if you wanted to go HTTP, skip TLS, you need the following in '/etc/default/docker'"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'# Use DOCKER_OPTS to modify the daemon startup options.\nDOCKER_OPTS="--insecure-registry <FQDN-of-your-registry-host />:<PORT />"\n'})}),"\n",(0,n.jsxs)(r.p,{children:["then restart docker daemon: ",(0,n.jsx)(r.code,{children:"$ systemctl restart docker"})]})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>c});var s=t(96540);const n={},o=s.createContext(n);function i(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);