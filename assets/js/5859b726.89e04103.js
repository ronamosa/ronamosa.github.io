"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[5555],{12496:(e,n,o)=>{o.d(n,{A:()=>i});const i=o.p+"assets/images/pihole-docker-dns1-7bc354388fd8f27d3d5bbfa2901cc80b.png"},28453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>l});var i=o(96540);const s={},r=i.createContext(s);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(r.Provider,{value:n},e.children)}},77899:(e,n,o)=>{o.d(n,{A:()=>i});const i=o.p+"assets/images/pihole-docker-dns2-405c52bd6d69c012f22b8c846cb95279.png"},86741:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"engineer/LAB/pihole-docker-unbound","title":"Pi-hole with Unbound DNS: Complete Docker Setup for Privacy & Ad-Blocking","description":"Deploy Pi-hole and Unbound recursive DNS resolver in Docker for private, ad-free networking. Comprehensive guide with Docker Compose configuration and troubleshooting.","source":"@site/docs/engineer/LAB/pihole-docker-unbound.md","sourceDirName":"engineer/LAB","slug":"/engineer/LAB/pihole-docker-unbound","permalink":"/docs/engineer/LAB/pihole-docker-unbound","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/LAB/pihole-docker-unbound.md","tags":[{"inline":true,"label":"pi-hole","permalink":"/docs/tags/pi-hole"},{"inline":true,"label":"dns","permalink":"/docs/tags/dns"},{"inline":true,"label":"docker","permalink":"/docs/tags/docker"},{"inline":true,"label":"privacy","permalink":"/docs/tags/privacy"},{"inline":true,"label":"networking","permalink":"/docs/tags/networking"},{"inline":true,"label":"home-lab","permalink":"/docs/tags/home-lab"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":5,"frontMatter":{"title":"Pi-hole with Unbound DNS: Complete Docker Setup for Privacy & Ad-Blocking","description":"Deploy Pi-hole and Unbound recursive DNS resolver in Docker for private, ad-free networking. Comprehensive guide with Docker Compose configuration and troubleshooting.","keywords":["pi-hole","unbound","dns","docker","ad blocking","privacy","recursive dns","docker-compose"],"tags":["pi-hole","dns","docker","privacy","networking","home-lab"],"sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Mount Proxmox VM Logical Volumes for Direct Filesystem Access","permalink":"/docs/engineer/LAB/proxmox-lvm-mount"},"next":{"title":"How to Set Up CursorAI AppImage on GNOME Desktop (Linux)","permalink":"/docs/engineer/LAB/setup-cursorai-appimage-gnome"}}');var s=o(74848),r=o(28453);const t={title:"Pi-hole with Unbound DNS: Complete Docker Setup for Privacy & Ad-Blocking",description:"Deploy Pi-hole and Unbound recursive DNS resolver in Docker for private, ad-free networking. Comprehensive guide with Docker Compose configuration and troubleshooting.",keywords:["pi-hole","unbound","dns","docker","ad blocking","privacy","recursive dns","docker-compose"],tags:["pi-hole","dns","docker","privacy","networking","home-lab"],sidebar_position:5},l=void 0,c={},d=[{value:"Related Networking &amp; Infrastructure Guides",id:"related-networking--infrastructure-guides",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Overview",id:"overview",level:2},{value:"Initial Setup",id:"initial-setup",level:2},{value:"Create Project Directory Structure",id:"create-project-directory-structure",level:3},{value:"Docker Compose Configuration",id:"docker-compose-configuration",level:3},{value:"Configure Unbound",id:"configure-unbound",level:3},{value:"Configure dnsmasq for Pi-hole",id:"configure-dnsmasq-for-pi-hole",level:3},{value:"Starting the Containers",id:"starting-the-containers",level:2},{value:"Configuring Pi-hole",id:"configuring-pi-hole",level:2},{value:"Important Pi-hole Settings",id:"important-pi-hole-settings",level:3},{value:"Host Configuration",id:"host-configuration",level:2},{value:"Make /etc/resolv.conf Immutable",id:"make-etcresolvconf-immutable",level:3},{value:"Configure dhclient",id:"configure-dhclient",level:3},{value:"Configure Docker DNS",id:"configure-docker-dns",level:3},{value:"Network Configuration",id:"network-configuration",level:2},{value:"Auto-start on Boot",id:"auto-start-on-boot",level:2},{value:"Testing",id:"testing",level:2},{value:"Verify DNS Resolution",id:"verify-dns-resolution",level:3},{value:"Block Lists",id:"block-lists",level:2},{value:"Check for DNS Leaks",id:"check-for-dns-leaks",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Error: &quot;ignoring query from non-local network&quot;",id:"common-error-ignoring-query-from-non-local-network",level:3},{value:"Unbound Not Working",id:"unbound-not-working",level:3},{value:"Common Unbound Warnings (Normal Behavior)",id:"common-unbound-warnings-normal-behavior",level:3},{value:"Buffer Size Warning",id:"buffer-size-warning",level:4},{value:"Duplicate Root Hints Warning",id:"duplicate-root-hints-warning",level:4},{value:"Subnetcache Module Warnings",id:"subnetcache-module-warnings",level:4},{value:"Pi-hole Container Permission Issues",id:"pi-hole-container-permission-issues",level:3},{value:"Pihole Gravity Lists Errors",id:"pihole-gravity-lists-errors",level:3},{value:"Additional Notes",id:"additional-notes",level:2},{value:"References",id:"references",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This guide walks through setting up Pi-hole with Unbound as a recursive DNS resolver using Docker. This combination provides ad-blocking functionality while ensuring DNS privacy by avoiding third-party DNS providers."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"This guide is based on real-world implementation and troubleshooting. Each step represents hard-earned knowledge from overcoming various challenges."})}),"\n",(0,s.jsx)(n.h2,{id:"related-networking--infrastructure-guides",children:"Related Networking & Infrastructure Guides"}),"\n",(0,s.jsxs)(n.p,{children:["\ud83c\udf10 ",(0,s.jsx)(n.strong,{children:"DNS & Network Security"}),": Expand your networking infrastructure:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DNS Optimization"}),": ",(0,s.jsx)(n.a,{href:"./pihole-dns",children:"Pi-hole DNS Configuration"})," - Advanced DNS setup and performance tuning"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security Monitoring"}),": ",(0,s.jsx)(n.a,{href:"./pihole-compromise",children:"Pi-hole Compromise Detection"})," - Network security and intrusion detection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DNS Troubleshooting"}),": ",(0,s.jsx)(n.a,{href:"./pihole-servfail-unbound",children:"Pi-hole SERVFAIL Issues"})," - Resolve common DNS problems"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["\ud83c\udfd7\ufe0f ",(0,s.jsx)(n.strong,{children:"Infrastructure Integration"}),": Connect with broader home lab setup:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Virtualization Platform"}),": ",(0,s.jsx)(n.a,{href:"./proxmox-hub",children:"Proxmox Virtualization Hub"})," - Host Pi-hole on Proxmox VMs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Container Orchestration"}),": ",(0,s.jsx)(n.a,{href:"/docs/engineer/K8s/",children:"Kubernetes Deployment"})," - Scale DNS services with K8s"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Complete Lab Guide"}),": ",(0,s.jsx)(n.a,{href:"./home-lab-hub",children:"Home Lab Infrastructure Hub"})," - Full networking and automation setup"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Linux server with Docker and Docker Compose installed"}),"\n",(0,s.jsx)(n.li,{children:"Basic knowledge of networking concepts"}),"\n",(0,s.jsx)(n.li,{children:"Root or sudo access"}),"\n",(0,s.jsx)(n.li,{children:"A user with docker permissions to be the pihole user."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Our setup consists of two Docker containers:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pi-hole"}),": For ad-blocking and DNS management"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Unbound"}),": For recursive DNS resolution"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"initial-setup",children:"Initial Setup"}),"\n",(0,s.jsx)(n.p,{children:"Here are the commands to create a dedicated user for running Pi-hole in Docker:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create the user:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo useradd -m -s /bin/bash piholeuser\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Set a password (optional but recommended):"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo passwd piholeuser\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Add user to the Docker group:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo usermod -aG docker piholeuser\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Create a directory for Pi-hole Docker files:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo mkdir -p /opt/pihole\nsudo chown piholeuser:piholeuser /opt/pihole\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsx)(n.li,{children:"If using Docker socket-based permission (alternative to Docker group):"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo setfacl -m user:piholeuser:rw /var/run/docker.sock\n"})}),"\n",(0,s.jsx)(n.p,{children:"You'll need to log out and back in for group changes to take effect. To switch to the new user:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"su - piholeuser\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-project-directory-structure",children:"Create Project Directory Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/pihole/{pihole,dnsmasq,unbound}\ncd ~/pihole\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-compose-configuration",children:"Docker Compose Configuration"}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Using proper container capabilities and permissions is crucial. Missing or incorrect permissions will lead to segmentation faults and permission errors."})}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," file with the following content:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: \'3.8\'\nservices:\n  pihole:\n    container_name: pihole\n    image: pihole/pihole:latest\n    ports:\n      - "53:53/tcp"\n      - "53:53/udp"\n      - "80:80/tcp"\n    environment:\n      TZ: "Pacific/Auckland"  # Replace with your timezone\n      WEBPASSWORD: "password"  # Change this!\n      DNSMASQ_LISTENING: "all"\n      PIHOLE_DNS_1: "unbound#53"  # Point to unbound container\n    volumes:\n      - ./pihole:/etc/pihole\n      - ./dnsmasq:/etc/dnsmasq.d\n    restart: unless-stopped\n    networks:\n      dns_network:\n    cap_add:\n      - NET_ADMIN\n      - NET_RAW\n      - CAP_SYS_NICE\n      - CAP_SYS_TIME\n    security_opt:\n      - seccomp:unconfined\n    depends_on:\n      - unbound\n  unbound:\n    container_name: unbound\n    image: klutchell/unbound:latest\n    volumes:\n      - ./unbound:/etc/unbound/custom.conf.d\n    restart: unless-stopped\n    networks:\n      dns_network:\nnetworks:\n  dns_network:\n    driver: bridge\n'})}),"\n",(0,s.jsx)(n.h3,{id:"configure-unbound",children:"Configure Unbound"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create the Unbound configuration file:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat > unbound/unbound.conf << EOF\nserver:\n    verbosity: 1\n    interface: 0.0.0.0\n    port: 53\n    do-ip4: yes\n    do-udp: yes\n    do-tcp: yes\n\n    # May be set to yes if you have IPv6 connectivity\n    do-ip6: no\n\n    # Use this only when you downloaded the list of primary root servers!\n    root-hints: /etc/unbound/custom.conf.d/root.hints\n\n    # Trust glue only if it is within the servers authority\n    harden-glue: yes\n\n    # Require DNSSEC data for trust-anchored zones, if no DNSSEC data for an answer,\n    # with trust anchors enabled, the zone becomes Bogus\n    harden-dnssec-stripped: yes\n\n    # Don't use capitalization randomization\n    use-caps-for-id: no\n\n    # Reduce EDNS reassembly buffer size\n    edns-buffer-size: 1472\n\n    # Perform prefetching of close to expired message cache entries\n    prefetch: yes\n\n    # One thread should be sufficient\n    num-threads: 1\n\n    # Ensure kernel buffer is large enough (reduced to avoid permission warnings)\n    so-rcvbuf: 400k\n\n    # Ensure privacy of local IP ranges\n    private-address: 192.168.0.0/16\n    private-address: 169.254.0.0/16\n    private-address: 172.16.0.0/12\n    private-address: 10.0.0.0/8\n    private-address: fd00::/8\n    private-address: fe80::/10\nEOF\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Verifying Custom Configuration Loading",type:"tip",children:[(0,s.jsx)(n.p,{children:"After starting Unbound, check the logs to confirm your custom configuration is being loaded:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Check startup logs for your custom settings\ndocker logs unbound --tail=20\n\n# Look for these indicators that your config is working:\n# - "so-rcvbuf" warnings (shows your buffer size setting is applied)\n# - Verbosity level messages (info/debug logs if verbosity > 0)\n# - "start of service" message\n# - Any errors about your specific config paths\n'})}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Good signs:"})," Warnings about buffer sizes, detailed log messages, successful startup\n",(0,s.jsx)(n.strong,{children:"Bad signs:"})," Only basic startup messages, no mention of your custom settings"]})]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Download the root hints file:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -o unbound/root.hints https://www.internic.net/domain/named.root\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configure-dnsmasq-for-pi-hole",children:"Configure dnsmasq for Pi-hole"}),"\n",(0,s.jsx)(n.p,{children:"Create a custom configuration file for dnsmasq to allow queries from all networks:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat > dnsmasq/02-lan-access.conf << EOF\n# Allow all interfaces\nlisten-address=0.0.0.0\nbind-interfaces\ndomain-needed\nbogus-priv\nEOF\n"})}),"\n",(0,s.jsx)(n.h2,{id:"starting-the-containers",children:"Starting the Containers"}),"\n",(0,s.jsx)(n.p,{children:"Start the containers:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuring-pi-hole",children:"Configuring Pi-hole"}),"\n",(0,s.jsxs)(n.p,{children:["Access the Pi-hole web interface at ",(0,s.jsx)(n.code,{children:"http://host-server-ip/admin/"})," (password is what you set in docker-compose.yml)."]}),"\n",(0,s.jsx)(n.h3,{id:"important-pi-hole-settings",children:"Important Pi-hole Settings"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DNS Settings"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Go to Settings > DNS"}),"\n",(0,s.jsx)(n.li,{children:"Uncheck all upstream DNS providers"}),"\n",(0,s.jsx)(n.li,{children:"Make sure it shows your unbound container is set as the upstream DNS"}),"\n",(0,s.jsx)(n.li,{children:'Under Interface settings, select "Permit all origins" to allow queries from all networks'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"![DNS Settings Screenshot Placeholder]"}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Domain Settings"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'Set your local domain (example: "playtime.lan")'}),"\n",(0,s.jsx)(n.li,{children:'Enable "Expand hostnames" if you want to use simple hostnames in your local network'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Pi-hole admin interface DNS settings showing upstream DNS server configuration for Unbound integration",src:o(12496).A+"",width:"1005",height:"907"})}),"\n",(0,s.jsxs)(n.p,{children:["Custom settings, ",(0,s.jsx)(n.code,{children:"unbound"})," is our upstream:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Pi-hole custom DNS configuration panel with conditional forwarding and upstream resolver settings",src:o(77899).A+"",width:"496",height:"412"})}),"\n",(0,s.jsx)(n.h2,{id:"host-configuration",children:"Host Configuration"}),"\n",(0,s.jsx)(n.p,{children:"To prevent DNS leaks, configure your host server to use Pi-hole for DNS:"}),"\n",(0,s.jsx)(n.h3,{id:"make-etcresolvconf-immutable",children:"Make /etc/resolv.conf Immutable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Edit resolv.conf to use Pi-hole\necho "nameserver 127.0.0.1" | sudo tee /etc/resolv.conf\n\n# Make it immutable to prevent DHCP from changing it\nsudo chattr +i /etc/resolv.conf\n'})}),"\n",(0,s.jsx)(n.h3,{id:"configure-dhclient",children:"Configure dhclient"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"If you don't prevent DHCP from overwriting your DNS settings, your host might revert to using external DNS providers, causing DNS leaks."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo vim /etc/dhcp/dhclient.conf\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"supersede domain-name-servers 127.0.0.1;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configure-docker-dns",children:"Configure Docker DNS"}),"\n",(0,s.jsxs)(n.p,{children:["Create or edit ",(0,s.jsx)(n.code,{children:"/etc/docker/daemon.json"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo vim /etc/docker/daemon.json\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "dns": ["127.0.0.1"]\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Restart Docker:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart docker\n"})}),"\n",(0,s.jsx)(n.h2,{id:"network-configuration",children:"Network Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Configure your DHCP server to provide your Pi-hole server's IP address as the DNS server for all clients."}),"\n",(0,s.jsx)(n.h2,{id:"auto-start-on-boot",children:"Auto-start on Boot"}),"\n",(0,s.jsx)(n.p,{children:"Create a systemd service to auto-start the containers on boot:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo vim /etc/systemd/system/pihole-docker.service\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[Unit]\nDescription=Pi-hole Docker Compose\nRequires=docker.service\nAfter=docker.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nWorkingDirectory=/home/piholeuser/pihole\nExecStart=/usr/bin/docker-compose up -d\nExecStop=/usr/bin/docker-compose down\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,s.jsx)(n.p,{children:"Enable the service:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable pihole-docker.service\n"})}),"\n",(0,s.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.h3,{id:"verify-dns-resolution",children:"Verify DNS Resolution"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check if Pi-hole is using Unbound\ndocker exec -it pihole nslookup example.com unbound\n\n# Test from another device\nnslookup example.com your-pihole-ip\n"})}),"\n",(0,s.jsx)(n.h2,{id:"block-lists",children:"Block Lists"}),"\n",(0,s.jsxs)(n.p,{children:["Now that you've got the stock standard installation going, you want to add your choice of block lists. I use the following from ",(0,s.jsx)(n.a,{href:"https://github.com/hagezi/dns-blocklists",children:"HaGeZi's"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"https://raw.githubusercontent.com/hagezi/dns-blocklists/refs/heads/main/domains/pro.plus.txt\nhttps://raw.githubusercontent.com/StevenBlack/hosts/master/hosts\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["You can use regex lists if you follow my howto here: ",(0,s.jsx)(n.code,{children:"COMING SOON"})]})}),"\n",(0,s.jsx)(n.h3,{id:"check-for-dns-leaks",children:"Check for DNS Leaks"}),"\n",(0,s.jsxs)(n.p,{children:["Visit ",(0,s.jsx)(n.a,{href:"https://dnsleaktest.com",children:"DNSLeakTest.com"})," and run a standard test. If set up correctly, you should only see your ISP's servers, not Google or other public DNS providers."]}),"\n",(0,s.jsx)(n.p,{children:"Success!! ..."}),"\n",(0,s.jsx)(n.p,{children:"but only if you see 1x ISP there and it's yours."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"DNS leak test results showing successful privacy configuration with no DNS leaks detected",src:o(92582).A+"",width:"1022",height:"688"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-error-ignoring-query-from-non-local-network",children:'Common Error: "ignoring query from non-local network"'}),"\n",(0,s.jsx)(n.p,{children:"This error occurs when Pi-hole refuses queries from networks it doesn't recognize as local."}),"\n",(0,s.jsx)(n.admonition,{type:"danger",children:(0,s.jsxs)(n.p,{children:["This is one of the most common and frustrating issues when setting up Pi-hole in Docker. The default settings prevent Pi-hole from responding to queries from networks ",(0,s.jsx)(n.strong,{children:"outside"})," its Docker network."]})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),': In Pi-hole\'s web interface, go to Settings > DNS > Interface settings, and select "Permit all origins".']}),"\n",(0,s.jsx)(n.h3,{id:"unbound-not-working",children:"Unbound Not Working"}),"\n",(0,s.jsx)(n.p,{children:"If Unbound fails to start or respond to queries:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Check Unbound logs:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker logs unbound\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Verify Unbound is listening:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker exec -it unbound netstat -tulpn | grep LISTEN\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Common Issue: Incorrect Mount Path"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If Unbound isn't loading your custom configuration, verify your mount path matches the directory structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check if your config files are in the right place inside the container\ndocker exec -it unbound ls -la /etc/unbound/custom.conf.d/\n\n# Should show your unbound.conf and root.hints files\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The klutchell/unbound image expects custom configuration files to be in ",(0,s.jsx)(n.code,{children:"/etc/unbound/custom.conf.d/"})," directory. Make sure:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Your local directory structure is ",(0,s.jsx)(n.code,{children:"./unbound/"})]}),"\n",(0,s.jsxs)(n.li,{children:["Your docker-compose.yml mounts ",(0,s.jsx)(n.code,{children:"./unbound:/etc/unbound/custom.conf.d"})]}),"\n",(0,s.jsxs)(n.li,{children:["Configuration files are directly in the ",(0,s.jsx)(n.code,{children:"unbound"})," directory and named ",(0,s.jsx)(n.code,{children:"*.conf"})]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["Ensure your ",(0,s.jsx)(n.code,{children:"custom.conf"})," file has the correct configuration."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"common-unbound-warnings-normal-behavior",children:"Common Unbound Warnings (Normal Behavior)"}),"\n",(0,s.jsx)(n.p,{children:"These warnings are common and don't indicate problems:"}),"\n",(0,s.jsx)(n.h4,{id:"buffer-size-warning",children:"Buffer Size Warning"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"warning: so-rcvbuf 1048576 was not granted. Got 425984. To fix: start with root permissions(linux) or sysctl bigger net.core.rmem_max(linux)\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it means:"})," Unbound requested a 1MB receive buffer but only got ~400KB due to container limitations."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Impact:"})," None - 400KB is sufficient for most home networks."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Fix (optional):"})," Reduce the buffer size in your config:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"so-rcvbuf: 400k  # Instead of 1m\n"})}),"\n",(0,s.jsx)(n.h4,{id:"duplicate-root-hints-warning",children:"Duplicate Root Hints Warning"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"error: second hints for zone . ignored.\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it means:"})," Unbound found multiple root hint configurations (built-in + your custom file)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Impact:"})," None - Unbound uses the first valid hints and ignores duplicates."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Fix (optional):"})," This is normal when using custom root hints files."]}),"\n",(0,s.jsx)(n.h4,{id:"subnetcache-module-warnings",children:"Subnetcache Module Warnings"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"warning: subnetcache: serve-expired is set but not working for data originating from the subnet module cache.\nwarning: subnetcache: prefetch is set but not working for data originating from the subnet module cache.\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it means:"})," Some advanced caching features don't work with the subnet cache module."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Impact:"})," None - basic caching and DNS resolution work perfectly."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Fix:"})," These are informational and can be safely ignored."]}),"\n",(0,s.jsx)(n.h3,{id:"pi-hole-container-permission-issues",children:"Pi-hole Container Permission Issues"}),"\n",(0,s.jsx)(n.p,{children:"If you encounter permission errors when starting Pi-hole:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Check ownership of your volume directories:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo chown -R 1001:1001 ~/pihole/pihole\nsudo chown -R 1001:1001 ~/pihole/dnsmasq\nsudo chown -R 1001:1001 ~/pihole/unbound\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Set appropriate permissions:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo chmod -R 755 ~/pihole/pihole\nsudo chmod -R 755 ~/pihole/dnsmasq\nsudo chmod -R 755 ~/pihole/unbound\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Specifically for Unbound config files:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo chmod 644 ~/pihole/unbound/*.conf\n"})}),"\n",(0,s.jsx)(n.h3,{id:"pihole-gravity-lists-errors",children:"Pihole Gravity Lists Errors"}),"\n",(0,s.jsxs)(n.p,{children:["If you get something like this when you try to run ",(0,s.jsx)(n.code,{children:"pihole -g"})," or the ",(0,s.jsx)(n.code,{children:"Update Gravity"})," links in the web-ui"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"[i] Target: https://raw.githubusercontent.com/hagezi/dns-blocklists/refs/heads/main/wildcard/nsfw.txt\n  [\u2713] Status: No changes detected\n  [\u2713] Parsed 0 exact domains and 0 ABP-style domains (blocking, ignored 75907 non-domain entries)\n      Sample of non-domain entries:\n        - *.0-porno.com\n        - *.0000sex.com\n        - *.000freeproxy.com\n        - *.000pussy69pornxxxporno.com\n        - *.000webhostapp.co\n"})}),"\n",(0,s.jsx)(n.p,{children:"it's because you're using a list that PiHole can't process, either becuase its for a DNSMASQ client or otherwise."}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["One of the big things getting this working, was things like ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," bind mounts not doing what I expected, possibly being mapped to the wrong places and the container not finding it, using defaults and me being oblivious to it and assuming the config took."]}),(0,s.jsxs)(n.p,{children:["Big lesson, same lessons - config, apply, verify. Lots of reading the ",(0,s.jsx)(n.code,{children:"docker logs unbound"})," and ",(0,s.jsx)(n.code,{children:"docker logs pihole"})," to ensure it was going what I expected, before moving on or making changes."]}),(0,s.jsx)(n.p,{children:"Also, in the age of AI (this was an assisted task) critique and verify your ai assistants suggestions and configs."})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["This post was a ",(0,s.jsx)(n.a,{href:"https://claude.ai/new",children:"Claude.AI"})," collaboration, where I worked in a chat with Claude, designing and implementing this setup, often disagreeing and calling off various rabbitholes being ventured. What's nice is, I just ask Claude to summarise and document the work we did, and I review it and post it here."]})}),"\n",(0,s.jsx)(n.h2,{id:"additional-notes",children:"Additional Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Regularly update your blocklists in Pi-hole using the Gravity update feature"}),"\n",(0,s.jsx)(n.li,{children:"Monitor DNS traffic using Pi-hole's built-in graphs and reports"}),"\n",(0,s.jsx)(n.li,{children:"Consider adding additional block lists for enhanced protection"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.pi-hole.net/",children:"Pi-hole Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nlnetlabs.nl/documentation/unbound/",children:"Unbound Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/",children:"Docker Documentation"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},92582:(e,n,o)=>{o.d(n,{A:()=>i});const i=o.p+"assets/images/pihole-docker-leak1-4338afe6e9a809eb600073c7053af3e4.png"}}]);