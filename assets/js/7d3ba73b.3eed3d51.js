"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[9654],{19227:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"engineer/Azure/2019-02-12-Azure-Terraform-Lease-Break","title":"Azure Blob Storage Lease Management - Break Terraform State Lock Issues","description":"Resolve Azure Blob storage lease issues that prevent Terraform operations. Learn how to break storage leases and recover from locked Terraform state files.","source":"@site/docs/engineer/Azure/2019-02-12-Azure-Terraform-Lease-Break.md","sourceDirName":"engineer/Azure","slug":"/engineer/Azure/2019-02-12-Azure-Terraform-Lease-Break","permalink":"/docs/engineer/Azure/2019-02-12-Azure-Terraform-Lease-Break","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/Azure/2019-02-12-Azure-Terraform-Lease-Break.md","tags":[{"inline":true,"label":"azure","permalink":"/docs/tags/azure"},{"inline":true,"label":"terraform","permalink":"/docs/tags/terraform"},{"inline":true,"label":"blob-storage","permalink":"/docs/tags/blob-storage"},{"inline":true,"label":"troubleshooting","permalink":"/docs/tags/troubleshooting"},{"inline":true,"label":"state-management","permalink":"/docs/tags/state-management"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":2,"frontMatter":{"title":"Azure Blob Storage Lease Management - Break Terraform State Lock Issues","description":"Resolve Azure Blob storage lease issues that prevent Terraform operations. Learn how to break storage leases and recover from locked Terraform state files.","keywords":["azure blob storage","terraform lease","break lease","azure storage lock","terraform state lock","azure troubleshooting"],"tags":["azure","terraform","blob-storage","troubleshooting","state-management"],"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"SonarQube on AKS with Azure Disk - Helm Chart and Persistent Volume Setup","permalink":"/docs/engineer/Azure/2019-07-20-Sonarqube-AzureDisk-PersistentVolume"},"next":{"title":"Azure Kubernetes Service (AKS) Setup Guide - Part 1: Cluster Creation and Configuration","permalink":"/docs/engineer/Azure/2019-01-28-Azure-Kubernetes-up-and-running-1"}}');var t=a(74848),s=a(28453);const o={title:"Azure Blob Storage Lease Management - Break Terraform State Lock Issues",description:"Resolve Azure Blob storage lease issues that prevent Terraform operations. Learn how to break storage leases and recover from locked Terraform state files.",keywords:["azure blob storage","terraform lease","break lease","azure storage lock","terraform state lock","azure troubleshooting"],tags:["azure","terraform","blob-storage","troubleshooting","state-management"],sidebar_position:2},i=void 0,l={},c=[{value:"The backend config",id:"the-backend-config",level:2},{value:"&#39;Already has a lease&#39; Error",id:"already-has-a-lease-error",level:2},{value:"Break the lease",id:"break-the-lease",level:2},{value:"Retry terraform init",id:"retry-terraform-init",level:2},{value:"References",id:"references",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsx)(r.p,{children:"Published Date: 12-FEB-2019"})}),"\n",(0,t.jsx)(r.p,{children:"I'm busy building stuff in Azure using terraform. I've got different workspaces for terraform for different environments, so I've switched to my new environment workspace."}),"\n",(0,t.jsx)(r.admonition,{type:"danger",children:(0,t.jsx)(r.p,{children:"7-APR-2022: Be advised, it's not advisable to use terraform workspaces for multiple environments, per-environment folders is recommended."})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"terraform workspace new development-env"})}),"\n",(0,t.jsxs)(r.p,{children:["When I try to a ",(0,t.jsx)(r.code,{children:"terraform init"})," it a backend config file which will line my terraform up with the statefiles stored in Azure blob storage accounts, I get an error message."]}),"\n",(0,t.jsx)(r.h2,{id:"the-backend-config",children:"The backend config"}),"\n",(0,t.jsx)(r.p,{children:"if you're trying to do this:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"terraform init --backend-config=config/backend.conf"})}),"\n",(0,t.jsx)(r.p,{children:"with a backend.conf like this:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-terraform",children:'storage_account_name = "terraformstateaccount"\ncontainer_name       = "terraformstateaccount"\nkey                  = "env-cluster.terraform.tfstate"\n'})}),"\n",(0,t.jsx)(r.p,{children:"you run this"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'07:48 $ terraform init --backend-config="config/backend.conf"\nInitializing modules...\n- module.log_analytics\n- module.aks\n\nInitializing the backend...\nBackend configuration changed!\n\nTerraform has detected that the configuration specified for the backend\nhas changed. Terraform will now check for existing state in the backends.\n\n\nDo you want to migrate all workspaces to "azurerm"?\n  Both the existing "azurerm" backend and the newly configured "azurerm" backend\n  support workspaces. When migrating between backends, Terraform will copy\n  all workspaces (with the same names). THIS WILL OVERWRITE any conflicting\n  states in the destination.\n\n  Terraform initialization doesn\'t currently migrate only select workspaces.\n  If you want to migrate a select number of workspaces, you must manually\n  pull and push those states.\n\n  If you answer "yes", Terraform will migrate all states. If you answer\n  "no", Terraform will abort.\n\n  Enter a value: yes\n'})}),"\n",(0,t.jsx)(r.h2,{id:"already-has-a-lease-error",children:"'Already has a lease' Error"}),"\n",(0,t.jsx)(r.p,{children:"But instead of a nice bunch of green (is good) text as output, you get this red mess..."}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"error",src:a(66794).A+"",width:"1423",height:"528"})}),"\n",(0,t.jsx)(r.p,{children:"text version for good measure:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-text",children:'Error migrating the workspace "nptemp" from the previous "azurerm" backend\nto the newly configured "azurerm" backend:\n    Error loading state:\n    failed to lock azure state: storage: service returned error: StatusCode=409, ErrorCode=LeaseAlreadyPresent, ErrorMessage=There is already a lease present.\nRequestId:c1d419dc-801e-0072-5e39-c27159000000\nTime:2019-02-11T18:42:23.1266536Z, RequestInitiated=Mon, 11 Feb 2019 18:42:22 GMT, RequestId=c1d419dc-801e-0072-5e39-c27159000000, API Version=2016-05-31, QueryParameterName=, QueryParameterValue=\nLock Info:\n  ID:        5ee06688-5572-7212-e865-bf75f6f9cb4d\n  Path:      scicdterraformstate/nonprod-cluster.terraform.tfstateenv:nptemp\n  Operation: workspace_delete\n  Who:       ********@Bs-MacBook-Pro.hub\n  Version:   0.11.8\n  Created:   2018-11-11 22:53:15.745522608 +0000 UTC\n  Info:      \n\n\nTerraform failed to load the default state from the "azurerm" backend.\nState migration cannot occur unless the state can be loaded. Backend\nmodification and state migration has been aborted. The state in both the\nsource and the destination remain unmodified. Please resolve the\nabove error and try again.\n\nTerraform copies workspaces in alphabetical order. Any workspaces\nalphabetically earlier than this one have been copied. Any workspaces\nlater than this havent been modified in the destination. No workspaces\nin the source state have been modified.\n\nPlease resolve the error above and run the initialization command again.\nThis will attempt to copy (with permission) all workspaces again.\n'})}),"\n",(0,t.jsx)(r.p,{children:"you have a lease issue somewhere in your blog storage section of Azure."}),"\n",(0,t.jsx)(r.h2,{id:"break-the-lease",children:"Break the lease"}),"\n",(0,t.jsxs)(r.p,{children:["So now you have to figure out which blob storage terraform state file it's referring to and log into azure portal (",(0,t.jsx)(r.a,{href:"https://portal.azure.com",children:"https://portal.azure.com"}),") to go after it"]}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Go to 'All resources'"}),"\n",(0,t.jsxs)(r.li,{children:["Search or select the 'Resource Group' from the error message (e.g. )\n",(0,t.jsx)(r.img,{alt:"resoure group",src:a(60202).A+"",width:"1599",height:"341"})]}),"\n",(0,t.jsxs)(r.li,{children:["Go to 'blobs'\n",(0,t.jsx)(r.img,{alt:"blobs",src:a(77908).A+"",width:"1426",height:"777"})]}),"\n",(0,t.jsxs)(r.li,{children:["Find the locked blob and click 'Break lease'\n",(0,t.jsx)(r.img,{alt:"break lease",src:a(86726).A+"",width:"1115",height:"631"})]}),"\n",(0,t.jsxs)(r.li,{children:["Successful lease break\n",(0,t.jsx)(r.img,{alt:"break success",src:a(20265).A+"",width:"1116",height:"580"})]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"retry-terraform-init",children:"Retry terraform init"}),"\n",(0,t.jsx)(r.p,{children:"You can now try your terraform init and (hopefully) it should be okay now"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"init success",src:a(82648).A+"",width:"738",height:"978"})}),"\n",(0,t.jsx)(r.p,{children:"That's it. Super simple, I know. But for some reason I couldn't find any notes on what this means when you're terraforming things."}),"\n",(0,t.jsx)(r.h2,{id:"references",children:"References"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/rest/api/storageservices/blob-service-error-codes",children:"Blob Service Error Codes"})})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},20265:(e,r,a)=>{a.d(r,{A:()=>n});const n=a.p+"assets/images/azurebreaklease-break_success-c2ad3c9d866167628438b4440b3303cf.png"},28453:(e,r,a)=>{a.d(r,{R:()=>o,x:()=>i});var n=a(96540);const t={},s=n.createContext(t);function o(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(s.Provider,{value:r},e.children)}},60202:(e,r,a)=>{a.d(r,{A:()=>n});const n=a.p+"assets/images/azurebreaklease-resource_group-8bd4e94e90e6775b5dbee702ab3684cd.png"},66794:(e,r,a)=>{a.d(r,{A:()=>n});const n=a.p+"assets/images/azurebreaklease-error-7fd0c2844c0e16c04334cee94b45fa9d.png"},77908:(e,r,a)=>{a.d(r,{A:()=>n});const n=a.p+"assets/images/azurebreaklease-blobs-3f3e42b79f1b95707fc45625cd6733dc.png"},82648:(e,r,a)=>{a.d(r,{A:()=>n});const n=a.p+"assets/images/azurebreaklease-init_success-55a87cb2f660918007d33a0204061348.png"},86726:(e,r,a)=>{a.d(r,{A:()=>n});const n=a.p+"assets/images/azurebreaklease-break_lease-1ecbd51a9916c31b364123dea7ef857d.png"}}]);