"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[3533],{28453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>o});var i=n(96540);const a={},s=i.createContext(a);function t(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(s.Provider,{value:r},e.children)}},82786:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"engineer/Azure/2019-02-04-Azure-Kubernetes-up-and-running-2","title":"Azure Kubernetes Service (AKS) Setup Guide - Part 2: Application Deployment and Services","description":"Continue AKS setup with application deployment, service configuration, and ingress controllers. Part 2 of comprehensive Azure Kubernetes Service guide.","source":"@site/docs/engineer/Azure/2019-02-04-Azure-Kubernetes-up-and-running-2.md","sourceDirName":"engineer/Azure","slug":"/engineer/Azure/2019-02-04-Azure-Kubernetes-up-and-running-2","permalink":"/docs/engineer/Azure/2019-02-04-Azure-Kubernetes-up-and-running-2","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/Azure/2019-02-04-Azure-Kubernetes-up-and-running-2.md","tags":[{"inline":true,"label":"azure","permalink":"/docs/tags/azure"},{"inline":true,"label":"aks","permalink":"/docs/tags/aks"},{"inline":true,"label":"kubernetes","permalink":"/docs/tags/kubernetes"},{"inline":true,"label":"deployment","permalink":"/docs/tags/deployment"},{"inline":true,"label":"part-2","permalink":"/docs/tags/part-2"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":4,"frontMatter":{"title":"Azure Kubernetes Service (AKS) Setup Guide - Part 2: Application Deployment and Services","description":"Continue AKS setup with application deployment, service configuration, and ingress controllers. Part 2 of comprehensive Azure Kubernetes Service guide.","keywords":["aks deployment","kubernetes applications","aks services","azure ingress","k8s deployment","aks configuration","azure kubernetes"],"tags":["azure","aks","kubernetes","deployment","part-2"],"sidebar_position":4},"sidebar":"docsSidebar","previous":{"title":"Azure Kubernetes Service (AKS) Setup Guide - Part 1: Cluster Creation and Configuration","permalink":"/docs/engineer/Azure/2019-01-28-Azure-Kubernetes-up-and-running-1"},"next":{"title":"Azure Kubernetes Service (AKS) Setup Guide - Part 3: Monitoring, Scaling, and Security","permalink":"/docs/engineer/Azure/2019-02-04-Azure-Kubernetes-up-and-running-3"}}');var a=n(74848),s=n(28453);const t={title:"Azure Kubernetes Service (AKS) Setup Guide - Part 2: Application Deployment and Services",description:"Continue AKS setup with application deployment, service configuration, and ingress controllers. Part 2 of comprehensive Azure Kubernetes Service guide.",keywords:["aks deployment","kubernetes applications","aks services","azure ingress","k8s deployment","aks configuration","azure kubernetes"],tags:["azure","aks","kubernetes","deployment","part-2"],sidebar_position:4},o=void 0,l={},c=[{value:"Series Overview",id:"series-overview",level:2},{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Method 1: az-cli",id:"method-1-az-cli",level:2},{value:"login with azure-cli",id:"login-with-azure-cli",level:3},{value:"create a resource group",id:"create-a-resource-group",level:3},{value:"create a container registry",id:"create-a-container-registry",level:3},{value:"login to new ACR",id:"login-to-new-acr",level:3},{value:"Push an image?",id:"push-an-image",level:3},{value:"Useful ACR commands",id:"useful-acr-commands",level:3},{value:"Method 2: Terraform",id:"method-2-terraform",level:2},{value:"main.tf",id:"maintf",level:3},{value:"variables.tf",id:"variablestf",level:3},{value:"outputs.tf",id:"outputstf",level:3},{value:"run a plan",id:"run-a-plan",level:3},{value:"Terraform Apply",id:"terraform-apply",level:2},{value:"Quick: ACR run-through checks for Terraform method",id:"quick-acr-run-through-checks-for-terraform-method",level:3},{value:"docker login",id:"docker-login",level:4},{value:"docker pull, tag, push",id:"docker-pull-tag-push",level:4},{value:"References",id:"references",level:2}];function u(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.admonition,{type:"info",children:(0,a.jsx)(r.p,{children:"Published Date: 28-JAN-2019"})}),"\n",(0,a.jsxs)(r.p,{children:["Over in ",(0,a.jsx)(r.a,{href:"2019-01-28-Azure-Kubernetes-up-and-running-1",children:"Part 1"})," we used Terraform to spin up a really basic Kubernetes cluster in azure. CLI for the win always!"]}),"\n",(0,a.jsx)(r.p,{children:"For the record, I'm following some really good documentation from Microsoft's Azure documentation site (all references credited at the end). These are just my notes, screenshots and outputs for my own reference."}),"\n",(0,a.jsx)(r.admonition,{type:"tip",children:(0,a.jsx)(r.p,{children:"A lot of the how this I write these is how I would want to it to read if I were trying to learn this again myself :)"})}),"\n",(0,a.jsx)(r.p,{children:"In this part, we just want to setup an Azure Container Registry (ACR) that's going to be our private, or internal, holder of all things docker/container images and what-not."}),"\n",(0,a.jsx)(r.p,{children:"Once we get this up and ready for service, this is where we will throw our applications to deploy from!"}),"\n",(0,a.jsx)(r.h2,{id:"series-overview",children:"Series Overview"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Part 1 - get Kubernetes cluster up and running on Azure Kubernetes Managed Service (AKS)"}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.strong,{children:"Part 2 - create a private Docker Registry in the cloud using Azure's Container Registry Managed service (ACR)"})}),"\n",(0,a.jsx)(r.li,{children:"Part 3 - deploy a simple application to it."}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"Now that we know where we are, let's go!"}),"\n",(0,a.jsx)(r.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,a.jsx)(r.p,{children:"As in Part 1, you'll need the following already installed to get going:"}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["Azure ",(0,a.jsx)(r.a,{href:"https://portal.azure.com",children:"portal account"})]}),"\n",(0,a.jsxs)(r.li,{children:["Azure ",(0,a.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-apt?view=azure-cli-latest",children:"az-cli"})," (command line interface)"]}),"\n",(0,a.jsxs)(r.li,{children:["Terraform ",(0,a.jsx)(r.a,{href:"https://learn.hashicorp.com/terraform/getting-started/install.html",children:"installed"})," (zipped binary, copy to ~/bin)"]}),"\n",(0,a.jsxs)(r.li,{children:["(optional) Kubectl ",(0,a.jsx)(r.a,{href:"https://kubernetes.io/docs/tasks/tools/install-kubectl/",children:"installed"})]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"Right, let's have a look at the two methods we can use to stand things up:"}),"\n",(0,a.jsx)(r.h2,{id:"method-1-az-cli",children:"Method 1: az-cli"}),"\n",(0,a.jsx)(r.p,{children:"with this method, we'll be going through a series of azure-cli 'az' calls to set things up"}),"\n",(0,a.jsx)(r.h3,{id:"login-with-azure-cli",children:"login with azure-cli"}),"\n",(0,a.jsx)(r.p,{children:"from a terminal, login to your azure account"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"az login\n"})}),"\n",(0,a.jsx)(r.p,{children:"a browser window opens, you select the email that gets you into your azure portal account."}),"\n",(0,a.jsx)(r.h3,{id:"create-a-resource-group",children:"create a resource group"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"az group create --name cloudbuilder-rg --location australiaeast\n"})}),"\n",(0,a.jsx)(r.p,{children:"output looks like this"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'{\n  "id": "/subscriptions/0d667072-XXXX-46ef-a5b4-86979fd2XXXX/resourceGroups/cloudbuilder-rg",\n  "location": "australiaeast",\n  "managedBy": null,\n  "name": "cloudbuilder-rg",\n  "properties": {\n    "provisioningState": "Succeeded"\n  },\n  "tags": null,\n  "type": null\n}\n'})}),"\n",(0,a.jsx)(r.h3,{id:"create-a-container-registry",children:"create a container registry"}),"\n",(0,a.jsx)(r.p,{children:"run this command"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:'az acr create --resource-group "cloudbuilder-rg" --name cloudBRegistry --sku Basic\n'})}),"\n",(0,a.jsx)(r.p,{children:'take note the registry name you choose after "--name" has to be a unique name when combined with suffix ".azurecr.io" otherwise you\'ll get denied like so'}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:'az acr create --resource-group "cloudbuilder-rg" --name cloudRegistry --sku Basic\nThe registry DNS name cloudregistry.azurecr.io is already in use.\n'})}),"\n",(0,a.jsx)(r.p,{children:"successful output looks like this"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'{\n  "adminUserEnabled": false,\n  "creationDate": "2019-02-04T08:19:59.124377+00:00",\n  "id": "/subscriptions/0d667072-XXXX-46ef-a5b4-86979fd2XXXX/resourceGroups/cloudbuilder-rg/providers/Microsoft.ContainerRegistry/registries/cloudBRegistry",\n  "location": "australiaeast",\n  "loginServer": "cloudbregistry.azurecr.io",\n  "name": "cloudBRegistry",\n  "networkRuleSet": null,\n  "provisioningState": "Succeeded",\n  "resourceGroup": "cloudbuilder-rg",\n  "sku": {\n    "name": "Basic",\n    "tier": "Basic"\n  },\n  "status": null,\n  "storageAccount": null,\n  "tags": {},\n  "type": "Microsoft.ContainerRegistry/registries"\n}\n'})}),"\n",(0,a.jsx)(r.p,{children:"right, so far so good."}),"\n",(0,a.jsxs)(r.p,{children:["key output here to take note of = ",(0,a.jsx)(r.code,{children:'"loginServer": "cloudbregistry.azurecr.io"'})]}),"\n",(0,a.jsx)(r.p,{children:"OR short-cut:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:'az acr list --resource-group $NAME_OF_ACR --query "[].{acrLoginServer:loginServer}" --output table\n'})}),"\n",(0,a.jsx)(r.h3,{id:"login-to-new-acr",children:"login to new ACR"}),"\n",(0,a.jsx)(r.p,{children:"I had issues with this on a corporate setup with multiple Azure accounts so it kept giving me weird errors and not letting me login. On my personal, simple, single account setup, the login is really straight forward"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"az acr login --name cloudBRegistry\nLogin Succeeded\n"})}),"\n",(0,a.jsx)(r.p,{children:"that's it."}),"\n",(0,a.jsx)(r.p,{children:"Congratulations, you've got a brand spanking new ACR setup!"}),"\n",(0,a.jsx)(r.p,{children:"but its a bit useless sitting there doing nothing, let's try and push some images to it!"}),"\n",(0,a.jsx)(r.h3,{id:"push-an-image",children:"Push an image?"}),"\n",(0,a.jsx)(r.p,{children:"hmmm, let's just test it with a local docker image we can re-tag and push to see how it goes."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"docker images\nREPOSITORY                                       TAG                 IMAGE ID            CREATED             SIZE\ntiangolo/uwsgi-nginx-flask                       python3.6           0f8df7d438f3        3 weeks ago         949MB\nlocalhost:5000/golang                            1.10                b65fe5418f5f        5 weeks ago         729MB\ngolang                                           1.10                b65fe5418f5f        5 weeks ago         729MB\nnginx                                            1.14                3f55d5bb33f3        5 weeks ago         109MB\nmysql                                            5.7                 ba7a93aae2a8        5 weeks ago         372MB\nredis                                            latest              5d2989ac9711        5 weeks ago         95MB\nwordpress                                        php7.1-fpm-alpine   87b83134b87c        6 weeks ago         113MB\nregistry                                         2                   9c1f09fe9a86        6 weeks ago         33.3MB\nalpine                                           3.8                 3f53bb00af94        6 weeks ago         4.41MB\n"})}),"\n",(0,a.jsx)(r.p,{children:"'registry' looks small enough"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"docker tag registry:2 cloudbregistry.azurecr.io/registry:2\n"})}),"\n",(0,a.jsx)(r.p,{children:"re-tagged with our new ACR as the destination, now for a Push"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"docker push cloudbregistry.azurecr.io/registry:2\nThe push refers to a repository [cloudbregistry.azurecr.io/registry]\n2c2e689683cd: Pushed\n0d2f98178000: Pushed\n2a02e265caaa: Pushed\naa889911e071: Pushed\n4a9dd85dec45: Pushed\n2: digest: sha256:4dc58b720da3630db2be1cc811837c1671c55e419bf14f775752cee4178832d6 size: 1364\n"})}),"\n",(0,a.jsx)(r.p,{children:"easy as that!"}),"\n",(0,a.jsx)(r.h3,{id:"useful-acr-commands",children:"Useful ACR commands"}),"\n",(0,a.jsx)(r.p,{children:"quick look at all the images in our ACR"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"az acr repository list --name cloudbregistry --output table\nResult\n--------\nregistry\n"})}),"\n",(0,a.jsx)(r.p,{children:"hmmm, not many!"}),"\n",(0,a.jsx)(r.p,{children:"any cool tags?"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"az acr repository show-tags --name cloudbregistry --repository registry --output table\nResult\n--------\n2\n"})}),"\n",(0,a.jsx)(r.p,{children:"ah, just the 'registry:2' tag!"}),"\n",(0,a.jsx)(r.p,{children:'ah well, we\'re done with the ACR, so quick way to DELETE IT ALL, is to delete the resource group - you remember the one "cloudbuilder-rg"'}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:'az group delete --name "cloudbuilder-rg"\nAre you sure you want to perform this operation? (y/n): y\n'})}),"\n",(0,a.jsx)(r.p,{children:"That's it. pretty anti-climatic huh."}),"\n",(0,a.jsx)(r.h2,{id:"method-2-terraform",children:"Method 2: Terraform"}),"\n",(0,a.jsx)(r.admonition,{title:"Update Note",type:"info",children:(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"This post has been updated from here on: 03/06/2019."})})}),"\n",(0,a.jsx)(r.p,{children:"Ok, let's try doing it with terraform."}),"\n",(0,a.jsx)(r.h3,{id:"maintf",children:"main.tf"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-hcl",children:'# Azure Container Registry (managed)\n\nresource "azurerm_resource_group" "rg" {\n  name     = "$\\{var.resource_group_name-acr}"\n  location = "$\\{var.location}"\n}\n\nresource "azurerm_container_registry" "acr" {\n  name                     = "$\\{var.acr_name}"\n  resource_group_name      = "$\\{azurerm_resource_group.rg.name}"\n  location                 = "$\\{azurerm_resource_group.rg.location}"\n  sku                      = "Basic"\n  admin_enabled            = true\n}\n'})}),"\n",(0,a.jsx)(r.h3,{id:"variablestf",children:"variables.tf"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-hcl",children:'# variables\n\nvariable "resource_group_name-acr" {\n  description = "ACR Resource Group."\n  default = "AKS-CLOUDRESOURCES"\n}\n\nvariable "location" {\n  description = "for ACR"\n  default = "australiaeast"\n}\n\nvariable "acr_name" {\n  description = "ACR Name"\n  default = "registercloudbuilderio"\n}\n'})}),"\n",(0,a.jsx)(r.h3,{id:"outputstf",children:"outputs.tf"}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.em,{children:"note: only outputs admin username & password if you have admin_enabled=true."})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-hcl",children:'# ACR Outputs\n\noutput "login_server" {\n  value = "$\\{azurerm_container_registry.acr.login_server}"\n}\n\noutput "admin_password" {\n  value = "$\\{azurerm_container_registry.acr.admin_password}"\n}\n\noutput "admin_username" {\n  value = "$\\{azurerm_container_registry.acr.admin_username}"\n}\n'})}),"\n",(0,a.jsx)(r.h3,{id:"run-a-plan",children:"run a plan"}),"\n",(0,a.jsx)(r.p,{children:"run terraform plan to check what we're doing"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:'------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  ~ update in-place\n\nTerraform will perform the following actions:\n\n  # azurerm_container_registry.acr will be updated in-place\n  ~ resource "azurerm_container_registry" "acr" {\n      ~ admin_enabled       = false -> true\n        id                  = "/subscriptions/.../resourceGroups/AKS-CLOUDRESOURCES/providers/Microsoft.ContainerRegistry/registries/registercloudbuilderio"\n        location            = "australiaeast"\n        login_server        = "registercloudbuilderio.azurecr.io"\n        name                = "registercloudbuilderio"\n        resource_group_name = "AKS-CLOUDRESOURCES"\n        sku                 = "Basic"\n        tags                = {}\n    }\n\nPlan: 0 to add, 1 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\n'})}),"\n",(0,a.jsx)(r.h2,{id:"terraform-apply",children:"Terraform Apply"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"22:07 $ terraform apply -auto-approve\nazurerm_resource_group.rg: Refreshing state... [id=/subscriptions/.../resourceGroups/AKS-CLOUDRESOURCES]\nazurerm_container_registry.acr: Creating...\nazurerm_container_registry.acr: Creation complete after 8s [id=/subscriptions/.../resourceGroups/AKS-CLOUDRESOURCES/providers/Microsoft.ContainerRegistry/registries/registercloudbuilderio]\n\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.\n\nOutputs:\n\nadmin_password = SomePassWOrdz\nadmin_username = registercloudbuilderio\nlogin_server = registercloudbuilderio.azurecr.io\n"})}),"\n",(0,a.jsx)(r.p,{children:"Right, we should be able to tear through all the ACR stuff we did with the az-cli method"}),"\n",(0,a.jsx)(r.h3,{id:"quick-acr-run-through-checks-for-terraform-method",children:"Quick: ACR run-through checks for Terraform method"}),"\n",(0,a.jsx)(r.h4,{id:"docker-login",children:"docker login"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:'22:16 $ docker login -u "registercloudbuilderio" -p "SomePassWOrdz" https://registercloudbuilderio.azurecr.io\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nWARNING! Your password will be stored unencrypted in /home/amosar/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n'})}),"\n",(0,a.jsx)(r.h4,{id:"docker-pull-tag-push",children:"docker pull, tag, push"}),"\n",(0,a.jsx)(r.p,{children:"pull"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"22:18 $ docker pull alpine\nUsing default tag: latest\nlatest: Pulling from library/alpine\ne7c96db7181b: Pull complete\nDigest: sha256:769fddc7cc2f0a1c35abb2f91432e8beecf83916c421420e6a6da9f8975464b6\nStatus: Downloaded newer image for alpine:latest\n"})}),"\n",(0,a.jsx)(r.p,{children:"tag"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"22:18 $ docker tag alpine:latest registercloudbuilderio.azurecr.io/alpine:latest\n"})}),"\n",(0,a.jsx)(r.p,{children:"push"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"22:19 $ docker push registercloudbuilderio.azurecr.io/alpine:latest\nThe push refers to repository [registercloudbuilderio.azurecr.io/alpine]\nf1b5933fe4b5: Pushed\nlatest: digest: sha256:bf1684a6e3676389ec861c602e97f27b03f14178e5bc3f70dce198f9f160cce9 size: 528\n"})}),"\n",(0,a.jsx)(r.p,{children:"yep, looks good!"}),"\n",(0,a.jsx)(r.p,{children:"(can probably destroy it now, but I'll clean up later)"}),"\n",(0,a.jsx)(r.p,{children:"So there you go. Azure Container Registry, at your beck and call, via 2 methods."}),"\n",(0,a.jsx)(r.p,{children:"Thanks for reading!"}),"\n",(0,a.jsx)(r.p,{children:"In Part 3 - we tie it all together with an application deploy into our Kubernetes cluster, pulling from our private ACR!!"}),"\n",(0,a.jsx)(r.h2,{id:"references",children:"References"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["Azure Create SPN ",(0,a.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/cli/azure/ad/sp?view=azure-cli-latest#az-ad-sp-create-for-rbac",children:"Azure Create SPN"})]}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://winsmarts.com/create-an-azure-container-registry-using-the-azure-cli-74993d363c2f",children:"winsmarts - create an ACR"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-azure-cli",children:"Microsoft Azure - create a private container registry with azure-cli"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://www.terraform.io/docs/providers/azurerm/r/container_registry.html",children:"Terraform - create ACR"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://www.hashicorp.com/blog/kubernetes-cluster-with-aks-and-terraform",children:"Hashicorp - kubernetes cluster with terraform"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"https://www.terraform.io/docs/providers/azurerm/",children:"Terraform - azurerm"})}),"\n"]})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);