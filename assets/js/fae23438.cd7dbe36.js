"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[7305],{183:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"engineer/K8s/2020-03-06-Istio-SDS-Cert-Manager","title":"Istio mTLS with SDS and Cert-Manager - Complete Service Mesh Security Guide","description":"Advanced guide to setting up Istio mutual TLS with Secret Discovery Service (SDS) and automated certificate management using Cert-Manager and Let\'s Encrypt.","source":"@site/docs/engineer/K8s/2020-03-06-Istio-SDS-Cert-Manager.md","sourceDirName":"engineer/K8s","slug":"/engineer/K8s/2020-03-06-Istio-SDS-Cert-Manager","permalink":"/docs/engineer/K8s/2020-03-06-Istio-SDS-Cert-Manager","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/K8s/2020-03-06-Istio-SDS-Cert-Manager.md","tags":[{"inline":true,"label":"istio","permalink":"/docs/tags/istio"},{"inline":true,"label":"service-mesh","permalink":"/docs/tags/service-mesh"},{"inline":true,"label":"security","permalink":"/docs/tags/security"},{"inline":true,"label":"certificates","permalink":"/docs/tags/certificates"},{"inline":true,"label":"mtls","permalink":"/docs/tags/mtls"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":2,"frontMatter":{"title":"Istio mTLS with SDS and Cert-Manager - Complete Service Mesh Security Guide","description":"Advanced guide to setting up Istio mutual TLS with Secret Discovery Service (SDS) and automated certificate management using Cert-Manager and Let\'s Encrypt.","keywords":["istio mtls","service mesh security","cert-manager","sds","letsencrypt","kubernetes security","istio certificates","mutual tls"],"tags":["istio","service-mesh","security","certificates","mtls"],"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Helm 3 Complete Guide - Kubernetes Package Manager and Application Deployment","permalink":"/docs/engineer/K8s/2019-11-11-Helm-3-Kubernetes-Package-Manager"},"next":{"title":"Istio mTLS with External Endpoints - Egress Gateway Configuration Guide","permalink":"/docs/engineer/K8s/2020-04-08-Istio-MTLS-with-External-Endpoint"}}');var t=s(74848),r=s(28453);const a={title:"Istio mTLS with SDS and Cert-Manager - Complete Service Mesh Security Guide",description:"Advanced guide to setting up Istio mutual TLS with Secret Discovery Service (SDS) and automated certificate management using Cert-Manager and Let's Encrypt.",keywords:["istio mtls","service mesh security","cert-manager","sds","letsencrypt","kubernetes security","istio certificates","mutual tls"],tags:["istio","service-mesh","security","certificates","mtls"],sidebar_position:2},o=void 0,c={},l=[{value:"Architecture Diagram",id:"architecture-diagram",level:2},{value:"Key Components",id:"key-components",level:3},{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Istio Setup",id:"istio-setup",level:2},{value:"Check access to your cluster",id:"check-access-to-your-cluster",level:3},{value:"Download Istio &amp; istioctl",id:"download-istio--istioctl",level:3},{value:"Install Istio with SDS enabled",id:"install-istio-with-sds-enabled",level:3},{value:"patch istio ingressgateway",id:"patch-istio-ingressgateway",level:3},{value:"Checkpoint",id:"checkpoint",level:3},{value:"Install Bookinfo Demo Application",id:"install-bookinfo-demo-application",level:2},{value:"Install modified gateway",id:"install-modified-gateway",level:3},{value:"Install Cert-Manager",id:"install-cert-manager",level:2},{value:"via kubectl",id:"via-kubectl",level:3},{value:"via helm",id:"via-helm",level:3},{value:"Check cert-manager installation",id:"check-cert-manager-installation",level:3},{value:"Setup Azure DNS for ACME Challenge",id:"setup-azure-dns-for-acme-challenge",level:2},{value:"Azure DNS Zone",id:"azure-dns-zone",level:3},{value:"Update domain registrar nameservers",id:"update-domain-registrar-nameservers",level:3},{value:"<code>azuredns-config</code> setup",id:"azuredns-config-setup",level:3},{value:"azuredns-config secret",id:"azuredns-config-secret",level:3},{value:"Create Issuer &amp; Certificates",id:"create-issuer--certificates",level:2},{value:"Production Issuer",id:"production-issuer",level:3},{value:"Production Certificate",id:"production-certificate",level:3},{value:"Check cert-manager logs",id:"check-cert-manager-logs",level:3},{value:"Verify Certificate via OpenSSL",id:"verify-certificate-via-openssl",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Published Date: 06-MAR-2020"})}),"\n",(0,t.jsx)(n.p,{children:"In this post we will be setting up a way for Istio to automatically provision and manage LetsEncrypt Signed TLS certificates for use in Kubernetes clusters."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Why is this a big deal?"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Certificate management is usually a painful experience, and over time and many certificates added, this becomes more overhead for operations teams to manage. Just having a setup that automates the whole thing for you is pretty nice."}),"\n",(0,t.jsx)(n.h2,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,t.jsx)(n.p,{children:"Brief overview of the component and moving parts of the solution (there'll be a few details missed out, but you get the overall picture):"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"architecture",src:s(66019).A+"",width:"2000",height:"1498"})}),"\n",(0,t.jsx)(n.h3,{id:"key-components",children:"Key Components"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"AKS cluster"}),"\n",(0,t.jsx)(n.li,{children:"Istio Service Mesh"}),"\n",(0,t.jsx)(n.li,{children:"SDS enabled Gateways"}),"\n",(0,t.jsx)(n.li,{children:"Cert-Manager, Issuers, Certificates"}),"\n",(0,t.jsx)(n.li,{children:"AzureDNS and DNS-01 ACME Challenge"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"az-cli installed"}),"\n",(0,t.jsx)(n.li,{children:"kubectl instlaled"}),"\n",(0,t.jsx)(n.li,{children:"istioctl installed"}),"\n",(0,t.jsx)(n.li,{children:"helm v3 installed"}),"\n",(0,t.jsxs)(n.li,{children:["a running AKS cluster (if you need a quick-setup cluster try this one: ",(0,t.jsx)(n.a,{href:"https://github.com/ronamosa/aks-starter-cluster",children:'"aks starter cluster"'}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"istio-setup",children:"Istio Setup"}),"\n",(0,t.jsxs)(n.p,{children:["With your newly built AKS cluster, make sure you have a copy of the ",(0,t.jsx)(n.code,{children:"kubeconfig"})," file to run ",(0,t.jsx)(n.code,{children:"'kubectl'"})," commands:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"az aks get-credentials --name AKS-CLUSTER-NAME --resource-group RESOURCE-GROUP-OF-AKS-CLUSTER"})}),"\n",(0,t.jsxs)(n.p,{children:["you can add ",(0,t.jsx)(n.code,{children:"--admin"})," if your cluster is RBAC enabled, to get the admin kubeconfig, and ",(0,t.jsx)(n.code,{children:"--overwrite"})," is handy to add too, but you'll get prompted to overwrite otherwise."]}),"\n",(0,t.jsx)(n.h3,{id:"check-access-to-your-cluster",children:"Check access to your cluster"}),"\n",(0,t.jsxs)(n.p,{children:["run: ",(0,t.jsx)(n.code,{children:"kubectl get nodes"})]}),"\n",(0,t.jsx)(n.p,{children:"output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"NAME                               STATUS   ROLES   AGE   VERSION\naks-nodepool-38331632-vmss000000   Ready    agent   26h   v1.15.7\naks-nodepool-38331632-vmss000001   Ready    agent   26h   v1.15.7\naks-nodepool-38331632-vmss000002   Ready    agent   26h   v1.15.7\n"})}),"\n",(0,t.jsx)(n.h3,{id:"download-istio--istioctl",children:"Download Istio & istioctl"}),"\n",(0,t.jsx)(n.p,{children:"install via curl:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"$ curl -L https://istio.io/downloadIstio | sh -"})}),"\n",(0,t.jsxs)(n.p,{children:["setup the ",(0,t.jsx)(n.code,{children:"istioctl"})," binary in your $PATH"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"current istio version as time of writing: 1.5.0"})}),"\n",(0,t.jsx)(n.h3,{id:"install-istio-with-sds-enabled",children:"Install Istio with SDS enabled"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"What is SDS and why do I care?"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["'",(0,t.jsx)(n.a,{href:"https://www.envoyproxy.io/docs/envoy/v1.8.0/configuration/secret",children:"Secret Discovery Service (SDS)"}),"' is an envoyproxy feature that simplifies certificate management for proxy containers. This means for Istio, all the sidecars and their TLS needs are taken care of by enabling and configuring SDS in Istio for the k8s cluster. The TLS required private key, server certificate, and root certificate, are configured using the Secret Discovery Service (SDS). The ingress gateway can dynamically add, delete, or update its key/certificate pairs and its root certificate. You do not have to restart the ingress gateway."]})}),"\n",(0,t.jsxs)(n.p,{children:["using ",(0,t.jsx)(n.code,{children:"istioctl"})," run:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"istioctl manifest apply \\\n  --set profile=default \\\n  --set values.gateways.istio-egressgateway.enabled=false \\\n  --set values.gateways.istio-ingressgateway.sds.enabled=true\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["use ",(0,t.jsx)(n.code,{children:"default"})," ",(0,t.jsx)(n.a,{href:"https://istio.io/docs/setup/additional-setup/config-profiles/",children:"profile"})]}),"\n",(0,t.jsxs)(n.li,{children:["disable ",(0,t.jsx)(n.code,{children:"egress"})," gateway"]}),"\n",(0,t.jsxs)(n.li,{children:["enable SDS on ",(0,t.jsx)(n.code,{children:"ingress"})," gateway"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["this will install istio system in the ",(0,t.jsx)(n.code,{children:"istio-system"})," namespace by default, you can check by running:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl -n istio-system get pods\nNAME                                    READY   STATUS    RESTARTS   AGE\nistio-ingressgateway-8577f4c6f8-nc7fb   1/1     Running   0          26h\nistiod-59f6fbc78f-76vs6                 1/1     Running   0          26h\nprometheus-868cf4cb84-jr8zf             2/2     Running   0          26h\n"})}),"\n",(0,t.jsx)(n.h3,{id:"patch-istio-ingressgateway",children:"patch istio ingressgateway"}),"\n",(0,t.jsxs)(n.p,{children:["the default ingress gateway (called ",(0,t.jsx)(n.code,{children:"ingressgateway"}),") installation comes without HTTPS/tls added or configured:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"Name:         ingressgateway\nNamespace:    istio-system\nLabels:       operator.istio.io/component=IngressGateways\n              operator.istio.io/managed=Reconcile\n              operator.istio.io/version=1.5.0\n              release=istio\nAnnotations:  kubectl.kubernetes.io/last-applied-configuration:...\nAPI Version:  networking.istio.io/v1beta1\nKind:         Gateway\nMetadata:\n  Creation Timestamp:  2020-03-07T01:38:00Z\n  Generation:          2\n  Resource Version:    2113\n  Self Link:           /apis/networking.istio.io/v1beta1/namespaces/istio-system/gateways/ingressgateway\n  UID:                 48a034e9-e83e-45c3-a6dc-ce969bcecfc2\nSpec:\n  Selector:\n    Istio:  ingressgateway\n  Servers:\n    Hosts:\n      *\n    Port:\n      Name:      http\n      Number:    80\n      Protocol:  HTTP\nEvents:                 <none />\n"})}),"\n",(0,t.jsxs)(n.p,{children:["run this json ",(0,t.jsx)(n.code,{children:"patch"})," command to update the gateway:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'kubectl -n istio-system \\\n  patch gateway ingressgateway --type=json \\\n  -p="$(cat patch.json)"\n'})}),"\n",(0,t.jsx)(n.p,{children:"patch.json:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="patch.json"',children:'[{"op": "add","path": "/spec/servers/1","value": {"hosts": ["*"], "port": {"name": "https-443","number": 443,"protocol": "HTTPS"},"tls": {"credentialName": "ingress-cert", "mode": "SIMPLE"\\}\\}}]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["so now your ",(0,t.jsx)(n.code,{children:"ingressgateway"})," gateway should look like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"Name:         ingressgateway\nNamespace:    istio-system\nLabels:       operator.istio.io/component=IngressGateways\n              operator.istio.io/managed=Reconcile\n              operator.istio.io/version=1.5.0\n              release=istio\nAnnotations:  kubectl.kubernetes.io/last-applied-configuration:...\nAPI Version:  networking.istio.io/v1beta1\nKind:         Gateway\nMetadata:\n  Creation Timestamp:  2020-03-07T01:38:00Z\n  Generation:          2\n  Resource Version:    2113\n  Self Link:           /apis/networking.istio.io/v1beta1/namespaces/istio-system/gateways/ingressgateway\n  UID:                 48a034e9-e83e-45c3-a6dc-ce969bcecfc2\nSpec:\n  Selector:\n    Istio:  ingressgateway\n  Servers:\n    Hosts:\n      *\n    Port:\n      Name:      http\n      Number:    80\n      Protocol:  HTTP\n    Hosts:\n      *\n    Port:\n      Name:      https-443\n      Number:    443\n      Protocol:  HTTPS\n    Tls:\n      Credential Name:  ingress-cert\n      Mode:             SIMPLE\nEvents:                 <none />\n"})}),"\n",(0,t.jsx)(n.h3,{id:"checkpoint",children:"Checkpoint"}),"\n",(0,t.jsx)(n.p,{children:"At this point you should have the following things in place:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"a running AKS cluster"}),"\n",(0,t.jsxs)(n.li,{children:["an Istio installation in the ",(0,t.jsx)(n.code,{children:"istio-system"})," namespace"]}),"\n",(0,t.jsxs)(n.li,{children:["an ",(0,t.jsx)(n.code,{children:"ingressgateway"})," gateway with HTTPS and TLS configured."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"install-bookinfo-demo-application",children:"Install Bookinfo Demo Application"}),"\n",(0,t.jsx)(n.p,{children:"We need to install an application to demonstrate a valid TLS certificate on, and also show how that tls certificate is used for mutual TLS (mTLS) by Istio."}),"\n",(0,t.jsxs)(n.p,{children:["I will use my domain ",(0,t.jsx)(n.code,{children:"cloudbuild.site"})," as the domain for this example, and configure the bookinfo application to route to subdomain ",(0,t.jsx)(n.code,{children:"bookinfo.cloudbuild.site"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"create new namespace"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl create ns bookinfo"})}),"\n",(0,t.jsx)(n.p,{children:"label namespace for instio sidecar injection"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl label namespace bookinfo istio-injection=enabled"})}),"\n",(0,t.jsxs)(n.p,{children:["deploy the bookinfo app into the ",(0,t.jsx)(n.code,{children:"bookinfo"})," namespace"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl -n bookinfo apply -f https://raw.githubusercontent.com/istio/istio/release-1.5/samples/bookinfo/platform/kube/bookinfo.yaml"})}),"\n",(0,t.jsx)(n.p,{children:"check pods"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl -n bookinfo get pods"})}),"\n",(0,t.jsx)(n.p,{children:"you should see something like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"NAME                              READY   STATUS    RESTARTS   AGE\ndetails-v1-74f858558f-xx97s       2/2     Running   0          21h\nproductpage-v1-76589d9fdc-9qbf9   2/2     Running   0          21h\nratings-v1-7855f5bcb9-x9lxz       2/2     Running   0          21h\nreviews-v1-64bc5454b9-95dt4       2/2     Running   0          21h\nreviews-v2-76c64d4bdf-8v2vm       2/2     Running   0          21h\nreviews-v3-5545c7c78f-j4wlb       2/2     Running   0          21h\n"})}),"\n",(0,t.jsxs)(n.p,{children:["each pod is ",(0,t.jsx)(n.code,{children:"2/2"})," because now an istio side-car container is added to your pod deployment."]}),"\n",(0,t.jsx)(n.h3,{id:"install-modified-gateway",children:"Install modified gateway"}),"\n",(0,t.jsxs)(n.p,{children:["The default bookinfo gateway needed to be modified because we are using TLS certs in this demo - note I am using my own domain ",(0,t.jsx)(n.code,{children:"cloudbuild.site"})," and routing requests to subdomain ",(0,t.jsx)(n.code,{children:"bookinfo.cloudbuild.site"}),", so where you see my domain, substitute for yours."]}),"\n",(0,t.jsx)(n.p,{children:"The gateway needs to look like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: bookinfo-gateway\nspec:\n  selector:\n    istio: ingressgateway # use istio default controller\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - "bookinfo.cloudbuild.site"\n    tls:\n      httpsRedirect: true\n  - port:\n      number: 443\n      name: https-443\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: ingress-cert\n    hosts:\n      - "bookinfo.cloudbuild.site"\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: bookinfo\nspec:\n  hosts:\n  - "bookinfo.cloudbuild.site"\n  gateways:\n  - bookinfo-gateway\n  http:\n  - match:\n    - uri:\n        exact: /productpage\n    - uri:\n        prefix: /static\n    - uri:\n        exact: /login\n    - uri:\n        exact: /logout\n    - uri:\n        prefix: /api/v1/products\n    route:\n    - destination:\n        host: productpage\n        port:\n          number: 9080\n'})}),"\n",(0,t.jsxs)(n.p,{children:["save this to a file called ",(0,t.jsx)(n.code,{children:"bookinfo-gateway.yaml"})," and deploy like this:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl -n bookinfo apply -f ./bookinfo-gateway.yaml"})}),"\n",(0,t.jsx)(n.p,{children:"check it with:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl -n bookinfo describe gw bookinfo"})}),"\n",(0,t.jsx)(n.h2,{id:"install-cert-manager",children:"Install Cert-Manager"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"What is cert-manager and why should I care?"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Cert-Manager provides ",(0,t.jsx)(n.em,{children:'"x509 certificate management for Kubernetes"'})," by making Certificate Authorities (CA) and Certificates first-class resource types in the Kubernetes API (literally paraphrasing the blurb from the ",(0,t.jsx)(n.a,{href:"https://cert-manager.io/",children:"cert-manager site"}),")."]}),"\n",(0,t.jsx)(n.p,{children:"Basically it's a system that makes it really simple to automatically provision and manage CA-signed certificates for your cluster."}),"\n",(0,t.jsxs)(n.p,{children:["These are the instructions from ",(0,t.jsx)(n.a,{href:"https://docs.cert-manager.io/en/latest/getting-started/install/kubernetes.html",children:"cert-manager docs"})," but I'm summarizing them here:"]}),"\n",(0,t.jsxs)(n.p,{children:["Pick ",(0,t.jsx)(n.strong,{children:"ONE"})," of the following methods"]}),"\n",(0,t.jsx)(n.h3,{id:"via-kubectl",children:"via kubectl"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.13.1/cert-manager.yaml"})}),"\n",(0,t.jsx)(n.h3,{id:"via-helm",children:"via helm"}),"\n",(0,t.jsx)(n.p,{children:"create Namespace:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl create namespace cert-manager"})}),"\n",(0,t.jsx)(n.p,{children:"label Namespace to disable validation:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl label namespace cert-manager certmanager.k8s.io/disable-validation=true"})}),"\n",(0,t.jsx)(n.p,{children:"check and delete any existing cert-manager releases:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"helm -n cert-manager list"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"helm -n cert-manager delete cert-manager"}),"As an example setup"]}),"\n",(0,t.jsx)(n.p,{children:"add cert-manager to the repo, and install:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm repo add jetstack https://charts.jetstack.io\n\nhelm repo update\n\nhelm install \\\n  cert-manager jetstack/cert-manager \\\n  --namespace cert-manager \\\n  --version v0.13.1\n"})}),"\n",(0,t.jsx)(n.h3,{id:"check-cert-manager-installation",children:"Check cert-manager installation"}),"\n",(0,t.jsx)(n.p,{children:"run:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl -n cert-manager get pods"})}),"\n",(0,t.jsx)(n.p,{children:"output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"NAME                                       READY   STATUS    RESTARTS   AGE\ncert-manager-6f9d54fdc7-jl6wv              1/1     Running   0          26h\ncert-manager-cainjector-6b6c7955f4-whvjm   1/1     Running   0          26h\ncert-manager-webhook-84954f5587-bmkpc      1/1     Running   0          26h\n"})}),"\n",(0,t.jsx)(n.h2,{id:"setup-azure-dns-for-acme-challenge",children:"Setup Azure DNS for ACME Challenge"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Wait, why are we setting up DNS?"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For this automation, we will use cert-managers ",(0,t.jsx)(n.a,{href:"https://cert-manager.io/docs/configuration/acme/",children:"'Automated Certificate Management Envrionment (ACME)'"}),' Issuer. The ACME Issuer has 2 methods to verify you own a domain. These methods are called "challenges", and the Issuer has to solve them to verify you own the domain.']}),"\n",(0,t.jsx)(n.p,{children:"One is via HTTP:"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"HTTP01 challenges are completed by presenting a computed key, that should be present at a HTTP URL endpoint and is routable over the internet. This URL will use the domain name requested for the certificate. Once the ACME server is able to get this key from this URL over the internet, the ACME server can validate you are the owner of this domain. When a HTTP01 challenge is created, cert-manager will automatically configure your cluster ingress to route traffic for this URL to a small web server that presents this key."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"basically your Issuer has to get agenerated key served somewhere on your web server via that domain, proves you own the domain. solved."}),"\n",(0,t.jsx)(n.p,{children:"The other is via DNS:"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"DNS01 challenges are completed by providing a computed key that is present at a DNS TXT record. Once this TXT record has been propagated across the internet, the ACME server can successfully retrieve this key via a DNS lookup and can validate that the client owns the domain for the requested certificate. With the correct permissions, cert-manager will automatically present this TXT record for your given DNS provider."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"again, but via DNS records, your Issuer has to get a generated key entered into your DNS records, proves you own the domain. solved."}),"\n",(0,t.jsx)(n.h3,{id:"azure-dns-zone",children:"Azure DNS Zone"}),"\n",(0,t.jsx)(n.p,{children:"For this setup you need an Azure DNS Zone setup."}),"\n",(0,t.jsxs)(n.p,{children:["Go to your ",(0,t.jsx)(n.a,{href:"https://portal.azure.com",children:"Azure Portal"})," and create a DNS Zone, and then take note of the Name Servers, for example I made a zone called ",(0,t.jsx)(n.code,{children:"cloudbuild.site"})," for my domain of the same name:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"azure_dns_zone",src:s(37895).A+"",width:"1369",height:"286"})}),"\n",(0,t.jsx)(n.h3,{id:"update-domain-registrar-nameservers",children:"Update domain registrar nameservers"}),"\n",(0,t.jsxs)(n.p,{children:["My domain ",(0,t.jsx)(n.code,{children:"cloudbuild.site"})," is registered at ",(0,t.jsx)(n.a,{href:"https://www.gandi.net/en-NZ",children:"https://www.gandi.net/en-NZ"}),", so I go there and change all the nameservers to point to my new Azure DNS Zone."]}),"\n",(0,t.jsxs)(n.p,{children:["So when I query the nameservers for my domain ",(0,t.jsx)(n.code,{children:"cloudbuild.site"}),", I should see this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dig NS cloudbuild.site\n\n; <<>> DiG 9.11.3-1ubuntu1.11-Ubuntu <<>> NS cloudbuild.site\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 33922\n;; flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 65494\n;; QUESTION SECTION:\n;cloudbuild.site.\t\tIN\tNS\n\n;; ANSWER SECTION:\ncloudbuild.site.\t3599\tIN\tNS\tns1-06.azure-dns.com.\ncloudbuild.site.\t3599\tIN\tNS\tns3-06.azure-dns.org.\ncloudbuild.site.\t3599\tIN\tNS\tns2-06.azure-dns.net.\ncloudbuild.site.\t3599\tIN\tNS\tns4-06.azure-dns.info.\n\n;; Query time: 46 msec\n;; SERVER: 127.0.0.53#53(127.0.0.53)\n;; WHEN: Sun Mar 08 18:57:30 NZDT 2020\n;; MSG SIZE  rcvd: 181\n"})}),"\n",(0,t.jsx)(n.p,{children:"now we're ready to setup the azure dns solver!"}),"\n",(0,t.jsxs)(n.h3,{id:"azuredns-config-setup",children:[(0,t.jsx)(n.code,{children:"azuredns-config"})," setup"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"bot"})," that solves the dns-01 challenge for our Issuer is a service principal with the permissions to create a DNS record in our new Azure DNZ Zone."]}),"\n",(0,t.jsx)(n.p,{children:"Not too complicated, aye."}),"\n",(0,t.jsxs)(n.p,{children:["Use this script (I called it ",(0,t.jsx)(n.code,{children:"setup_azuredns.sh"}),") to create the necessary ",(0,t.jsx)(n.code,{children:"cert-manager-dns01"})," service principal (note, you need ",(0,t.jsx)(n.code,{children:"jq"})," or ",(0,t.jsx)(n.code,{children:"jshon"})," installed ), example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\nAZURE_CERT_MANAGER_SP_NAME="cert-manager-dns01"\nAZURE_CERT_MANAGER_DNS_RESOURCE_GROUP="azuredns-rg-prod" # this is the resource group from the DNS Zone you created earlier\nAZURE_CERT_MANAGER_DNS_NAME="cloudbuild.site"\n\nDNS_SP=$(az ad sp create-for-rbac --name $AZURE_CERT_MANAGER_SP_NAME)\nAZURE_CERT_MANAGER_SP_APP_ID=$(echo $DNS_SP | jq -r \'.appId\')\nAZURE_CERT_MANAGER_SP_PASSWORD=$(echo $DNS_SP | jq -r \'.password\')\nAZURE_TENANT_ID=$(echo $DNS_SP | jq -r \'.tenant\')\nAZURE_SUBSCRIPTION_ID=$(az account show | jq -r \'.id\')\n\n# Lower the Permissions of the SP\naz role assignment delete --assignee $AZURE_CERT_MANAGER_SP_APP_ID --role Contributor\n\n# Give Access to DNS Zone\nDNS_ID=$(az network dns zone show --name $AZURE_CERT_MANAGER_DNS_NAME --resource-group $AZURE_CERT_MANAGER_DNS_RESOURCE_GROUP --query "id" --output tsv)\n\naz role assignment create --assignee $AZURE_CERT_MANAGER_SP_APP_ID --role "DNS Zone Contributor" --scope $DNS_ID\n\n# Check Permissions\naz role assignment list --assignee $AZURE_CERT_MANAGER_SP_APP_ID\n\n# Create Secret -- delete existing first.\nkubectl delete secret azuredns-config\n\nkubectl create secret generic azuredns-config \\\n  --from-literal=CLIENT_SECRET=$AZURE_CERT_MANAGER_SP_PASSWORD\n\n# Get the Service Principal App ID for configuration\necho "Principal: $AZURE_CERT_MANAGER_SP_APP_ID"\necho "Password: $AZURE_CERT_MANAGER_SP_PASSWORD"\necho "Tenant ID: $AZURE_TENANT_ID"\necho "Subscription ID: $AZURE_SUBSCRIPTION_ID"\n'})}),"\n",(0,t.jsx)(n.admonition,{title:"Required Info",type:"info",children:(0,t.jsxs)(n.p,{children:["You need the ",(0,t.jsx)(n.code,{children:"Principal"})," & ",(0,t.jsx)(n.code,{children:"Password"})," for the Issuer section below."]})}),"\n",(0,t.jsx)(n.p,{children:"the script will:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"creates a service principal (SPN)"}),"\n",(0,t.jsx)(n.li,{children:"give SPN access to existing DNS Zone"}),"\n",(0,t.jsxs)(n.li,{children:["create a k8s secret called ",(0,t.jsx)(n.code,{children:"azuredns-config"})," with the SPN's secret/password."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["the script comes from ",(0,t.jsx)(n.a,{href:"https://cert-manager.io/docs/configuration/acme/dns01/azuredns/",children:"cert-manager.io"}),", modifications by me."]}),"\n",(0,t.jsx)(n.h3,{id:"azuredns-config-secret",children:"azuredns-config secret"}),"\n",(0,t.jsxs)(n.p,{children:["This secret needs to be in the same namespace as your Issuer - so maybe add ",(0,t.jsx)(n.code,{children:"-n <namespace />"})," to the script, or create it manually."]}),"\n",(0,t.jsxs)(n.p,{children:["The secret is created in the ",(0,t.jsx)(n.code,{children:"setup_azuredns.sh"})," script but if you need to manually create it:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl -n <NAMESPACE_WHERE_ISSUER_IS /> create secret generic azuredns-config --from-literal=CLIENT_SECRET=<secret_goes_here />"})}),"\n",(0,t.jsxs)(n.p,{children:["take note of the ",(0,t.jsx)(n.code,{children:"CLIENT_SECRET"})," bit as the required reference to the secret later on."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"letsencrypt has 2 acme servers, a staging and a production one - we will use the production one."})}),"\n",(0,t.jsx)(n.h2,{id:"create-issuer--certificates",children:"Create Issuer & Certificates"}),"\n",(0,t.jsx)(n.h3,{id:"production-issuer",children:"Production Issuer"}),"\n",(0,t.jsx)(n.p,{children:"This is my prod Issuer (as an example) - read the comments and substitute accordingly:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: cert-manager.io/v1alpha2\nkind: Issuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: ron@cloudbuilder.io # change to your email address.\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - dns01:\n        azuredns:\n          clientID: XXXXXXXXXXXXXXXXXXXXX # this the Principal from the 'setup_azuredns.sh'\n          clientSecretSecretRef:\n            name: azuredns-config\n            key: CLIENT_SECRET\n          subscriptionID: YOUR-SUBSCRIPTION-ID\n          tenantID: YOUR-TENANT-ID\n          resourceGroupName: YOUR-DNS-ZONES-RESOURCEGROUP-NAME\n          hostedZoneName: cloudbuild.site # change to your domain.\n          environment: AzurePublicCloud # leave this as-is.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["save to ",(0,t.jsx)(n.code,{children:"IssuerProd.yaml"})," and because we want istio's ",(0,t.jsx)(n.code,{children:"ingressgateway"})," in ",(0,t.jsx)(n.code,{children:"istio-system"})," namespace to find and use the cert via SDS, we need to ensure the following 3 things are all deployed in ",(0,t.jsxs)(n.strong,{children:["the ",(0,t.jsx)(n.code,{children:"istio-system"})," namespace"]}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"azuredns-config secret"}),"\n",(0,t.jsx)(n.li,{children:"production Issuer"}),"\n",(0,t.jsx)(n.li,{children:"production Certificate"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"deploy the Issuer:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl -n istio-system apply -f ./IssuerProd.yaml"})}),"\n",(0,t.jsx)(n.h3,{id:"production-certificate",children:"Production Certificate"}),"\n",(0,t.jsx)(n.p,{children:"This is my prod Certificate (as an example) - read the comments and substitute accordingly:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: cert-manager.io/v1alpha2\nkind: Certificate\nmetadata:\n  name: ingress-cert\nspec:\n  secretName: ingress-cert\n  issuerRef:\n    name: letsencrypt-prod\n    kind: Issuer\n  commonName: bookinfo.cloudbuild.site\n  dnsNames:\n  - bookinfo.cloudbuild.site\n  acme:\n    config:\n    - dns01:\n        provider: azuredns\n      domains:\n      - cloudbuild.site\n"})}),"\n",(0,t.jsxs)(n.p,{children:["save to ",(0,t.jsx)(n.code,{children:"CertProd.yaml"})," and deploy into the ",(0,t.jsx)(n.code,{children:"istio-system"})," namespace:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl -n istio-system apply -f ./CertProd.yaml"})}),"\n",(0,t.jsx)(n.h3,{id:"check-cert-manager-logs",children:"Check cert-manager logs"}),"\n",(0,t.jsx)(n.p,{children:"Once you deploy the cert, if everything is setup correctly you should see logs like this :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'I0307 08:21:35.667035       1 controller.go:135] cert-manager/controller/orders "msg"="finished processing work item" "key"="istio-system/ingress-cert-1810009586-3587251712"\nI0307 08:21:38.181385       1 dns.go:121] cert-manager/controller/challenges/Check "msg"="checking DNS propagation" "dnsName"="bookinfo.cloudbuild.site" "domain"="bookinfo.cloudbuild.site" "resource_kind"="Challenge" "resource_name"="ingress-cert-1810009586-3587251712-2272992580" "resource_namespace"="istio-system" "type"="dns-01" "nameservers"=["10.0.0.10:53"]\nI0307 08:21:49.666500       1 dns.go:133] cert-manager/controller/challenges/Check "msg"="waiting DNS record TTL to allow the DNS01 record to propagate for domain" "dnsName"="bookinfo.cloudbuild.site" "domain"="bookinfo.cloudbuild.site" "resource_kind"="Challenge" "resource_name"="ingress-cert-1810009586-3587251712-2272992580" "resource_namespace"="istio-system" "type"="dns-01" "fqdn"="_acme-challenge.bookinfo.cloudbuild.site." "ttl"=60\n'})}),"\n",(0,t.jsx)(n.p,{children:"Once you see all sorts of successful activity happening, go to your Azure Portal and check your DNS Zone. All going well, you'll see a new TXT record with a hash value like this:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"azure_dns_zone_txt",src:s(39155).A+"",width:"1261",height:"429"})}),"\n",(0,t.jsx)(n.p,{children:"Check the cert resource via kubectl:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# kubectl -n istio-system describe certs\nName:         ingress-cert\nNamespace:    istio-system\nLabels:       <none />\nAnnotations:  kubectl.kubernetes.io/last-applied-configuration:...\nAPI Version:  cert-manager.io/v1alpha2\nKind:         Certificate\nMetadata:\n  Creation Timestamp:  2020-03-07T08:21:31Z\n  Generation:          1\n  Resource Version:    69741\n  Self Link:           /apis/cert-manager.io/v1alpha2/namespaces/istio-system/certificates/ingress-cert\n  UID:                 c97b2f16-4e32-4b48-9692-dfa94e9761fe\nSpec:\n  Common Name:  bookinfo.cloudbuild.site\n  Dns Names:\n    bookinfo.cloudbuild.site\n  Issuer Ref:\n    Kind:       Issuer\n    Name:       letsencrypt-prod\n  Secret Name:  ingress-cert\nStatus:\n  Conditions:\n    Last Transition Time:  2020-03-07T08:23:12Z\n    Message:               Certificate is up to date and has not expired\n    Reason:                Ready\n    Status:                True\n    Type:                  Ready\n  Not After:               2020-06-05T07:23:11Z\nEvents:\n  Type    Reason     Age   From          Message\n  ----    ------     ----  ----          -------\n  Normal  Requested  12m   cert-manager  Created new CertificateRequest resource "ingress-cert-1810009586"\n  Normal  Issued     10m   cert-manager  Certificate issued successfully\n'})}),"\n",(0,t.jsx)(n.h3,{id:"verify-certificate-via-openssl",children:"Verify Certificate via OpenSSL"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"openssl s_client -connect bookinfo.cloudbuild.site:443"})}),"\n",(0,t.jsx)(n.p,{children:"results, we see:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"LetsEncrypt Authority"}),"\n",(0,t.jsx)(n.li,{children:"CN of 'bookinfo.cloudbuild.site'"}),"\n",(0,t.jsx)(n.li,{children:"Signed Certificate"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"CONNECTED(00000005)\ndepth=2 O = Digital Signature Trust Co., CN = DST Root CA X3\nverify return:1\ndepth=1 C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X3\nverify return:1\ndepth=0 CN = bookinfo.cloudbuild.site\nverify return:1\n---\nCertificate chain\n 0 s:CN = bookinfo.cloudbuild.site\n   i:C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X3\n 1 s:C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X3\n   i:O = Digital Signature Trust Co., CN = DST Root CA X3\n---\nServer certificate\n-----BEGIN CERTIFICATE-----\nMIIFaDCCBFCgAwIBAgISA/EH7xvZBS+ir5NoJM3ozbrHMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0yMDAzMDcwNzIzMTFaFw0y\nMDA2MDUwNzIzMTFaMCMxITAfBgNVBAMTGGJvb2tpbmZvLmNsb3VkYnVpbGQuc2l0\nZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN6NdP6aMOyGV91eYKxY\n/PQUDOUGzvFGcf2hiAtf0rEycNHDsY8WGockRECDXfj+Z+q1WFwcuKP40Netc3K/\n4Ywnmg1P8Vt46R57QcsV43rBtC+aDCGR8vJPiUGxHbkzMqLSUmCHqupt6OmZdlxl\n0AjMd40+NboiKqKCYPTE/xtSoH8dCqEhRKIDZK1unFxOv4wQbV7lMYRwlfmv05zr\nyTBozqGcwx3WU3I90cN8UKisbg5enb5DZGl3rRozRHZkXXg0gBiRzfr0xxA65nQ0\nBJ3LpIehjavprSzVDXGmuIVqLS3ZRgYxqzaYdohNZZN/JhjUlZqTpcm+Gzyj2iPh\nYmUCAwEAAaOCAm0wggJpMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEF\nBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUlZgrZj4o3utB\nbjhVZfPFsW6ouCgwHwYDVR0jBBgwFoAUqEpqYwR93brm0Tm3pkVl7/Oo7KEwbwYI\nKwYBBQUHAQEEYzBhMC4GCCsGAQUFBzABhiJodHRwOi8vb2NzcC5pbnQteDMubGV0\nc2VuY3J5cHQub3JnMC8GCCsGAQUFBzAChiNodHRwOi8vY2VydC5pbnQteDMubGV0\nc2VuY3J5cHQub3JnLzAjBgNVHREEHDAaghhib29raW5mby5jbG91ZGJ1aWxkLnNp\ndGUwTAYDVR0gBEUwQzAIBgZngQwBAgEwNwYLKwYBBAGC3xMBAQEwKDAmBggrBgEF\nBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcwggEEBgorBgEEAdZ5AgQC\nBIH1BIHyAPAAdgCyHgXMi6LNiiBOh2b5K7mKJSBna9r6cOeySVMt74uQXgAAAXC0\nF08nAAAEAwBHMEUCIFKe+kYtgTIPYGjL1vL54oSias4Sn6nx6SGwQzWS6R8SAiEA\nhgJcnoKZXFX2Esz4jKFWTrft4Pz8XlUFhTKfoSHoQeQAdgBvU3asMfAxGdiZAKRR\nFf93FRwR2QLBACkGjbIImjfZEwAAAXC0F096AAAEAwBHMEUCIH/cLlIYaGNTUWZA\nLweli4M14z6k1hs9Rmk3E+eVCOTxAiEAj3NtSBT578yvCCD8IhtVzPHBILWsyC8o\nHB/LKG78IrIwDQYJKoZIhvcNAQELBQADggEBAANnWf1U4PYT49n6b97GvGD1xE4i\nJWJfuOqpT39dvIfx4YA0WhrzN4LwpdR+pejNDThs08usqvKIqCxY5SGSQY9Mip57\n9r26qHN+Om3ufI/mZ81fvtH6PJQ0YgFG0kGMY/wZ4pZu2P2KwH5Tv2gGI4ZDl3tC\ncclqL4qn9+eMaxqF1mO1wE7HTNpo+aiyKupdLTau6GH9vfyxj/Z17UAUfi8mugnX\nOxoyXx5d7U5Zi3ofJv1YfxFCoPNttyWhoWX2odHzoAvRDazzDy/bWmzPsM3gPeYC\nGwdWUCABDkwRosiD0zs1YHjeSkTSkCa0snRZJi3reeC+zNbtyZ+O3VstYeQ=\n-----END CERTIFICATE-----\nsubject=CN = bookinfo.cloudbuild.site\n\nissuer=C = US, O = Let's Encrypt, CN = Let's Encrypt Authority X3\n\n---\nNo client certificate CA names sent\nPeer signing digest: SHA256\nPeer signature type: RSA-PSS\nServer Temp Key: X25519, 253 bits\n---\nSSL handshake has read 3057 bytes and written 406 bytes\nVerification: OK\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"SUCCESS!!"})}),"\n",(0,t.jsxs)(n.p,{children:["Now you can browse and use your bookinfo app at ",(0,t.jsx)(n.a,{href:"https://bookinfo.cloudbuild.site/productpage",children:"https://bookinfo.cloudbuild.site/productpage"})," with a valid TLS certificate, and working cert-manager and SDS setup with Azure DNS challenge solver!"]}),"\n",(0,t.jsxs)(n.p,{children:["I know this was pretty long, so any question, please feel free to ping me online, probably on ",(0,t.jsx)(n.a,{href:"https://twitter.com/rxnamxsa",children:"Twitter"})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(96540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},37895:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/istiosds-dnszone-46187da5b785ee6877ef7eb7e43ee6bb.png"},39155:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/istiosds-dnszone-TXTrecord-0af78877fcafe99dec851fb7bc3f8db7.png"},66019:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Azure-Istio-SDS-Cert-Manager-DNS-f472a5e6ad83257e1662f0e35f300d7e.png"}}]);