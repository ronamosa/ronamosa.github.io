"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[9019],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var l=s(96540);const o={},i=l.createContext(o);function a(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),l.createElement(i.Provider,{value:n},e.children)}},44012:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>t});const l=JSON.parse('{"id":"study/CKS/ExamNotes","title":"Exam Notes","description":"Courses & Practice Exams","source":"@site/docs/study/CKS/ExamNotes.md","sourceDirName":"study/CKS","slug":"/study/CKS/ExamNotes","permalink":"/docs/study/CKS/ExamNotes","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/study/CKS/ExamNotes.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":0.5,"frontMatter":{"title":"Exam Notes","sidebar_position":0.5},"sidebar":"docsSidebar","previous":{"title":"Certified Kubernetes Security Specialist (CKS) - Complete Study Guide","permalink":"/docs/study/CKS/kubernetes-security-specialist-cks-study-guide"},"next":{"title":"Dashboard","permalink":"/docs/study/CKS/Cluster Setup/ClusterDashboard"}}');var o=s(74848),i=s(28453);const a={title:"Exam Notes",sidebar_position:.5},r=void 0,c={},t=[{value:"Courses &amp; Practice Exams",id:"courses--practice-exams",level:2},{value:"Exam 1",id:"exam-1",level:2},{value:"AppArmor profile",id:"apparmor-profile",level:3},{value:"Secrets as Volumes",id:"secrets-as-volumes",level:3},{value:"Trivy Scan Images",id:"trivy-scan-images",level:3},{value:"seccomp profiles",id:"seccomp-profiles",level:3},{value:"Falco",id:"falco",level:3},{value:"RuntimeClass",id:"runtimeclass",level:3},{value:"ImagePolicyWebhook",id:"imagepolicywebhook",level:3},{value:"Exam 2",id:"exam-2",level:2},{value:"Network Policy",id:"network-policy",level:3},{value:"RBAC",id:"rbac",level:3},{value:"Disable mounting the SA token",id:"disable-mounting-the-sa-token",level:3},{value:"falco local rules",id:"falco-local-rules",level:3},{value:"Exam 3",id:"exam-3",level:2},{value:"Kube-bench",id:"kube-bench",level:3},{value:"Audit logging",id:"audit-logging",level:3},{value:"PSP",id:"psp",level:3},{value:"Kubesec",id:"kubesec",level:3},{value:"RBAC 2",id:"rbac-2",level:3},{value:"OPA",id:"opa",level:3},{value:"ImagePolicyWebhook 2",id:"imagepolicywebhook-2",level:3},{value:"Immutable",id:"immutable",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"courses--practice-exams",children:"Courses & Practice Exams"}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:"My study preperations included"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.udemy.com/share/103O5A3@tvmhKg4QOGimr2W3jgLP2nxMOL5LC86ZUnUdOdW74r7CnMjwY6XTOY7owUd6z63ALQ==/",children:"Kubernetes CKS 2021 Complete Course"})}),"\n",(0,o.jsxs)(n.li,{children:["2 x ",(0,o.jsx)(n.a,{href:"https://killer.sh",children:"killer.sh"})," simulators included in the CKS exam purchase."]}),"\n",(0,o.jsxs)(n.li,{children:["3 x ",(0,o.jsx)(n.a,{href:"https://kodekloud.com/",children:"kodekloud"})," mock exams"]}),"\n"]})]}),"\n",(0,o.jsx)(n.p,{children:"prepare terminal drills -- repeatedly running these commands at the beginning of each mock exam session helped memorize them for the exam."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'alias k="/usr/bin/kubectl"\nexport do="--dry-run=client -oyaml"\n\necho "set tabstop=2" > ~/.vimrc\necho "set shiftwidth=2" > ~/.vimrc\n'})}),"\n",(0,o.jsx)(n.h2,{id:"exam-1",children:"Exam 1"}),"\n",(0,o.jsx)(n.h3,{id:"apparmor-profile",children:"AppArmor profile"}),"\n",(0,o.jsx)(n.p,{children:"AppArmor drill:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"apparmor_parser -q /etc/apparmor.d/frontend"})}),"\n",(0,o.jsxs)(n.li,{children:["lookup apparmor ",(0,o.jsx)(n.strong,{children:"annotations"})]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"k get pods -oyaml > pod.yaml"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"k replace --force -f ./pod.yaml"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"RBAC drill"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"k -n ns get roles role-name -oyaml"})," | check verbs & resources"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"k -n ns get rolebinding role-binding -oyaml"})," | check verbs & resources"]}),"\n",(0,o.jsx)(n.li,{children:"if an SA has NO BINDINGS -- it has fewer permissions"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"serviceAccountName"})," above ",(0,o.jsx)(n.code,{children:"container"})," in spec."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"secrets-as-volumes",children:"Secrets as Volumes"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"kubectl -n orion get secrets a-safe-secret -o jsonpath='{.data.CONNECTOR_PASSWORD}' | base64 --decode >/root/CKS/secrets/CONNECTOR_PASSWORD"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"k get pods podname -oyaml > pod1.yaml"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"spec:\n  containers:\n  - image: nginx\n    name: app-xyz\n    ports:\n    - containerPort: 3306\n    volumeMounts:\n    - name: secret-volume\n      mountPath: /mnt/connector/password\n      readOnly: true\n  volumes:\n  - name: secret-volume\n    secret:\n      secretName: a-safe-secret\n"})}),"\n",(0,o.jsx)(n.h3,{id:"trivy-scan-images",children:"Trivy Scan Images"}),"\n",(0,o.jsxs)(n.p,{children:["Grab all images: ",(0,o.jsx)(n.code,{children:'kubectl get pods --namespace default --output=custom-columns="NAME:.metadata.name,IMAGE:.spec.containers[*].image"'})]}),"\n",(0,o.jsxs)(n.p,{children:["Scan for CRITICAL: ",(0,o.jsx)(n.code,{children:"trivy i -s <LEVEL /> <image /> | grep Total"})," - just look for ",(0,o.jsx)(n.code,{children:"Total"})," from the trivy report to make decisions."]}),"\n",(0,o.jsx)(n.h3,{id:"seccomp-profiles",children:"seccomp profiles"}),"\n",(0,o.jsxs)(n.p,{children:["default folder for profiles ",(0,o.jsx)(n.code,{children:"/var/lib/kubelet/seccomp/profiles/"})," put ",(0,o.jsx)(n.code,{children:"audit.json"})," in there."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"securityContext"})," NOT annotation:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    run: nginx\n  name: audit-nginx\nspec:\n  securityContext:\n    seccompProfile:\n      type: Localhost\n      localhostProfile: profiles/audit.json\n"})}),"\n",(0,o.jsx)(n.h3,{id:"falco",children:"Falco"}),"\n",(0,o.jsx)(n.p,{children:"Drill"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["check falco ",(0,o.jsx)(n.code,{children:"systemctl status falco"})]}),"\n",(0,o.jsxs)(n.li,{children:["start stop ",(0,o.jsx)(n.code,{children:"systemctl start|stop falco"})]}),"\n",(0,o.jsxs)(n.li,{children:["output to log, change ",(0,o.jsx)(n.code,{children:"/etc/falco/falco.yaml"})]}),"\n",(0,o.jsxs)(n.li,{children:["override by copying the rule to ",(0,o.jsx)(n.code,{children:"/etc/falco/falco_rules.local.yaml"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"runtimeclass",children:"RuntimeClass"}),"\n",(0,o.jsxs)(n.p,{children:["create ",(0,o.jsx)(n.code,{children:"runtimeClass.yaml"})," (if required)"]}),"\n",(0,o.jsxs)(n.p,{children:["add ",(0,o.jsx)(n.code,{children:"runtimeClassName: <rcName />"})," in-line with ",(0,o.jsx)(n.code,{children:"containers"})]}),"\n",(0,o.jsx)(n.h3,{id:"imagepolicywebhook",children:"ImagePolicyWebhook"}),"\n",(0,o.jsx)(n.p,{children:"Key components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"API server args"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"- --admission-control-config-file=/etc/admission-controllers/admission-configuration.yaml # inside the container, reference the volumeMount\n- --enable-admission-plugins=NodeRestriction,ImagePolicyWebhook\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Configuration file"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"imagePolicy:\n  kubeConfigFile: /etc/admission-controllers/admission-kubeconfig.yaml # inside the container, reference the volumeMount\n  allowTTL: 50\n  denyTTL: 50\n  retryBackoff: 500\n  defaultAllow: false # fail closed NOT fail open\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["volume, volumeMounts in ",(0,o.jsx)(n.code,{children:"/etc/kubernetes/manifest/kube-apiserver.yaml"})]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"  volumeMounts:\n  - mountPath: /etc/admission-controllers # <- mounted into the container\n      name: admission-controllers\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: /root/CKS/ImagePolicy/ # <- where the files are on the HOST\n      type: DirectoryOrCreate\n    name: admission-controllers\n"})}),"\n",(0,o.jsx)(n.p,{children:"look carefully:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"root@controlplane:~# ll /root/CKS/ImagePolicy/\ntotal 16\ndrwxr-xr-x 2 root root 4096 Sep 22 04:12 ./\ndrwxr-xr-x 4 root root 4096 Sep 22 03:41 ../\n-rw-r--r-- 1 root root  150 Sep 22 04:12 admission-configuration.yaml\n-rw-r--r-- 1 root root  495 Sep 22 03:31 admission-kubeconfig.yaml\n"})}),"\n",(0,o.jsx)(n.h2,{id:"exam-2",children:"Exam 2"}),"\n",(0,o.jsx)(n.h3,{id:"network-policy",children:"Network Policy"}),"\n",(0,o.jsx)(n.p,{children:'"lock down access to this pod only to the following:"'}),"\n",(0,o.jsx)(n.p,{children:"Allow:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Any pod in the same namespace (",(0,o.jsx)(n.code,{children:"metadata.namespace"}),") with the label backend=prod-x12cs (",(0,o.jsx)(n.code,{children:"from.podSelector.matchLabels"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["All pods in the prod-yx13cs namespace (",(0,o.jsx)(n.code,{children:"spec.ingress.from.namespaceSelector.matchLabels"}),")"]}),"\n",(0,o.jsx)(n.li,{children:"All other incoming connections should be blocked."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# correct solution\n---\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-redis-access\n  namespace: prod-x12cs # this is the TARGET namespace i.e. rules below applies to this NS.\nspec:\n  podSelector:\n    matchLabels:\n      run: redis-backend # target is the redis pod (via labels)\n  policyTypes:\n  - Ingress # talking about ingress\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          access: redis # this is the label on the Namespace\n    - podSelector:      # the '-' here makes this an OR i.e. ns OR pod, no '-' makes it an AND.\n        matchLabels:    # if you have a rule `podSelector` with no `namespaceSelector` -- the the namespace of the policy is the one that applies i.e. `prod-x12cs`\n          backend: prod-x12cs\n    ports:\n    - protocol: TCP\n      port: 6379\n"})}),"\n",(0,o.jsx)(n.p,{children:"Part 2"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"restrict redis pod (labels db, backend)"}),"\n",(0,o.jsx)(n.li,{children:"allow in from app1"}),"\n",(0,o.jsx)(n.li,{children:"allow in from app2"}),"\n",(0,o.jsx)(n.li,{children:"deny in from app3"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-app1-app2\n  namespace: apps-xyz\nspec:\n  podSelector:\n    matchLabels:\n      role: db\n      tier: backend\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          name: app1\n          tier: frontend\n    - podSelector:\n        matchLabels:\n          name: app2\n          tier: frontend\n    ports:\n    - protocol: TCP\n      port: 6379\n"})}),"\n",(0,o.jsx)(n.h3,{id:"rbac",children:"RBAC"}),"\n",(0,o.jsxs)(n.p,{children:["check roles ",(0,o.jsx)(n.code,{children:"k -n namespace get roles -oyaml"})," for verbs, groups"]}),"\n",(0,o.jsx)(n.p,{children:'test what you can do as the user ("martin") in those namespaces'}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"root@controlplane:/etc/falco# k -n dev-a auth can-i delete pods --as martin\nyes\nroot@controlplane:/etc/falco# k -n dev-b auth can-i delete pods --as martin\nyes\nroot@controlplane:/etc/falco# k -n dev-z auth can-i delete pods --as martin\nno\n"})}),"\n",(0,o.jsx)(n.h3,{id:"disable-mounting-the-sa-token",children:"Disable mounting the SA token"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    run: apps-cluster-dash\n  name: apps-cluster-dash\n  namespace: gamma\nspec:\n  containers:\n  - image: nginx\n    name: apps-cluster-dash\n  serviceAccountName: cluster-view\n  automountServiceAccountToken: false\n"})}),"\n",(0,o.jsx)(n.h3,{id:"falco-local-rules",children:"falco local rules"}),"\n",(0,o.jsxs)(n.p,{children:["falco update ",(0,o.jsx)(n.code,{children:"/etc/falco/falco_rules.local.yaml"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"- rule: Terminal shell in container\n  desc: A shell was used as the entrypoint/exec point into a container with an attached terminal.\n  condition: >\n    spawned_process and container\n    and shell_procs and proc.tty != 0\n    and container_entrypoint\n    and not user_expected_terminal_shell_in_container_conditions\n  output: >\n    %evt.time.s,%user.uid,%container.id,%container.image.repository\n  priority: ALERT\n  tags: [container, shell, mitre_execution]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"exam-3",children:"Exam 3"}),"\n",(0,o.jsx)(n.h3,{id:"kube-bench",children:"Kube-bench"}),"\n",(0,o.jsx)(n.p,{children:"Fix FAILS"}),"\n",(0,o.jsx)(n.p,{children:"kubelet configuration - /var/lib/kubelet/config.yaml"}),"\n",(0,o.jsx)(n.h3,{id:"audit-logging",children:"Audit logging"}),"\n",(0,o.jsx)(n.p,{children:"double check references match the QUESTION"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"    - --audit-policy-file=/etc/kubernetes/prod-audit.yaml\n    - --audit-log-path=/var/log/prod-secrets.log\n    - --audit-log-maxage=30\n\n    volumeMounts:\n    - mountPath: /etc/kubernetes/prod-audit.yaml\n      name: audit\n      readOnly: true\n    - mountPath: /var/log/prod-secrets.log\n      name: audit-log\n      readOnly: false # LOGS MUST BE READONLY=FALSE\n\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/prod-audit.yaml\n      type: File\n    name: audit\n  - hostPath:\n      path: /var/log/prod-secrets.log\n      type: FileOrCreate\n    name: audit-log\n"})}),"\n",(0,o.jsx)(n.h3,{id:"psp",children:"PSP"}),"\n",(0,o.jsx)(n.p,{children:"Ensure you only configure what is asked - DELETE the rest."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: pod-psp\nspec:\n  privileged: false\n  seLinux:\n    rule: RunAsAny\n  runAsUser:\n    rule: RunAsAny\n  supplementalGroups:\n    rule: RunAsAny\n  fsGroup:\n    rule: RunAsAny\n  volumes:\n  - configMap\n  - secret\n  - emptyDir\n  - hostPath\n"})}),"\n",(0,o.jsx)(n.h3,{id:"kubesec",children:"Kubesec"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"all good"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"rbac-2",children:"RBAC 2"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["careful to check you get ALL the requirements (missed ",(0,o.jsx)(n.code,{children:"create"}),")"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"k -n dev create role dev-write --verb=get,watch,list,create --resource=pods --dry-run=client -oyaml > role.yaml"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  namespace: dev\n  name: dev-write\nrules:\n- apiGroups: [""] # "" indicates the core API group\n  resources: ["pods"]\n  verbs: ["get", "watch", "list", "create"]\n'})}),"\n",(0,o.jsx)(n.h3,{id:"opa",children:"OPA"}),"\n",(0,o.jsxs)(n.p,{children:["Look in the ",(0,o.jsx)(n.code,{children:"configMap"})," of the OPA namespace to get the image policy"]}),"\n",(0,o.jsx)(n.h3,{id:"imagepolicywebhook-2",children:"ImagePolicyWebhook 2"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"  - --enable-admission-plugins=NodeRestriction,PodSecurityPolicy,ImagePolicyWebhook\n  - --admission-control-config-file=/etc/kubernetes/pki/admission_configuration.yaml\n"})}),"\n",(0,o.jsx)(n.p,{children:"volume, volumeMounts -- already mounted for 'pki'"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"    volumeMounts:\n    - mountPath: /etc/kubernetes/pki\n      name: k8s-certs\n      readOnly: true\n\nvolume:\n- hostPath:\n    path: /etc/kubernetes/pki\n    type: DirectoryOrCreate\n  name: k8s-certs\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"immutable",children:"Immutable"}),"\n",(0,o.jsx)(n.p,{children:"Things to check"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"readOnlyRootFilesystem: true"})," - MUST be set to ",(0,o.jsx)(n.code,{children:"true"})," or it is NOT immutable."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"privileged: true"})," - if exists and set to ",(0,o.jsx)(n.code,{children:"true"})," = NOT immutable"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);