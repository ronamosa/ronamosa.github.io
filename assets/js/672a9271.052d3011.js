"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[1728],{13573:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"study/CKS/Microservice Vulnerability/VulnerableSecrets","title":"Manage Kubernetes Secrets","description":"secrets - passords, api keys, creds","source":"@site/docs/study/CKS/4. Microservice Vulnerability/VulnerableSecrets.md","sourceDirName":"study/CKS/4. Microservice Vulnerability","slug":"/study/CKS/Microservice Vulnerability/VulnerableSecrets","permalink":"/docs/study/CKS/Microservice Vulnerability/VulnerableSecrets","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/study/CKS/4. Microservice Vulnerability/VulnerableSecrets.md","tags":[],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"title":"Manage Kubernetes Secrets"},"sidebar":"docsSidebar","previous":{"title":"OS Level Security Domains","permalink":"/docs/study/CKS/Microservice Vulnerability/VulnerableOSLevelSecurity"},"next":{"title":"Container Images","permalink":"/docs/study/CKS/Supply Chain Security/SupplyChainImages"}}');var c=t(74848),s=t(28453);const a={title:"Manage Kubernetes Secrets"},l=void 0,d={},o=[{value:"simple secret scenario",id:"simple-secret-scenario",level:2},{value:"Hack secrets in Docker",id:"hack-secrets-in-docker",level:2},{value:"Hack Secrets in ETCD",id:"hack-secrets-in-etcd",level:2},{value:"Encrypt ETCD at rest",id:"encrypt-etcd-at-rest",level:2},{value:"hands-on example",id:"hands-on-example",level:3},{value:"read secrets",id:"read-secrets",level:3},{value:"recap",id:"recap",level:2}];function i(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.p,{children:"secrets - passords, api keys, creds"}),"\n",(0,c.jsx)(r.p,{children:"k8s secrets source to deployment flow:"}),"\n",(0,c.jsxs)(r.p,{children:["code --\x3e git --\x3e api server --\x3e kubelet",":pod","\nsecret --\x3e api server --\x3e kubelet",":pod"]}),"\n",(0,c.jsx)(r.h2,{id:"simple-secret-scenario",children:"simple secret scenario"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"\nk create secret generic secret1 --from-literal user=admin\nk create secret generic secret2 --from-literal pass=12345\n\nk run pod --image=nginx --dry-run=client -oyaml > pod.yaml\n"})}),"\n",(0,c.jsxs)(r.p,{children:["edit ",(0,c.jsx)(r.code,{children:"pod.yaml"})," add secrets mounts and env var"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: pod\n  name: pod\nspec:\n  containers:\n  - image: nginx\n    name: pod\n    resources: {}\n    env:\n      - name: PASSWORD\n        valueFrom:\n          secretKeyRef:\n            name: secret2\n            key: pass\n    volumeMounts:\n    - name: secret1\n      mountPath: "/etc/secret1"\n      readOnly: true\n  volumes:\n  - name: secret1\n    secret:\n      secretName: secret1\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: {}\n'})}),"\n",(0,c.jsxs)(r.p,{children:["create it ",(0,c.jsx)(r.code,{children:"k create -f ./pod.yaml"})]}),"\n",(0,c.jsxs)(r.p,{children:["check our ENV var shows our password: ",(0,c.jsx)(r.code,{children:"k exec pod -- env | grep PASS"}),"\ncheck our mount shows our user: ",(0,c.jsx)(r.code,{children:"k exec pod -- cat /etc/secret1/user"})]}),"\n",(0,c.jsx)(r.h2,{id:"hack-secrets-in-docker",children:"Hack secrets in Docker"}),"\n",(0,c.jsx)(r.p,{children:"on worker node, run docker find out container"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'root@cks-worker:~# docker ps | grep nginx\nb74bd0f17bba   nginx                    "/docker-entrypoint.\u2026"   21 seconds ago   Up 20 seconds             k8s_pod_pod_default_ce59b0e2-7c2c-4392-a769-49c50c4d75ce_0\n'})}),"\n",(0,c.jsx)(r.p,{children:"inspect that container id and look through the filesystem to find secrets"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'root@cks-worker:~# docker inspect b74bd0f17bba | grep -i pass\n                "PASSWORD=12345",\n\n# look at these mounts\nroot@cks-worker:~# docker inspect b74bd0f17bba | grep -i volume\n                "/var/lib/kubelet/pods/ce59b0e2-7c2c-4392-a769-49c50c4d75ce/volumes/kubernetes.io~secret/secret1:/etc/secret1:ro",\n                "/var/lib/kubelet/pods/ce59b0e2-7c2c-4392-a769-49c50c4d75ce/volumes/kubernetes.io~projected/kube-api-access-5khc6:/var/run/secrets/kubernetes.io/serviceaccount:ro",\n            "VolumeDriver": "",\n            "VolumesFrom": null,\n                "Source": "/var/lib/kubelet/pods/ce59b0e2-7c2c-4392-a769-49c50c4d75ce/volumes/kubernetes.io~secret/secret1",\n                "Source": "/var/lib/kubelet/pods/ce59b0e2-7c2c-4392-a769-49c50c4d75ce/volumes/kubernetes.io~projected/kube-api-access-5khc6",\n            "Volumes": null,\n'})}),"\n",(0,c.jsx)(r.p,{children:"copy this container filesystem to local"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"root@cks-worker:~# docker cp b74bd0f17bba:/etc/secret1 secret1\nroot@cks-worker:~# cd secret1/\nroot@cks-worker:~/secret1# ls\nuser\nroot@cks-worker:~/secret1# cat user \nadmin\n"})}),"\n",(0,c.jsx)(r.h2,{id:"hack-secrets-in-etcd",children:"Hack Secrets in ETCD"}),"\n",(0,c.jsx)(r.p,{children:"commands used"}),"\n",(0,c.jsxs)(r.p,{children:["note: had to install etcdctl ",(0,c.jsx)(r.code,{children:"root@cks-master:~# apt install -y etcd-client"})]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'# access secret int etcd\nroot@cks-master:~# cat /etc/kubernetes/manifests/kube-apiserver.yaml | grep etcd\n    - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt\n    - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt\n    - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key\n    - --etcd-servers=https://127.0.0.1:2379\n\n# check health etcd\nroot@cks-master:~# ETCDCTL_API=3 etcdctl endpoint health\n{"level":"warn","ts":"2021-09-04T22:27:00.050Z","caller":"clientv3/retry_interceptor.go:62","msg":"retrying of unary invoker failed","target":"endpoint://client-7340418a-6871-4270-ad79-7d02f2a2bb48/127.0.0.1:2379","attempt":0,"error":"rpc error: code = DeadlineExceeded desc = latest connection error: connection closed"}\n127.0.0.1:2379 is unhealthy: failed to commit proposal: context deadline exceeded\nError: unhealthy cluster\n\n# use the creds as per kube-apiserver.yaml\nETCDCTL_API=3 etcdctl --cert /etc/kubernetes/pki/apiserver-etcd-client.crt --key /etc/kubernetes/pki/apiserver-etcd-client.key --cacert /etc/kubernetes/pki/etcd/ca.crt endpoint health\n127.0.0.1:2379 is healthy: successfully committed proposal: took = 1.076931ms\n\n# --endpoints "https://127.0.0.1:2379" not necessary because we\u2019re on same node\n\n# get secrets from `/registry/secrets/default/secret1`\nroot@cks-master:~# ETCDCTL_API=3 etcdctl --cert /etc/kubernetes/pki/apiserver-etcd-client.crt --key /etc/kubernetes/pki/apiserver-etcd-client.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/secrets/default/secret1\n/registry/secrets/default/secret1\nk8s\n\n\nv1Secret\ufffd\n\ufffd\nsecret1default"*$952203d4-d5f6-4bbe-8f57-386c638c93bf2\ufffd\ufffd\u03c9z\ufffd_\nkubectl-createUpdatev\ufffd\ufffd\u03c9FieldsV1:-\n+{"f:data":{".":{},"f:user":{\\}\\},"f:type":{\\}\\}\nuseradminOpaque"\n\n# see the key-pair = "useradmin"? now get password\nroot@cks-master:~# ETCDCTL_API=3 etcdctl --cert /etc/kubernetes/pki/apiserver-etcd-client.crt --key /etc/kubernetes/pki/apiserver-etcd-client.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/secrets/default/secret2\n/registry/secrets/default/secret2\nk8s\n\n\nv1Secret\ufffd\n\ufffd\nsecret2default"*$14c16e50-0eb3-469a-9b96-be79622d08ac2\ufffd\ufffd\u03c9z\ufffd_\nkubectl-createUpdatev\ufffd\ufffd\u03c9FieldsV1:-\n+{"f:data":{".":{},"f:pass":{\\}\\},"f:type":{\\}\\}\npass12345Opaque"\n\n'})}),"\n",(0,c.jsx)(r.p,{children:"lesson here - unencrypted plain text secrets stored in ETCD."}),"\n",(0,c.jsx)(r.h2,{id:"encrypt-etcd-at-rest",children:"Encrypt ETCD at rest"}),"\n",(0,c.jsx)(r.p,{children:"API server's only thing allowed to talk to ETCD, so its responsible for encrypt/decrypt in this flow."}),"\n",(0,c.jsxs)(r.p,{children:["read ",(0,c.jsx)(r.a,{href:"https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data",children:"etcd docs"})," page for encrypt/decrypt secrets."]}),"\n",(0,c.jsxs)(r.p,{children:["Resource created kind ",(0,c.jsx)(r.code,{children:"EncryptionConfiguration"})]}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"specify what resources to be encrypted by this config e.g. secrets"}),"\n",(0,c.jsxs)(r.li,{children:["providers list array of encryption providers","\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:["the ",(0,c.jsx)(r.code,{children:"identity: {}"}),' provider is a "no encryption" provider']}),"\n",(0,c.jsx)(r.li,{children:"e.g. aesgcm, aescbc"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"important"}),": on STORE - providers used in ORDER - so only the first one used. on READ, it will go through ALL providers available to process what it needs to read."]}),"\n",(0,c.jsxs)(r.p,{children:["pro-tip - to re-create ALL secrets in ALL namespaces if you want to enforce a new ",(0,c.jsx)(r.code,{children:"EncryptionConfiguration"})," resource, so the following"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"kubectl get secrets --all-namespaces -o json | kubectl replace -f -\n"})}),"\n",(0,c.jsx)(r.h3,{id:"hands-on-example",children:"hands-on example"}),"\n",(0,c.jsxs)(r.p,{children:["I am following along the ",(0,c.jsx)(r.a,{href:"https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/",children:"k8s docs"})," myself first."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"# create secret\nhead -c 32 /dev/urandom | base64\n"})}),"\n",(0,c.jsxs)(r.p,{children:["save following to ",(0,c.jsx)(r.code,{children:"/etc/kubernetes/etcd/ec.yaml"})]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:"apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n  - resources:\n    - secrets\n    providers:\n    - aescbc:\n        keys:\n        - name: key1\n          secret: fNtJ9NkCpeJabcKMocX07jGu1hcL8bUvGvjH2PSIs24=\n    - identity: {}\n"})}),"\n",(0,c.jsxs)(r.p,{children:["update ",(0,c.jsx)(r.code,{children:"/etc/kubernetes/manifests/kube-apiserver.yaml"})," to add the provider config"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"spec:\n  containers:\n  - command:\n    - kube-apiserver\n    - --encryption-provider-config=/etc/kubernetes/etcd/ec.yaml\n    - --advertise-address=10.152.0.2\n    - --allow-privileged=true\n    - --authorization-mode=Node,RBAC\n"})}),"\n",(0,c.jsxs)(r.p,{children:["add mount for this file ",(0,c.jsx)(r.code,{children:"ec.yaml"})," for the kube-apiserver to use"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"# mount\n  containers:\n  ...\n    volumeMounts:\n    - mountPath: /etc/kubernetes/etcd\n      name: etcd\n\n# volume\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/etcd\n      type: DirectoryOrCreate\n    name: etcd\n"})}),"\n",(0,c.jsx)(r.p,{children:"API server will restart itself, check:"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"root@cks-master:/etc/systemd/system/kubelet.service.d# ps aux | grep apiserver\nroot      3010  9.9  9.4 1101516 380920 ?      Ssl  23:17   0:14 kube-apiserver --encryption-provider-config=/etc/kubernetes/etcd/ec.yaml --advertise-address=10.152.0.2 --allow-privileged=true --authorization-mode=Node,RBAC --client-ca-file=/etc/kubernetes/pki/ca.crt --enable-admission-plugins=NodeRestriction --enable-bootstrap-token-auth=true --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key --etcd-servers=https://127.0.0.1:2379 --insecure-port=0 --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key --requestheader-allowed-names=front-proxy-client --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --secure-port=6443 --service-account-issuer=https://kubernetes.default.svc.cluster.local --service-account-key-file=/etc/kubernetes/pki/sa.pub --service-account-signing-key-file=/etc/kubernetes/pki/sa.key --service-cluster-ip-range=10.96.0.0/12 --tls-cert-file=/etc/kubernetes/pki/apiserver.crt --tls-private-key-file=/etc/kubernetes/pki/apiserver.key\n"})}),"\n",(0,c.jsx)(r.p,{children:"or"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'root@cks-master:/etc/systemd/system/kubelet.service.d# docker ps | grep api\n8fc3c24b04fd   4d217480042e             "kube-apiserver --en\u2026"   3 minutes ago       Up 3 minutes                 k8s_kube-apiserver_kube-apiserver-cks-master_kube-system_0fcea4060dc98eb9e7237787e39dca2b_0\na8a8ccb66f88   k8s.gcr.io/pause:3.4.1   "/pause"                 3 minutes ago       Up 3 minutes                 k8s_POD_kube-apiserver-cks-master_kube-system_0fcea4060dc98eb9e7237787e39dca2b_0\n'})}),"\n",(0,c.jsx)(r.p,{children:"if you need to troubleshoot"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"root@cks-master:/etc/systemd/system/kubelet.service.d# ll /var/log/pods/\ntotal 40\ndrwxr-xr-x 10 root root   4096 Sep  4 23:17 ./\ndrwxrwxr-x 11 root syslog 4096 Sep  2 06:25 ../\ndrwxr-xr-x  3 root root   4096 Aug  8 22:34 kube-system_coredns-558bd4d5db-kf8j9_ecb61ac8-aa71-445f-ace2-af33bd88b44f/\ndrwxr-xr-x  3 root root   4096 Aug  8 22:34 kube-system_coredns-558bd4d5db-nvqqp_e3d25308-e5b6-40c9-a803-b357ac189c22/\ndrwxr-xr-x  3 root root   4096 Aug  8 22:33 kube-system_etcd-cks-master_59e2fab1e68569ba366888edc129a284/\ndrwxr-xr-x  3 root root   4096 Sep  4 23:17 kube-system_kube-apiserver-cks-master_0fcea4060dc98eb9e7237787e39dca2b/\ndrwxr-xr-x  3 root root   4096 Aug  8 22:33 kube-system_kube-controller-manager-cks-master_b9a186e3d4d2fbecf180a0923a24ebcd/\ndrwxr-xr-x  3 root root   4096 Aug  8 22:34 kube-system_kube-proxy-rzbsd_25749ba6-4d3c-4f2e-a7c6-48a37ff03aa4/\ndrwxr-xr-x  3 root root   4096 Aug  8 22:33 kube-system_kube-scheduler-cks-master_4eedadadc796f45ef17aba32e2cc0d32/\ndrwxr-xr-x  5 root root   4096 Aug  8 22:34 kube-system_weave-net-2d9st_b91f6248-8b11-44ff-afec-79a7d3685ef2/\n"})}),"\n",(0,c.jsx)(r.h3,{id:"read-secrets",children:"read secrets"}),"\n",(0,c.jsx)(r.p,{children:"read the default token"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'root@cks-master:/etc/systemd/system/kubelet.service.d# k get secrets default-token-nx5f5 -oyamlapiVersion: v1\ndata:\n  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EZ3dPREl5TXpJeE9Gb1hEVE14TURnd05qSXlNekl4T0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnNkCnR1K3dNRnJkeUdsSlpaUC9VRFFsTlVEeGFhQ2NFT2x6YXRHL3lwNTNBWTJNRG5PYmxHaXkrblh4S2JWd1BYNE8KdFdDdHh6bWhaUVJzMWpmODZuMkhOZGREWmhpVXMvd2dScUUxVC9ucUE2QTFsZFBuMm03L1BMQW5oTHFJTmJZeQo5NklXc2V0ZGxQRTkzSHQ0S2czU1RMUWJHR09ZVktCL2lMZnRpcUQzWUtzL29mZTA2ZTRMQ2RXc25nNmdsOSt0ClRTL0gyWittN2NJUDhLbW94cy9GMTltUW1NMTl2VnZTUStwbkNBTjJrSGRwbnF5STVjUTN5OUhUck5uOFRQQ3cKTWd0YW5kTXhpeEpzTlN2UnA0RG13cnhQYWp4dXZVblhjZXNRczRkSVYrS0pNL0F5TlQ1aVRiQzBDRUZYRTZPagpHNVhrL2d0ZHZadFg1YmN1S29FQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZES1d3Q1V0Rm5sRGtQTHBkU2c1YnNxTGNjSUpNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDazBUeHNFV2dOT2NCNWdUcTBld3JwTFVOY3M1dUl5ZnlBSHowM0M5SDBJSU12UXJtcwpRL2wvemRVRTB4dG1PTi9mWWduVG5MUzhiSmVxSHpsM1FGeG9OMDBnTS9JNVlxSmtqZENudEN4eTljOENYNTl6ClJ2UlpuVTN4WXdYbDVMMU4waURaZ1hxK2JmUVJGK2tHZnJkNVpTZUxvczNkbUNVMmhMUm94alBNb2ZlVjZvcVcKaXRZQVBPTytQSS9MQjN3WXcraVEzRWE0cjFXU3RnVnVVU0xHVThUZHlhNWRiSTFsVW9nY29ZS0FIN3JsQUc0LwpSK2hTUGo0T1dwWXg0QVdXNDJaUE03RWJ4dTlXcUZ6ajJNSDJlVG11NmhrYlVqR1J6d3VkMHY2eFp4YnJCNjhPCnN2TXNKVUtWcW1UcWZIeWFGajZKU1Q4UmhtWmFYL3VrZGViNAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n  namespace: ZGVmYXVsdA==\n  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqQlRUVnBMTldKM1VGbGtSa1p6VDNSNWMxZDJXalI2YldWbFZVRTRaVGcyTTFOZlFXaFNlRUpOU1hNaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbVJsWm1GMWJIUXRkRzlyWlc0dGJuZzFaalVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pWkdWbVlYVnNkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJalUxT1dSaU5qZzRMVEl3Wm1FdE5EWXpNaTA0WVRVeUxXRTNORGRoWmpRMVl6VXlNaUlzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1pXWmhkV3gwT21SbFptRjFiSFFpZlEubVpjX2RzVXhmZWczOHItdklFbVNqVXc0UXBFR2JtMkpGZmMwRE83NlZwblpvd21mOENNNlZPd2pvZmJGQVV5NW0waEpnWFdfaUNRSVAwR3J3ZTZidHI3ZWZOcnVvUXJKbm5meDVrZFo2VURBWVNhRUJLMllfZFlGOGZid3I0ZzRrRElXSzJrSFBxSHNHTjZWX0FJZ3R4VFg0T1NmWDg4S3Roa19EQzJ4Z2tEYTlKMUI0dXI3dTJnMjZfRVVBODlVbndDdURmTWQyOW03WmhBc281VVJNa1o5TTl2SVZjMmczZFJkamlOSWhLeGZsRHFWR2pacTBjNC11Tzd3NE5xZVo2MjczWm5YLXdnNi10SU1pOFJFNUpkWUZ6R2x0blkxb25idUU3bVNBWnBROUFBYWp4U3AtU2xFV1EyUG42WTVBODRzWWlQWlY5ZmdDNE9tek5Hd1RR\nkind: Secret\nmetadata:\n  annotations:\n    kubernetes.io/service-account.name: default\n    kubernetes.io/service-account.uid: 559db688-20fa-4632-8a52-a747af45c522\n  creationTimestamp: "2021-08-08T22:33:47Z"\n  name: default-token-nx5f5\n  namespace: default\n  resourceVersion: "396"\n  uid: 1fe556a9-f84d-4e55-b79d-76a24edd4c77\ntype: kubernetes.io/service-account-token\n'})}),"\n",(0,c.jsx)(r.p,{children:"read the default token key-pair in etcd"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'root@cks-master:/etc/systemd/system/kubelet.service.d# ETCDCTL_API=3 etcdctl --cert /etc/kubernetes/pki/apiserver-etcd-client.crt --key /etc/kubernetes/pki/apiserver-etcd-client.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/secrets/default/default-token-nx5f5\n/registry/secrets/default/default-token-nx5f5\nk8s\n\n\nv1Secret\ufffd\n\ufffd\ndefault-token-nx5f5default"*$1fe556a9-f84d-4e55-b79d-76a24edd4c772\u02f7\ufffd\ufffdb-\n"kubernetes.io/service-account.namedefaultbI\n!kubernetes.io/service-account.uid$559db688-20fa-4632-8a52-a747af45c522z\ufffd\ufffd\nkube-controller-managerUpdatev\u02f7\ufffd\ufffdFieldsV1:\ufffd\n\ufffd{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{\\}\\},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{\\}\\}},"f:type":{\\}\\}\ufffd\nca.crt-----BEGIN CERTIFICATE-----\nMIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMDgwODIyMzIxOFoXDTMxMDgwNjIyMzIxOFowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANsd\ntu+wMFrdyGlJZZP/UDQlNUDxaaCcEOlzatG/yp53AY2MDnOblGiy+nXxKbVwPX4O\ntWCtxzmhZQRs1jf86n2HNddDZhiUs/wgRqE1T/nqA6A1ldPn2m7/PLAnhLqINbYy\n96IWsetdlPE93Ht4Kg3STLQbGGOYVKB/iLftiqD3YKs/ofe06e4LCdWsng6gl9+t\nTS/H2Z+m7cIP8Kmoxs/F19mQmM19vVvSQ+pnCAN2kHdpnqyI5cQ3y9HTrNn8TPCw\nMgtandMxixJsNSvRp4DmwrxPajxuvUnXcesQs4dIV+KJM/AyNT5iTbC0CEFXE6Oj\nG5Xk/gtdvZtX5bcuKoECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFDKWwCUtFnlDkPLpdSg5bsqLccIJMA0GCSqGSIb3\nDQEBCwUAA4IBAQCk0TxsEWgNOcB5gTq0ewrpLUNcs5uIyfyAHz03C9H0IIMvQrms\nQ/l/zdUE0xtmON/fYgnTnLS8bJeqHzl3QFxoN00gM/I5YqJkjdCntCxy9c8CX59z\nRvRZnU3xYwXl5L1N0iDZgXq+bfQRF+kGfrd5ZSeLos3dmCU2hLRoxjPMofeV6oqW\nitYAPOO+PI/LB3wYw+iQ3Ea4r1WStgVuUSLGU8Tdya5dbI1lUogcoYKAH7rlAG4/\nR+hSPj4OWpYx4AWW42ZPM7Ebxu9WqFzj2MH2eTmu6hkbUjGRzwud0v6xZxbrB68O\nsvMsJUKVqmTqfHyaFj6JST8RhmZaX/ukdeb4\n-----END CERTIFICATE-----\n\n        namespacedefault\ufffd\ntoken\ufffdeyJhbGciOiJSUzI1NiIsImtpZCI6IjBTTVpLNWJ3UFlkRkZzT3R5c1d2WjR6bWVlVUE4ZTg2M1NfQWhSeEJNSXMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tbng1ZjUiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjU1OWRiNjg4LTIwZmEtNDYzMi04YTUyLWE3NDdhZjQ1YzUyMiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.mZc_dsUxfeg38r-vIEmSjUw4QpEGbm2JFfc0DO76VpnZowmf8CM6VOwjofbFAUy5m0hJgXW_iCQIP0Grwe6btr7efNruoQrJnnfx5kdZ6UDAYSaEBK2Y_dYF8fbwr4g4kDIWK2kHPqHsGN6V_AIgtxTX4OSfX88Kthk_DC2xgkDa9J1B4ur7u2g26_EUA89UnwCuDfMd29m7ZhAso5URMkZ9M9vIVc2g3dRdjiNIhKxflDqVGjZq0c4-uO7w4NqeZ6273ZnX-wg6-tIMi8RE5JdYFzGltnY1onbuE7mSAZpQ9AAajxSp-SlEWQ2Pn6Y5A84sYiPZV9fgC4OmzNGwTQ#kubernetes.io/service-account-token"\n'})}),"\n",(0,c.jsx)(r.p,{children:"its all unencrypted."}),"\n",(0,c.jsxs)(r.p,{children:["now create a new secret ",(0,c.jsx)(r.code,{children:"very-secure"})," : ",(0,c.jsx)(r.code,{children:"k create secret generic very-secure --from-literal cc=1234"})]}),"\n",(0,c.jsxs)(r.p,{children:["now try and read ",(0,c.jsx)(r.code,{children:"very-secure"})," from etcd"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'root@cks-master:/etc/systemd/system/kubelet.service.d# ETCDCTL_API=3 etcdctl --cert /etc/kubernetes/pki/apiserver-etcd-client.crt --key /etc/kubernetes/pki/apiserver-etcd-client.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/secrets/default/very-secure\n/registry/secrets/default/very-secure\n\ufffd\ufffdS\ufffdWK\ufffd)aescbc:v1:key1:!\ufffd\ufffd\ufffdD\ufffd#eH\ufffd Z\ufffd\'L"\ufffdg)GyQ(\ufffd\ufffdpi\ufffd-\ufffd\ufffd,\ufffd?\u0323\ufffd9\ufffd*\ufffdN\ufffd\ufffd\ufffd\ufffd6\ufffd\ufffd\nR\ufffd\ufffd<\ufffd \ufffd\ufffd\ufffd\ufffd\u0713\ufffd\ufffdT`4\ufffd\ufffd\ufffd\ufffdL\u42fbv\ufffd~\ufffd\ufffd\ufffd`1\ufffda\ufffd\ufffd\ufffdz\ufffdm>\ufffd$\ufffdv\u04fa\ufffd\ufffd)\u01e7\ufffd!q\ufffdk9\ufffd\ufffdqn\ufffd[\ufffd\ufffd\n                                                               \ufffd\ufffd$\ufffd\ufffd8d\ufffd\ufffd4\ufffd^\u0635+\ufffd\ufffdf\\\ufffd<"q\\af\ufffdC\ufffdnU\ufffd\ufffdn\ufffd\ufffd8\ufffd{\ufffd\u0100\ufffdp\ufffd\ufffdj(\ufffd\ufffd\ufffd-\ufffd\ufffdV\ufffdP9\u0409\ufffd\n'})}),"\n",(0,c.jsx)(r.p,{children:"BUT- we can still see the secret through API server, which is a good thing- its the gateway, and outside of this = encrypted."}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'root@cks-master:/etc/systemd/system/kubelet.service.d# k get secrets very-secure -oyaml\napiVersion: v1\ndata:\n  cc: MTIzNA==\nkind: Secret\nmetadata:\n  creationTimestamp: "2021-09-04T23:45:14Z"\n  name: very-secure\n  namespace: default\n  resourceVersion: "433676"\n  uid: 0ce36039-b49f-4170-bb33-87cc95956bc3\ntype: Opaque\n\nroot@cks-master:/etc/systemd/system/kubelet.service.d# echo MTIzNA== | base64 -d\n1234\n'})}),"\n",(0,c.jsxs)(r.p,{children:["re-test by commenting out the ",(0,c.jsx)(r.code,{children:"identity"})," provider from our ",(0,c.jsx)(r.code,{children:"ec.yaml"})," so there is not more plain-text option, and re-creating ALL the secrets."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"# restart api server\nroot@cks-master:/etc/kubernetes/manifests# mv kube-apiserver.yaml ..\nroot@cks-master:/etc/kubernetes/manifests# mv ../kube-apiserver.yaml .\n"})}),"\n",(0,c.jsx)(r.p,{children:"try look at secrets"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'root@cks-master:~# k get secretsError from server (InternalError): Internal error occurred: unable to transform key "/registry/secrets/default/default-token-nx5f5": no matching prefix found\n'})}),"\n",(0,c.jsx)(r.p,{children:"uncomment the identity provider an restart apiserver again!"}),"\n",(0,c.jsx)(r.p,{children:"BUT- the task is to encrypt ALL."}),"\n",(0,c.jsx)(r.p,{children:"solution:"}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:["add ",(0,c.jsx)(r.code,{children:"identity"})," back to get etcd working again with unencrypted secrets"]}),"\n",(0,c.jsx)(r.li,{children:"RE-CREATE all secrets, which will now create them encrypted."}),"\n",(0,c.jsxs)(r.li,{children:["comment out the ",(0,c.jsx)(r.code,{children:"identity"})," provider again"]}),"\n"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"# replace all secrets\nroot@cks-master:/etc/kubernetes/manifests# k get secrets -A -oyaml | kubectl replace -f -\nsecret/default-token-vz224 replaced\nsecret/default-token-vfkf6 replaced\nsecret/accessor-token-jzdtq replaced\nsecret/default-token-nx5f5 replaced\nsecret/secret1 replaced\nsecret/secret2 replaced\nsecret/secure-ingress replaced\nsecret/very-secure replaced\nsecret/default-token-s4pm8 replaced\nsecret/ingress-nginx-admission replaced\nsecret/ingress-nginx-admission-token-87grf replaced\nsecret/ingress-nginx-token-mqtsr replaced\nsecret/default-token-wjj9m replaced\nsecret/default-token-4xcrt replaced\nsecret/attachdetach-controller-token-x4dwp replaced\nsecret/bootstrap-signer-token-6svt8 replaced\nsecret/bootstrap-token-9208wf replaced\nsecret/certificate-controller-token-fx595 replaced\nsecret/clusterrole-aggregation-controller-token-w69k6 replaced\nsecret/coredns-token-cxnf8 replaced\nsecret/cronjob-controller-token-p74tz replaced\nsecret/daemon-set-controller-token-plxht replaced\nsecret/default-token-qr64v replaced\nsecret/deployment-controller-token-7htn8 replaced\nsecret/disruption-controller-token-mgbrv replaced\nsecret/endpoint-controller-token-2grs7 replaced\nsecret/endpointslice-controller-token-l8z9r replaced\nsecret/endpointslicemirroring-controller-token-rdcdz replaced\nsecret/ephemeral-volume-controller-token-ng626 replaced\nsecret/expand-controller-token-cr6jc replaced\nsecret/generic-garbage-collector-token-tkswv replaced\nsecret/horizontal-pod-autoscaler-token-tl7qk replaced\nsecret/job-controller-token-vjtrs replaced\nsecret/kube-proxy-token-99z7x replaced\nsecret/namespace-controller-token-c8fjm replaced\nsecret/node-controller-token-j6ms7 replaced\nsecret/persistent-volume-binder-token-dd7zn replaced\nsecret/pod-garbage-collector-token-j7j2h replaced\nsecret/pv-protection-controller-token-7qgz2 replaced\nsecret/pvc-protection-controller-token-2tv7t replaced\nsecret/replicaset-controller-token-nnbvv replaced\nsecret/replication-controller-token-9qfnb replaced\nsecret/resourcequota-controller-token-jhg7j replaced\nsecret/root-ca-cert-publisher-token-szqv9 replaced\nsecret/service-account-controller-token-d2wz7 replaced\nsecret/service-controller-token-vc8v7 replaced\nsecret/statefulset-controller-token-8dpqb replaced\nsecret/token-cleaner-token-x2n5g replaced\nsecret/ttl-after-finished-controller-token-skkr4 replaced\nsecret/ttl-controller-token-lbvkr replaced\nsecret/weave-net-token-q8tfq replaced\nsecret/default-token-fkxcr replaced\nsecret/kubernetes-dashboard-certs replaced\nsecret/kubernetes-dashboard-csrf replaced\nsecret/kubernetes-dashboard-key-holder replaced\nsecret/kubernetes-dashboard-token-d7f5b replaced\nsecret/default-token-qwhh6 replaced\n\n# test you can read via API but NOT via etcdctl\nk -n kube-system get secrets service-account-controller-token-d2wz7 -oyaml # works\n\nETCDCTL_API=3 etcdctl --cert /etc/kubernetes/pki/apiserver-etcd-client.crt --key /etc/kubernetes/pki/apiserver-etcd-client.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/secrets/kube-system/service-account-controller-token-d2wz7 # encrypted\n\n# re-comment out indentity and restart apiserver -- from now on all secrets are encrypted in etcd!\n"})}),"\n",(0,c.jsx)(r.h2,{id:"recap",children:"recap"}),"\n",(0,c.jsx)(r.p,{children:"configmaps vs secrets - keep them separate, secrets always need more security, configmaps not, so dont complicate configmaps with unnecessary encryption"}),"\n",(0,c.jsxs)(r.p,{children:["for PROD - the ",(0,c.jsx)(r.code,{children:"key"})," in the encryptionConfiguration better managed with a provider like ",(0,c.jsx)(r.code,{children:"kms"})," with hashicorp vault (wont be on exam)"]})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(i,{...e})}):i(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>l});var n=t(96540);const c={},s=n.createContext(c);function a(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);