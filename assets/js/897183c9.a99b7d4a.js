"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[3757],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var o=s(96540);const t={},c=o.createContext(t);function r(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(c.Provider,{value:n},e.children)}},83433:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"engineer/AWS/AWS-ECS-1Microservices","title":"AWS ECS Microservices Workshop - Container Orchestration and Service Architecture","description":"Complete AWS ECS microservices workshop covering container deployment, service mesh architecture, load balancing, and scalable microservice patterns on Amazon ECS.","source":"@site/docs/engineer/AWS/AWS-ECS-1Microservices.md","sourceDirName":"engineer/AWS","slug":"/engineer/AWS/AWS-ECS-1Microservices","permalink":"/docs/engineer/AWS/AWS-ECS-1Microservices","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/AWS/AWS-ECS-1Microservices.md","tags":[{"inline":true,"label":"aws","permalink":"/docs/tags/aws"},{"inline":true,"label":"ecs","permalink":"/docs/tags/ecs"},{"inline":true,"label":"microservices","permalink":"/docs/tags/microservices"},{"inline":true,"label":"containers","permalink":"/docs/tags/containers"},{"inline":true,"label":"workshop","permalink":"/docs/tags/workshop"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":3,"frontMatter":{"title":"AWS ECS Microservices Workshop - Container Orchestration and Service Architecture","description":"Complete AWS ECS microservices workshop covering container deployment, service mesh architecture, load balancing, and scalable microservice patterns on Amazon ECS.","keywords":["aws ecs","microservices","container orchestration","service architecture","ecs workshop","docker containers","service mesh"],"tags":["aws","ecs","microservices","containers","workshop"],"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"AWS EKS Networking Best Practices - VPC CNI and Container Networking","permalink":"/docs/engineer/AWS/AWS-EKS-Networking"},"next":{"title":"AWS Security Incident Response Guide - Cloud Security and Forensics","permalink":"/docs/engineer/AWS/aws-incident-response"}}');var t=s(74848),c=s(28453);const r={title:"AWS ECS Microservices Workshop - Container Orchestration and Service Architecture",description:"Complete AWS ECS microservices workshop covering container deployment, service mesh architecture, load balancing, and scalable microservice patterns on Amazon ECS.",keywords:["aws ecs","microservices","container orchestration","service architecture","ecs workshop","docker containers","service mesh"],tags:["aws","ecs","microservices","containers","workshop"],sidebar_position:3},a=void 0,i={},d=[{value:"Frontend",id:"frontend",level:2},{value:"Scale svc out",id:"scale-svc-out",level:3},{value:"Backend: NodeJS",id:"backend-nodejs",level:2},{value:"Backend: Crystal",id:"backend-crystal",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{title:"Workshop Links",type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["ECS Workshop: ",(0,t.jsx)(n.a,{href:"https://ecsworkshop.com/microservices/",children:"Microservices"})]}),"\n"]})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"I am running this from my local machine, with AWS creds and config setup with keys."})}),"\n",(0,t.jsxs)(n.p,{children:["Going the ",(0,t.jsx)(n.code,{children:"copilot"})," route."]}),"\n",(0,t.jsx)(n.p,{children:"Get the repo:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd ~/environment\ngit clone https://github.com/aws-containers/ecsdemo-platform\ngit clone https://github.com/aws-containers/ecsdemo-frontend\ngit clone https://github.com/aws-containers/ecsdemo-nodejs\ngit clone https://github.com/aws-containers/ecsdemo-crystal\n"})}),"\n",(0,t.jsxs)(n.p,{children:["ensure IAM ",(0,t.jsx)(n.code,{children:"service-linked"})," requirements met OR create them"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'aws iam get-role --role-name "AWSServiceRoleForElasticLoadBalancing" || aws iam create-service-linked-role --aws-service-name "elasticloadbalancing.amazonaws.com"\n\naws iam get-role --role-name "AWSServiceRoleForECS" || aws iam create-service-linked-role --aws-service-name "ecs.amazonaws.com"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"frontend",children:"Frontend"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd ~/ecsdemo-frontend\ncopilot init\n"})}),"\n",(0,t.jsx)(n.p,{children:"Answers:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"**Application name**: ecsmicroservices\n**Service Type**: Load Balanced Web Service\n**What do you want to name this Load Balanced Web Service**: ecsdemo-frontend\n**Dockerfile**: ./Dockerfile\n"})}),"\n",(0,t.jsxs)(n.p,{children:["don't deploy an environment yet, update the ",(0,t.jsx)(n.code,{children:"manifest.yml"})," file first"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'cat << EOF >> copilot/ecsdemo-frontend/manifest.yml\nvariables:\n  CRYSTAL_URL: "http://ecsdemo-crystal.test.ecsmicroservices.local:3000/crystal"\n  NODEJS_URL: "http://ecsdemo-nodejs.test.ecsmicroservices.local:3000"\nEOF\n'})}),"\n",(0,t.jsx)(n.p,{children:"get the git hash as the version number:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/ecsdemo-frontend \u276f git rev-parse --short=7 HEAD > code_hash.txt        \n~/ecsdemo-frontend \u276f cat code_hash.txt\ncb85859\n"})}),"\n",(0,t.jsx)(n.p,{children:"now deploy the env"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repositories/environment/ecsdemo-frontend on main !1 ?3 \u276f copilot svc deploy \nFound only one service, defaulting to: ecsdemo-frontend\nOnly found one option, defaulting to: test\nWARNING! Your password will be stored unencrypted in /home/rxhackk/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n[+] Building 141.4s (11/11) FINISHED                      docker:default\n => [internal] load build definition from Dockerfile                                                                              0.1s\n => => transferring dockerfile: 982B0.0s\n => [internal] load metadata for public.ecr.aws/bitnami/ruby:2.5                                                                  3.5s\n => [internal] load .dockerignore                         0.1s\n => => transferring context: 45B    0.0s\n => [1/6] FROM public.ecr.aws/bitnami/ruby:2.5@sha256:fb00ab79006927ea50bfc1a8ed08803ec7bf8dd54e3bbeeaed7a1871c275c288           15.6s\n => => resolve public.ecr.aws/bitnami/ruby:2.5@sha256:fb00ab79006927ea50bfc1a8ed08803ec7bf8dd54e3bbeeaed7a1871c275c288            0.0s\n => => sha256:a8ad656a84c0f35e8c5f29562233783cf66436154e0578f888663000ec9df848 767B / 767B                                        1.1s\n => => sha256:48991004b3242fd50f3e5733c92f35684b4af67ca557e9541963096396a21224 178.21MB / 178.21MB                                9.0s\n => => sha256:fb00ab79006927ea50bfc1a8ed08803ec7bf8dd54e3bbeeaed7a1871c275c288 1.57kB / 1.57kB                                    0.0s\n => => sha256:5172fb39c74054babc28b7a4573db3f56724374476c11ac81ec55a6f8c957178 4.41kB / 4.41kB                                    0.0s\n => => sha256:3cc1ae8ac7e05bd9e71d854824f5bd72c0e2e2843369ae2630f98d28f70affe9 26.72MB / 26.72MB                                  2.8s\n => => sha256:c9967730b13863b874328168d5d4e56d04ba88f27fb6e6b51d42c7ca8144ff93 10.10MB / 10.10MB                                  3.3s\n => => sha256:6e9279bed9c1992e48b771708e226ac95f246684e2623a2ae12997691e0d51d9 5.21kB / 5.21kB                                    3.7s\n => => extracting sha256:3cc1ae8ac7e05bd9e71d854824f5bd72c0e2e2843369ae2630f98d28f70affe9                                         1.1s\n => => sha256:b14c5e200b023ea379586337f24e50ab7c9a033c42b907205f9a9aa5f4682695 92B / 92B                                          4.3s\n => => extracting sha256:a8ad656a84c0f35e8c5f29562233783cf66436154e0578f888663000ec9df848                                         0.0s\n => => extracting sha256:48991004b3242fd50f3e5733c92f35684b4af67ca557e9541963096396a21224                                         4.3s\n => => extracting sha256:c9967730b13863b874328168d5d4e56d04ba88f27fb6e6b51d42c7ca8144ff93                                         0.8s\n => => extracting sha256:6e9279bed9c1992e48b771708e226ac95f246684e2623a2ae12997691e0d51d9                                         0.0s\n => => extracting sha256:b14c5e200b023ea379586337f24e50ab7c9a033c42b907205f9a9aa5f4682695                                         0.0s\n => [internal] load build context   0.1s\n => => transferring context: 1.80MB 0.0s\n => [2/6] COPY Gemfile Gemfile.lock /usr/src/app/                                                                                 0.2s\n => [3/6] WORKDIR /usr/src/app      0.1s\n => [4/6] RUN apt-get update && apt-get -y install iproute2 curl jq libgmp3-dev ruby-dev build-essential sqlite libsqlite3-dev python3 python3-pip &&     gem install bundler:1.17.3 &&     bundle install &&     pip3 insta  113.9s\n => [5/6] COPY . /usr/src/app       0.2s\n => [6/6] RUN chmod +x /usr/src/app/startup-cdk.sh                                                                                0.5s\n => exporting to image              7.2s\n => => exporting layers             7.2s\n => => writing image sha256:726042323e3a3a30cc008f589bdff274d3edf41c91f685dd7c9ce1ef3526e7ad                                      0.0s\n => => naming to REDACTED.dkr.ecr.us-east-1.amazonaws.com/ecsmicroservices/ecsdemo-frontend:latest                            0.0s\nThe push refers to repository [REDACTED.dkr.ecr.us-east-1.amazonaws.com/ecsmicroservices/ecsdemo-frontend]\n5f70bf18a086: Pushed \n66da57c7eee2: Pushed \nabe954d8444e: Pushed \n7608e2c087c3: Pushed \n097184cb5649: Pushed \nca58e20a1e0a: Pushed \nb8f1b3c1c4cb: Pushed \n958773801523: Pushed \ncaa232770d56: Pushed \n9da9c7071a76: Pushed \nlatest: digest: sha256:73624356fecc960bb59c20cbf356d2d06f7a1b5fc5c6691ed12f2e7fdd916618 size: 2618\n\u2714 Proposing infrastructure changes for stack ecsmicroservices-test-ecsdemo-frontend\n- Creating the infrastructure for stack ecsmicroservices-test-ecsdemo-frontend    [create complete]     [435.9s]\n  - An Addons CloudFormation Stack for your additional AWS resources              [create complete]     [245.5s]\n  - Service discovery for your services to communicate within the VPC             [create complete]     [0.0s]\n  - Update your environment's shared resources                                    [update complete]     [167.2s]\n    - A security group for your load balancer allowing HTTP traffic               [create complete]     [2.5s]\n    - An Application Load Balancer to distribute public traffic to your services  [create complete]     [158.7s]\n    - A load balancer listener to route HTTP traffic                              [create in progress]  [236.9s]\n  - An IAM role to update your environment stack                                  [create complete]     [16.8s]\n  - An IAM Role for the Fargate agent to make AWS API calls on your behalf        [create complete]     [16.8s]\n  - An HTTP listener rule for path `/` that forwards HTTP traffic to your tasks   [create complete]     [0.0s]\n  - A custom resource assigning priority for HTTP listener rules                  [create complete]     [0.0s]\n  - A CloudWatch log group to hold your service logs                              [create complete]     [9.6s]\n  - An IAM Role to describe load balancer rules for assigning a priority          [create complete]     [16.8s]\n  - An ECS service to run and maintain your tasks in the environment cluster      [create complete]     [165.3s]\n    Deployments                                                                                         \n               Revision  Rollout      Desired  Running  Failed  Pending                                          \n      PRIMARY  1         [completed]  1        1        0       0                                                \n  - A target group to connect the load balancer to your service on port 3000      [create complete]     [16.8s]\n  - An ECS task definition to group your containers and run them on ECS           [create complete]     [4.1s]\n  - An IAM role to control permissions for the containers in your tasks           [create complete]     [17.0s]\n\u2714 Deployed service ecsdemo-frontend.\nRecommended follow-up action:\n  - Your service is accessible at http://ecsmic-Publi-zaueLaa0sVQT-274480243.us-east-1.elb.amazonaws.com over the internet.\n~/Repositories/environment/ecsdemo-frontend on main !1 ?3 \u276f\n"})}),"\n",(0,t.jsx)(n.p,{children:"tried this command, doesn't work as per docs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repositories/environment/ecsdemo-frontend on main !1 ?3 \u276f copilot svc show -n ecsdemo-frontend --json | jq -r .routes[].url\n\nzsh: no matches found: .routes[].url\n"})}),"\n",(0,t.jsx)(n.p,{children:"this is the right command (r=raw format)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repositories/environment/ecsdemo-frontend on main !1 ?3 \u276f copilot svc show -n ecsdemo-frontend --json | jq  -r '.routes[].url'\nhttp://ecsmic-Publi-zaueLaa0sVQT-274480243.us-east-1.elb.amazonaws.com\"\n"})}),"\n",(0,t.jsx)(n.p,{children:"the full JSON output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'~/Repositories/environment/ecsdemo-frontend on main !1 ?3 \u276f copilot svc show -n ecsdemo-frontend --json | jq . \n{\n  "service": "ecsdemo-frontend",\n  "type": "Load Balanced Web Service",\n  "application": "ecsmicroservices",\n  "configurations": [\n    {\n      "environment": "test",\n      "port": "3000",\n      "cpu": "256",\n      "memory": "512",\n      "platform": "LINUX/X86_64",\n      "tasks": "1"\n    }\n  ],\n  "routes": [\n    {\n      "environment": "test",\n      "url": "http://ecsmic-Publi-zaueLaa0sVQT-274480243.us-east-1.elb.amazonaws.com"\n    }\n  ],\n  "serviceDiscovery": [\n    {\n      "environment": [\n        "test"\n      ],\n      "endpoint": "ecsdemo-frontend.test.ecsmicroservices.local:3000"\n    }\n  ],\n  "serviceConnect": [\n    {\n      "environment": [\n        "test"\n      ],\n      "endpoint": "ecsdemo-frontend:3000"\n    }\n  ],\n  "variables": [\n    {\n      "environment": "test",\n      "name": "COPILOT_SERVICE_DISCOVERY_ENDPOINT",\n      "value": "test.ecsmicroservices.local",\n      "container": "ecsdemo-frontend"\n    },\n    {\n      "environment": "test",\n      "name": "COPILOT_LB_DNS",\n      "value": "ecsmic-Publi-zaueLaa0sVQT-274480243.us-east-1.elb.amazonaws.com",\n      "container": "ecsdemo-frontend"\n    },\n    {\n      "environment": "test",\n      "name": "COPILOT_APPLICATION_NAME",\n      "value": "ecsmicroservices",\n      "container": "ecsdemo-frontend"\n    },\n    {\n      "environment": "test",\n      "name": "COPILOT_SERVICE_NAME",\n      "value": "ecsdemo-frontend",\n      "container": "ecsdemo-frontend"\n    },\n    {\n      "environment": "test",\n      "name": "COPILOT_ENVIRONMENT_NAME",\n      "value": "test",\n      "container": "ecsdemo-frontend"\n    }\n  ]\n}\n~/Repositories/environment/ecsdemo-frontend on main !1 ?3 \u276f\n'})}),"\n",(0,t.jsx)(n.h3,{id:"scale-svc-out",children:"Scale svc out"}),"\n",(0,t.jsxs)(n.p,{children:["edit ",(0,t.jsx)(n.code,{children:"manifest.yml"})," find the ",(0,t.jsx)(n.code,{children:"count"})," and set it from ",(0,t.jsx)(n.code,{children:"1"})," to ",(0,t.jsx)(n.code,{children:"3"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["run ",(0,t.jsx)(n.code,{children:"copilot svc deploy"}),"..."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repositories/environment/ecsdemo-frontend on main !1 ?3 \u276f copilot svc deploy                                                                                                                      took \uf252 44s at \uf017 17:10:29\nFound only one service, defaulting to: ecsdemo-frontend\nOnly found one option, defaulting to: test\nWARNING! Your password will be stored unencrypted in /home/rxhackk/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n[+] Building 5.9s (11/11) FINISHED                                                        docker:default\n => [internal] load build definition from Dockerfile                                                0.0s\n => => transferring dockerfile: 982B                                                                0.0s\n => [internal] load metadata for public.ecr.aws/bitnami/ruby:2.5                                    2.3s\n => [internal] load .dockerignore                                                                   0.0s\n => => transferring context: 45B                                                                    0.0s\n => [1/6] FROM public.ecr.aws/bitnami/ruby:2.5@sha256:fb00ab79006927ea50bfc1a8ed08803ec7bf8dd54e3bbeeaed7a1871c275c288                                                                                                          0.0s\n => [internal] load build context                                                                   0.0s\n => => transferring context: 10.47kB                                                                0.0s\n => CACHED [2/6] COPY Gemfile Gemfile.lock /usr/src/app/                                            0.0s\n => CACHED [3/6] WORKDIR /usr/src/app                                                               0.0s\n => CACHED [4/6] RUN apt-get update && apt-get -y install iproute2 curl jq libgmp3-dev ruby-dev build-essential sqlite libsqlite3-dev python3 python3-pip &&     gem install bundler:1.17.3 &&     bundle install &&     pip3   0.0s\n => [5/6] COPY . /usr/src/app                                                                       0.2s\n => [6/6] RUN chmod +x /usr/src/app/startup-cdk.sh                                                  0.5s\n => exporting to image                                                                              2.6s\n => => exporting layers                                                                             2.6s\n => => writing image sha256:700d90f515f2eaab2ce16850378ae16c53048ea3794550cc0fe418109a5c664f        0.0s\n => => naming to REDACTED.dkr.ecr.us-east-1.amazonaws.com/ecsmicroservices/ecsdemo-frontend:latest                                                                                                                          0.0s\nThe push refers to repository [REDACTED.dkr.ecr.us-east-1.amazonaws.com/ecsmicroservices/ecsdemo-frontend]\n5f70bf18a086: Layer already exists \n6ed319876ad1: Pushed \nabe954d8444e: Layer already exists \n7608e2c087c3: Layer already exists \n097184cb5649: Layer already exists \nca58e20a1e0a: Layer already exists \nb8f1b3c1c4cb: Layer already exists \n958773801523: Layer already exists \ncaa232770d56: Layer already exists \n9da9c7071a76: Layer already exists \nlatest: digest: sha256:8650ce8fdf433b90cf063d6e18b89501a9eb6a750defc27646d0adc88b932c6d size: 2618\n\u2714 Proposing infrastructure changes for stack ecsmicroservices-test-ecsdemo-frontend\n- Updating the infrastructure for stack ecsmicroservices-test-ecsdemo-frontend                         [update in progress]  [515.9s]\n- Updating the infrastructure for stack ecsmicroservices-test-ecsdemo-frontend                         [update in progress]  [543.8s]\n- Updating the infrastructure for stack ecsmicroservices-test-ecsdemo-frontend                         [update in progress]  [544.0s]\n- Updating the infrastructure for stack ecsmicroservices-test-ecsdemo-frontend                         [update in progress]  [544.1s]\n- Updating the infrastructure for stack ecsmicroservices-test-ecsdemo-frontend                         [update in progress]  [544.3s]\n- Updating the infrastructure for stack ecsmicroservices-test-ecsdemo-frontend                         [update in progress]  [544.4s]\n- Updating the infrastructure for stack ecsmicroservices-test-ecsdemo-frontend                         [update in progress]  [544.5s]\n- Updating the infrastructure for stack ecsmicroservices-test-ecsdemo-frontend                         [update complete]  [697.8s]\n  - An ECS service to run and maintain your tasks in the environment cluster                           [update complete]  [677.9s]\n    Deployments                                                                                                           \n               Revision  Rollout      Desired  Running  Failed  Pending \n      PRIMARY  2         [completed]  3        3        0       0       \n    Latest 1 stopped task                                                                                                 \n      TaskId    CurrentStatus  DesiredStatus                                                                                       \n      c8f78563  STOPPED        STOPPED                                                                                             \n       \n    \u2718 Latest 1 task stopped reason                                                                               \n      - [c8f78563]: Task failed ELB health checks in (target-group arn:aws:ela                                                     \n        sticloadbalancing:us-east-1:REDACTED:targetgroup/ecsmic-Targe-SMMV                                                     \n        QPCVRIBS/86a54506434cfa92)                                                                                                 \n       \n    Troubleshoot task stopped reason                                                                                      \n      1. You can run `copilot svc logs --previous` to see the logs of the last stopped task.                              \n      2. You can visit this article: https://repost.aws/knowledge-center/ecs-task-stopped.                                \n       \n    \u2718 Latest failure event                                                                                       \n      - (service ecsmicroservices-test-ecsdemo-frontend-Service-e3Q1Xu14Yc1V)                                                      \n        (port 3000) is unhealthy in (target-group arn:aws:elasticloadbalancing\n        :us-east-1:REDACTED:targetgroup/ecsmic-Targe-SMMVQPCVRIBS/86a54506                                                     \n        434cfa92) due to (reason Health checks failed).                                                                            \n  - An ECS task definition to group your containers and run them on ECS                                [delete complete]  [3.9s]\n\u2714 Deployed service ecsdemo-frontend.\nRecommended follow-up action:\n  - Your service is accessible at http://ecsmic-Publi-zaueLaa0sVQT-274480243.us-east-1.elb.amazonaws.com over the internet.\n"})}),"\n",(0,t.jsx)(n.p,{children:"all seems to be up & running. curious how I can check there are three services running now?"}),"\n",(0,t.jsx)(n.h2,{id:"backend-nodejs",children:"Backend: NodeJS"}),"\n",(0,t.jsx)(n.p,{children:"Follow same pattern as frontend, code hash etc, copilot init etc."}),"\n",(0,t.jsx)(n.p,{children:"I get down to the deploying environment, test, and get this error:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'~/R/en/ecsdemo-nodejs on main !1 \u276f copilot init                                                              at \uf017 17:30:15\nWelcome to the Copilot CLI! We\'re going to walk you through some questions\nto help you get set up with a containerized application on AWS. An application is a collection of\ncontainerized services that operate together.\n\nApplication name: ecsmicroservices\nWorkload type: Backend Service\nDockerfile: ./Dockerfile\nOk great, we\'ll set up a Backend Service named ecsdemo-nodejs in application ecsmicroservices.\n\n\u2714 Proposing infrastructure changes for stack ecsmicroservices-infrastructure-roles\n\u2714 The directory copilot will hold service manifests for application ecsmicroservices.\n\n\u2714 Wrote the manifest for service ecsdemo-nodejs at copilot/ecsdemo-nodejs/manifest.yml\nYour manifest contains configurations like your container size and port.\n\n- Update regional resources with stack set "ecsmicroservices-infrastructure"  [succeeded]           [9.6s]\n  - Update resources in region "us-east-1"                                    [update complete]     [4.3s]\n    - ECR container image repository for "ecsdemo-nodejs"                     [create in progress]  [3.7s]\nAll right, you\'re all set for local development.\nDeploy: Yes\nEnvironment: test\n\u2718 read manifest for environment "test": file /home/rxhackk/Repositories/environment/ecsdemo-nodejs/copilot/environments/test/manifest.yml does not exists\n'})}),"\n",(0,t.jsxs)(n.p,{children:["I resumed work on the project on my macbook, ",(0,t.jsx)(n.strong,{children:"deleted"})," the NodeJS service and did another ",(0,t.jsx)(n.code,{children:"init"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:' ~/R/AWSECS/ecsdemo-nodejs on main \u276f copilot svc delete --name ecsdemo-nodejs                              took \uf252 16s at \uf017 17:39:31\nApplication: ecsmicroservices\nSure? Yes\n- Update regional resources with stack set "ecsmicroservices-infrastructure"  [succeeded]                            [5.3s]\n- Update regional resources with stack set "ecsmicroservices-infrastructure"  [succeeded]        [5.3s]\n  - Update resources in region "us-east-1"                                    [update complete]  [2.1s]\n\n\u2714 Deleted service ecsdemo-nodejs from application ecsmicroservices.\nRecommended follow-up action:\n  - Run `copilot pipeline deploy` to update the corresponding pipeline if it exists.\n'})}),"\n",(0,t.jsx)(n.p,{children:"then reinit (remember this is a backend service)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"I had to delete it again as I chose the wrong type."}),"\n",(0,t.jsxs)(n.li,{children:["manually deleted the ",(0,t.jsx)(n.code,{children:"manifest.yaml"})," file ",(0,t.jsx)(n.code,{children:"rm copilot/ecsdemo-nodejs/manifest.jml"})]}),"\n",(0,t.jsx)(n.li,{children:"reinit and redeploy had specific commands, see below"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"re init:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~ /Repos/AWSECS/ecsdemo-nodejs on main ?1 \u276f copilot svc init --name ecsdemo-nodejs\nNote: It's best to run this command in the root of your workspace.\nService type: Backend Service\nDockerfile: ./Dockerfile\nNote: Architecture type arm64 has been detected. We will set platform 'linux/x86_64' instead. If you'd rather build and run as architecture type arm64, please change the 'platform' field in your workload manifest to 'linux/arm64'.\n\u2714 Wrote the manifest for service ecsdemo-nodejs at copilot/ecsdemo-nodejs/manifest.yml\nYour manifest contains configurations like your container size and port.\n\n- Update regional resources with stack set \"ecsmicroservices-infrastructure\"  [succeeded]        [12.9s]\n  - Update resources in region \"us-east-1\"                                    [update complete]  [8.8s]\n    - ECR container image repository for \"ecsdemo-nodejs\"                     [create complete]  [3.4s]\nRecommended follow-up actions:\n  - Update your manifest copilot/ecsdemo-nodejs/manifest.yml to change the defaults.\n  - Run `copilot svc deploy --name ecsdemo-nodejs --env test` to deploy your service to a test environment.\n"})}),"\n",(0,t.jsx)(n.p,{children:"deploy"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-nodejs on main ?1 \u276f copilot svc deploy --name ecsdemo-nodejs --env test         \nLogin Succeeded\n[+] Building 1.8s (10/10) FINISHED                                                                 docker:orbstack\n => [internal] load build definition from Dockerfile                                                          0.0s\n => => transferring dockerfile: 785B            0.0s\n => [internal] load metadata for public.ecr.aws/docker/library/ubuntu:18.04                                   1.6s\n => [internal] load .dockerignore               0.0s\n => => transferring context: 72B                0.0s\n => [1/5] FROM public.ecr.aws/docker/library/ubuntu:18.04@sha256:152dc042452c496007f07ca9127571cb9c29697f42acbfad72324b2bb2e43c98                                           0.0s\n => [internal] load build context               0.0s\n => => transferring context: 4.79kB             0.0s\n => CACHED [2/5] WORKDIR /usr/src/app           0.0s\n => CACHED [3/5] COPY package*.json ./          0.0s\n => CACHED [4/5] RUN apt-get update &&    apt install -y curl jq bash nodejs npm python3 python3-pip &&     pip3 install awscli netaddr &&     npm install &&    apt-get p  0.0s\n => [5/5] COPY . .                              0.0s\n => exporting to image                          0.0s\n => => exporting layers                         0.0s\n => => writing image sha256:6f649f55a0053d7060396369d4c22aab5c53ec522cf43ad4d54bdddda8206be8                  0.0s\n => => naming to REDACTED.dkr.ecr.us-east-1.amazonaws.com/ecsmicroservices/ecsdemo-nodejs:latest          0.0s\nThe push refers to repository [REDACTED.dkr.ecr.us-east-1.amazonaws.com/ecsmicroservices/ecsdemo-nodejs]\nb78718e1942c: Pushed \ncd2559c3eb84: Pushed \nebe3b449c65c: Pushed \n69440ab5b9c3: Pushed \n548a79621a42: Pushed \nlatest: digest: sha256:47812e81534ec2f96cf9bb29669be5922d84f837a610b1b11de517383510f504 size: 1366\n\u2714 Proposing infrastructure changes for stack ecsmicroservices-test-ecsdemo-nodejs\n- Creating the infrastructure for stack ecsmicroservices-test-ecsdemo-nodejs  [create complete]  [239.4s]\n  - Service discovery for your services to communicate within the VPC         [create complete]  [2.8s]\n  - Update your environment's shared resources                                [create complete]  [3.6s]\n  - An IAM role to update your environment stack                              [create complete]  [15.4s]\n  - An IAM Role for the Fargate agent to make AWS API calls on your behalf    [create complete]  [15.4s]\n  - A CloudWatch log group to hold your service logs                          [create complete]  [4.4s]\n  - An ECS service to run and maintain your tasks in the environment cluster  [create complete]  [207.9s]\n    Deployments                    \n               Revision  Rollout      Desired  Running  Failed  Pending                                   \n      PRIMARY  2         [completed]  1        1        0       0                                         \n  - An ECS task definition to group your containers and run them on ECS       [create complete]  [0.0s]\n  - An IAM role to control permissions for the containers in your tasks       [create complete]  [15.4s]\n\u2714 Deployed service ecsdemo-nodejs.\nRecommended follow-up action:\n  - Your service is accessible at ecsdemo-nodejs:3000 with service connect.\n"})}),"\n",(0,t.jsx)(n.p,{children:"so far so good:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-nodejs on main ?1 \u276f copilot env show env -n test                                                                      took \uf252 5m 13s at \uf017 18:25:49\nAbout\n\n  Name        test\n  Region      us-east-1\n  Account ID  833580871776\n\nWorkloads\n\n  Name              Type\n  ----              ----\n  ecsdemo-frontend  Load Balanced Web Service\n  ecsdemo-nodejs    Backend Service\n\nTags\n\n  Key                  Value\n  ---                  -----\n  copilot-application  ecsmicroservices\n  copilot-environment  test\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:"Where's my frontend URL?"}),(0,t.jsx)(n.p,{children:"Run this command to get all details:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'~/R/A/ecsdemo-nodejs on main ?1 \u276f copilot svc show                                                                       at \uf017 18:31:59\nService name: ecsdemo-frontend\nAbout\n\n  Application  ecsmicroservices\n  Name         ecsdemo-frontend\n  Type         Load Balanced Web Service\n\nConfigurations\n\n  Environment  Tasks     CPU (vCPU)  Memory (MiB)  Platform      Port\n  -----------  -----     ----------  ------------  --------      ----\n  test         3         0.25        512           LINUX/X86_64  3000\n\nRoutes\n\n  Environment  URL\n  -----------  ---\n  test         http://ecsmic-Publi-zaueLaa0sVQT-274480243.us-east-1.elb.amazonaws.com\n\nInternal Service Endpoints\n\n  Endpoint                                           Environment  Type\n  --------                                           -----------  ----\n  ecsdemo-frontend:3000                              test         Service Connect\n  ecsdemo-frontend.test.ecsmicroservices.local:3000  test         Service Discovery\n\nVariables\n\n  Name                                Container         Environment  Value\n  ----                                ---------         -----------  -----\n  COPILOT_APPLICATION_NAME            ecsdemo-frontend  test         ecsmicroservices\n  COPILOT_ENVIRONMENT_NAME              "                 "          test\n  COPILOT_LB_DNS                        "                 "          ecsmic-Publi-zaueLaa0sVQT-274480243.us-east-1.elb.amazonaws.com\n  COPILOT_SERVICE_DISCOVERY_ENDPOINT    "                 "          test.ecsmicroservices.local\n  COPILOT_SERVICE_NAME                  "                 "          ecsdemo-frontend\n'})})]}),"\n",(0,t.jsxs)(n.p,{children:["scale out to 3 tasks by editing the ",(0,t.jsx)(n.code,{children:"count"})," in ",(0,t.jsx)(n.code,{children:"manifest.yml"}),", then check"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/R/A/ecsdemo-nodejs on main ?1 \u276f copilot svc status -n ecsdemo-nodejs                                        took \uf252 27s at \uf017 10:42:32\n\necsdemo-nodejs found only in environment test\nTask Summary\n\n  Running   \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  3/3 desired tasks are running\n  Health    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  3/3 passes container health checks\n\nTasks\n\n  ID        Status      Revision    Started At     Cont. Health\n  --        ------      --------    ----------     ------------\n  7a141ab0  RUNNING     3           6 minutes ago  HEALTHY\n  a26f0cda  RUNNING     3           6 minutes ago  HEALTHY\n  e853449c  RUNNING     3           6 minutes ago  HEALTHY\n"})}),"\n",(0,t.jsx)(n.h2,{id:"backend-crystal",children:"Backend: Crystal"}),"\n",(0,t.jsxs)(n.p,{children:["Do exactly the same as ",(0,t.jsx)(n.a,{href:"#backend-nodejs",children:"NodeJS"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"git rev-parse --short=7 HEAD > code_hash.txt"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"copilot init"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"copilot svc deploy --name ecsdemo-crystal --env test"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["then check with ",(0,t.jsx)(n.code,{children:"copilot svc status"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"~/Repos/AWSECS/ecsdemo-crystal on main !1 ?1 \u276f copilot svc status                                                        at \uf017 11:05:49\n\nService: ecsdemo-crystal\nTask Summary\n\n  Running   \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  1/1 desired tasks are running\n  Health    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  1/1 passes container health checks\n\nTasks\n\n  ID        Status      Revision    Started At      Cont. Health\n  --        ------      --------    ----------      ------------\n  ab2c09c5  RUNNING     1           54 minutes ago  HEALTHY\n"})})]})}function m(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);