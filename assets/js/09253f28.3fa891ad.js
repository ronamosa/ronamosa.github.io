"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[5940],{28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var r=o(96540);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}},41646:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"engineer/LAB/proxmox-packer-vm","title":"Create Cloud-Init VM Templates with Packer on Proxmox","description":"Complete guide to automate Proxmox VM template creation using Packer and cloud-init for Infrastructure as Code home lab setup. Includes troubleshooting and best practices.","source":"@site/docs/engineer/LAB/proxmox-packer-vm.md","sourceDirName":"engineer/LAB","slug":"/engineer/LAB/proxmox-packer-vm","permalink":"/docs/engineer/LAB/proxmox-packer-vm","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/LAB/proxmox-packer-vm.md","tags":[{"inline":true,"label":"proxmox","permalink":"/docs/tags/proxmox"},{"inline":true,"label":"packer","permalink":"/docs/tags/packer"},{"inline":true,"label":"iac","permalink":"/docs/tags/iac"},{"inline":true,"label":"virtualization","permalink":"/docs/tags/virtualization"},{"inline":true,"label":"home-lab","permalink":"/docs/tags/home-lab"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":1,"frontMatter":{"title":"Create Cloud-Init VM Templates with Packer on Proxmox","description":"Complete guide to automate Proxmox VM template creation using Packer and cloud-init for Infrastructure as Code home lab setup. Includes troubleshooting and best practices.","keywords":["proxmox","packer","cloud-init","vm template","infrastructure as code","home lab","virtualization","automation"],"tags":["proxmox","packer","iac","virtualization","home-lab"],"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Pi-hole DNS Setup - Network-wide Ad Blocking and DNS Filtering","permalink":"/docs/engineer/LAB/pihole-dns"},"next":{"title":"Automate Proxmox VM Deployment with Ansible Cloud-Init Playbooks","permalink":"/docs/engineer/LAB/proxmox-cloudinit"}}');var t=o(74848),s=o(28453);const i={title:"Create Cloud-Init VM Templates with Packer on Proxmox",description:"Complete guide to automate Proxmox VM template creation using Packer and cloud-init for Infrastructure as Code home lab setup. Includes troubleshooting and best practices.",keywords:["proxmox","packer","cloud-init","vm template","infrastructure as code","home lab","virtualization","automation"],tags:["proxmox","packer","iac","virtualization","home-lab"],sidebar_position:1},a=void 0,l={},c=[{value:"Related Proxmox Guides",id:"related-proxmox-guides",level:2},{value:"Packer Process",id:"packer-process",level:2},{value:"Key Concept",id:"key-concept",level:2},{value:"Proxmox Setup",id:"proxmox-setup",level:2},{value:"Create A Packer user",id:"create-a-packer-user",level:3},{value:"Create API Token",id:"create-api-token",level:3},{value:"Packer Folder Structure",id:"packer-folder-structure",level:2},{value:"variables.pkr.hcl",id:"variablespkrhcl",level:3},{value:"ubuntu-server-focal.pkr.hcl",id:"ubuntu-server-focalpkrhcl",level:3},{value:"http/user-data",id:"httpuser-data",level:3},{value:"Deploy",id:"deploy",level:2},{value:"packer validate",id:"packer-validate",level:3},{value:"packer build",id:"packer-build",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Timeout waiting for SSH",id:"timeout-waiting-for-ssh",level:3},{value:"locked out of vm",id:"locked-out-of-vm",level:3},{value:"reverse shell qm",id:"reverse-shell-qm",level:3},{value:"References",id:"references",level:2},{value:"Appendix",id:"appendix",level:2},{value:"cloud-config Identity",id:"cloud-config-identity",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["I wanted to setup IaC for my home lab Proxmox server to create VM templates first using Packer, and then Terraform for deploying 3-node K8s clusters for demos and learning. I originally followed ",(0,t.jsx)(n.a,{href:"https://www.youtube.com/watch?v=1nf3WOEFq1Y",children:'"Christian Lempa"'})," video and ",(0,t.jsx)(n.a,{href:"https://github.com/ChristianLempa/boilerplates/tree/main/packer/proxmox",children:"boilerplates"}),", but couldn't get them to work so went on a long winding journey trying different configs and reading up on cloud-config, autoinstall and read a bunch of other blogs."]}),"\n",(0,t.jsx)(n.p,{children:"I got it to finally work, which came back to almost the original configs by Christian, but with a lot more understanding."}),"\n",(0,t.jsx)(n.h2,{id:"related-proxmox-guides",children:"Related Proxmox Guides"}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udcda ",(0,t.jsx)(n.strong,{children:"Complete Proxmox Workflow"}),": This guide is part of a comprehensive Proxmox automation series:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Next Step"}),": ",(0,t.jsx)(n.a,{href:"./proxmox-cloudinit",children:"Automate VM Deployment with Ansible"})," - Deploy VMs from your templates using Ansible playbooks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Advanced"}),": ",(0,t.jsx)(n.a,{href:"./proxmox-terraform",children:"Proxmox Infrastructure with Terraform"})," - Orchestrate entire infrastructure deployments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Troubleshooting"}),": ",(0,t.jsx)(n.a,{href:"./proxmox-lvm-mount",children:"Mount VM Logical Volumes"})," - Direct filesystem access for debugging"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Complete Collection"}),": ",(0,t.jsx)(n.a,{href:"./proxmox-hub",children:"Proxmox Virtualization Hub"})," - All Proxmox guides and best practices"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["\ud83c\udfe0 ",(0,t.jsx)(n.strong,{children:"Home Lab Integration"}),": ",(0,t.jsx)(n.a,{href:"./home-lab-hub",children:"Home Lab Infrastructure Hub"})," - Complete home lab setup with networking and automation"]}),"\n",(0,t.jsx)(n.h2,{id:"packer-process",children:"Packer Process"}),"\n",(0,t.jsx)(n.p,{children:"This is what the process looks like in a diagram as I understand it:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Packer Proxmox VM creation process flow diagram showing Packer API calls, VM creation, cloud-init configuration, and template conversion",src:o(83611).A+"",width:"690",height:"376"})}),"\n",(0,t.jsx)(n.p,{children:"These are the steps:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"packer"})," calls proxmox endpoint, using API Token (",(0,t.jsx)(n.code,{children:"variables.pkr.hcl"}),") and a VM template definition file (",(0,t.jsx)(n.code,{children:"ubuntu-server-focal.pkr.hcl"}),"), and then ",(0,t.jsx)(n.code,{children:"WAIT"})," for ",(0,t.jsx)(n.code,{children:"SSH to become available..."})]}),"\n",(0,t.jsx)(n.li,{children:"a VM is create on proxmox"}),"\n",(0,t.jsxs)(n.li,{children:["the VM pulls down ",(0,t.jsx)(n.code,{children:"NFS-SERVER:iso/ubuntu-20.04.3-live-server-amd64.iso"})," and begins the install"]}),"\n",(0,t.jsxs)(n.li,{children:["with ",(0,t.jsx)(n.code,{children:"cloud-init=true"})," the VM will boot and run the ",(0,t.jsx)(n.code,{children:"boot_command"})," to pull down the initial configuration for the blank VM"]}),"\n",(0,t.jsxs)(n.li,{children:["packer will start a web server on the client machine, to serve the ",(0,t.jsx)(n.code,{children:"http/user-data"})," file for the proxmox VM to download"]}),"\n",(0,t.jsxs)(n.li,{children:["this line ",(0,t.jsx)(n.code,{children:"autoinstall ds=nocloud-net;s=http://\\{\\{ .HTTPIP \\}\\}:\\{\\{ .HTTPPort \\}\\}/"})," in the ",(0,t.jsx)(n.code,{children:"boot_command"})," tells the VM where to get the init configs"]}),"\n",(0,t.jsxs)(n.li,{children:["the ",(0,t.jsx)(n.code,{children:"http/user-data"})," config will install openssh, and create user ",(0,t.jsx)(n.code,{children:"rxhackk"})," with public key auth enabled."]}),"\n",(0,t.jsx)(n.li,{children:"when the VM finishes intial install, it will reboot."}),"\n",(0,t.jsxs)(n.li,{children:["once rebooted, ",(0,t.jsx)(n.code,{children:"packer"})," will ssh into the newly created, rebooted VM, and run the commanmds in ",(0,t.jsx)(n.code,{children:'provisioner "shell" { inline =['})," (or at least this is what I think it's doing after the reboot and requies a working ssh connection)"]}),"\n",(0,t.jsx)(n.li,{children:'when commands are finished, proxmox shuts down the completed VM and converts it into "template" format.'}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-concept",children:"Key Concept"}),"\n",(0,t.jsxs)(n.p,{children:["The key thing to understand in the setup, is which ssh or username settings are to be used where, if you mix that up, the you mix up the steps in the diagram and the packer process runs into authN issues with wrong pub_key, or ",(0,t.jsx)(n.code,{children:"sudo -S"})," that needs an interactive session."]}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"http/user-data"})," this is where cloud-init will pull in this config, install openssh and configure it for no root access, and public key authN:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"  ssh:\n    install-server: true\n    allow-pw: true\n    disable_root: true\n    ssh_quiet_keygen: true\n    allow_public_ssh_keys: true\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Further down in ",(0,t.jsx)(n.code,{children:"http/user-data"})," you configure the user that's going inside the template VM. This is essentially an admin user that will be used to set some things up after the reboot. Note the ",(0,t.jsx)(n.code,{children:"sudo"})," config to allow this user to run the ",(0,t.jsx)(n.code,{children:"inline"})," commands in the ",(0,t.jsx)(n.code,{children:"ubuntu-server-focal.pkr.hcl"})," file that needs root privs:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"  user-data:\n    package_upgrade: false\n    timezone: Pacific/Auckland\n    users:\n      - name: rxhackk\n        groups: [adm, sudo]\n        lock-passwd: false\n        sudo: ALL=(ALL) NOPASSWD:ALL\n        shell: /bin/bash\n        ssh_authorized_keys:\n          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDqGjvb1c8rfv2bYNnQaRn8ggOBAUhK5jUhZUTr3dEgZDKl88leX5yBG1RWQOfc/ka/rlv6VrjuwRjy+EB1f98L9bU4JklM+/6iNqka57wrQmWIo852wK7shoDdbz55vIjdcw9S6ok11EYI39FNlVex0IYbhOlEoh/M1b0s= rxhackk@Computer\n"})}),"\n",(0,t.jsxs)(n.p,{children:["That ",(0,t.jsx)(n.code,{children:"ssh_authorized_keys"})," is the public key ",(0,t.jsx)(n.code,{children:"~/.ssh/id_rsa.pub"})," for our user rxhackk on the packer client machine."]}),"\n",(0,t.jsxs)(n.p,{children:["And finally, to tie it all together, in ",(0,t.jsx)(n.code,{children:"ubuntu-server-focal.pkr.hcl"})," we specify the user we setup in ",(0,t.jsx)(n.code,{children:"user-data"})," as the user to SSH to the VM post install and after the reboot, to finish the template setup:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'    # PACKER SSH Settings\n    ssh_username = "rxhackk"\n    ssh_private_key_file = "~/.ssh/id_rsa"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"proxmox-setup",children:"Proxmox Setup"}),"\n",(0,t.jsx)(n.h3,{id:"create-a-packer-user",children:"Create A Packer user"}),"\n",(0,t.jsx)(n.p,{children:"Trying to follow security best practices at all times, we want a user with \"least privilege\" access to the proxmox API to do what's needed to setup VM and no more. I'm just noting down the steps I followed here and it's not a comprehensive step-by-step of the user setup process."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["login to your proxmox web GUI as ",(0,t.jsx)(n.code,{children:"root"})]}),"\n",(0,t.jsx)(n.li,{children:"add packer user (ve)"}),"\n",(0,t.jsx)(n.li,{children:"create group Packer"}),"\n",(0,t.jsx)(n.li,{children:"add Group Permissions (PVEAdmin) to group Packer"}),"\n",(0,t.jsx)(n.li,{children:"add user packer to group Packer"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"create-api-token",children:"Create API Token"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["login to your proxmox web GUI as ",(0,t.jsx)(n.code,{children:"root"})]}),"\n",(0,t.jsxs)(n.li,{children:["Use new ",(0,t.jsx)(n.code,{children:"packer"})," user, API Token, no expiry, copy secret."]}),"\n",(0,t.jsxs)(n.li,{children:["ensure ",(0,t.jsx)(n.code,{children:"Privilege Separation"})," is not checked, otherwise this token doesn't get the packer users group permissions."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["update file ",(0,t.jsx)(n.code,{children:"proxmox-devops/packer/proxmox/variables.pkr.hcl"})," with creds."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'# Your Proxmox IP Address\nproxmox_api_url = "https://{proxmox.hostname}:8006/api2/json"\n\n# API Token ID\nproxmox_api_token_id = "packer@pve!packer"\n\n# API Token Secret\nproxmox_api_token_secret = "{token_goes_here}"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"packer-folder-structure",children:"Packer Folder Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The following folders are found in Christian Lempa's packer vm boilerplates repo here: ",(0,t.jsx)(n.a,{href:"https://github.com/ChristianLempa/boilerplates/tree/main/packer/proxmox",children:"https://github.com/ChristianLempa/boilerplates/tree/main/packer/proxmox"})]}),"\n",(0,t.jsxs)(n.p,{children:["Each OS VM template folder, e.g. ",(0,t.jsx)(n.code,{children:"ubuntu-server-focal"})," laid out like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\u2514\u2500\u2500 ubuntu-server-focal\n    \u251c\u2500\u2500 files\n    \u2502   \u2514\u2500\u2500 99-pve.cfg\n    \u251c\u2500\u2500 http\n    \u2502   \u251c\u2500\u2500 meta-data\n    \u2502   \u2514\u2500\u2500 user-data\n    \u251c\u2500\u2500 ubuntu-server-focal.pkr.hcl\n    \u2514\u2500\u2500 variables.pkr.hcl\n"})}),"\n",(0,t.jsx)(n.h3,{id:"variablespkrhcl",children:"variables.pkr.hcl"}),"\n",(0,t.jsx)(n.p,{children:"This variables file holds our creds, and presumably other vars to inject into our vm template below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'proxmox_api_url = "https://$\\{proxmox.host}:8006/api2/json"\nproxmox_api_token_id = "packer@pve!packer"\nproxmox_api_token_secret = "1692cd56-e9aa-413e-9637-84debaa9eff7"\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"I'm not sold this is the best format after seeing JSON based configs in some blogs that seem a lot simpler."})}),"\n",(0,t.jsx)(n.h3,{id:"ubuntu-server-focalpkrhcl",children:"ubuntu-server-focal.pkr.hcl"}),"\n",(0,t.jsxs)(n.p,{children:["This is our VM template definition file, note the ",(0,t.jsx)(n.code,{children:"source"})," resource feeds the ",(0,t.jsx)(n.code,{children:"build"})," process"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'# Ubuntu Server Focal\n# ---\n# Packer Template to create an Ubuntu Server (Focal) on Proxmox\n\n# Variable Definitions\nvariable "proxmox_api_url" {\n    type = string\n}\n\nvariable "proxmox_api_token_id" {\n    type = string\n}\n\nvariable "proxmox_api_token_secret" {\n    type = string\n    sensitive = true\n}\n\n# Resource Definition for the VM Template\nsource "proxmox" "ubuntu-server-focal-template" {\n\n    # Proxmox Connection Settings\n    proxmox_url = "$\\{var.proxmox_api_url}"\n    username = "$\\{var.proxmox_api_token_id}"\n    token = "$\\{var.proxmox_api_token_secret}"\n    insecure_skip_tls_verify = true\n\n    # VM General Settings\n    node = "pve1"\n    vm_id = "500"\n    vm_name = "ubuntu-server-focal-template"\n    template_description = "Ubuntu Server Focal (22.04) Image"\n\n    # VM OS Settings\n    # (Option 1) Local ISO File\n    iso_file = "NFS-SERVER:iso/ubuntu-20.04.3-live-server-amd64.iso"\n\n    # - or -\n    # (Option 2) Download ISO\n    # iso_url = "https://releases.ubuntu.com/20.04/ubuntu-20.04.3-live-server-amd64.iso"\n    # iso_checksum = "f8e3086f3cea0fb3fefb29937ab5ed9d19e767079633960ccb50e76153effc98"\n\n    iso_storage_pool = "local"\n    unmount_iso = true\n\n    # VM System Settings\n    qemu_agent = true\n\n    # VM Hard Disk Settings\n    scsi_controller = "virtio-scsi-pci"\n\n    disks {\n        disk_size = "20G"\n        format = "raw"\n        storage_pool = "local-lvm"\n        storage_pool_type = "lvm"\n        type = "virtio"\n    }\n\n    # VM CPU Settings\n    cores = "1"\n\n    # VM Memory Settings\n    memory = "4096"\n\n    # VM Network Settings\n    network_adapters {\n        model = "virtio"\n        bridge = "vmbr0"\n        firewall = "false"\n    }\n\n    # VM Cloud-Init Settings\n    cloud_init = true\n    cloud_init_storage_pool = "local-lvm"\n\n    # PACKER Boot Commands\n    boot_command = [\n        "<esc /><wait /><esc /><wait />",\n        "<f6 /><wait /><esc /><wait />",\n        "<bs /><bs /><bs /><bs /><bs />",\n        "autoinstall ds=nocloud-net;s=http://\\{\\{ .HTTPIP \\}\\}:\\{\\{ .HTTPPort \\}\\}/ ",\n        "--- <enter />"\n    ]\n    boot = "c"\n    boot_wait = "5s"\n\n    # PACKER Autoinstall Settings\n    http_directory = "http"\n    http_bind_address = "172.16.2.209"\n    http_port_min = 8802\n    http_port_max = 8802\n\n    # PACKER SSH Settings\n    ssh_username = "rxhackk"\n    ssh_private_key_file = "~/.ssh/id_rsa"\n\n    # Raise the timeout, when installation takes longer\n    ssh_timeout = "55m"\n}\n\n# Build Definition to create the VM Template\nbuild {\n\n    name = "ubuntu-server-focal"\n    sources = ["source.proxmox.ubuntu-server-focal-template"]\n\n    # Provisioning the VM Template for Cloud-Init Integration in Proxmox #1\n    provisioner "shell" {\n        inline = [\n            "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo \'Waiting for cloud-init...\'; sleep 1; done",\n            "sudo rm /etc/ssh/ssh_host_*",\n            "sudo truncate -s 0 /etc/machine-id",\n            "sudo apt -y autoremove --purge",\n            "sudo apt -y clean",\n            "sudo apt -y autoclean",\n            "sudo cloud-init clean",\n            "sudo rm -f /etc/cloud/cloud.cfg.d/subiquity-disable-cloudinit-networking.cfg",\n            "sudo sync"\n        ]\n    }\n\n    # Provisioning the VM Template for Cloud-Init Integration in Proxmox #2\n    provisioner "file" {\n        source = "files/99-pve.cfg"\n        destination = "/tmp/99-pve.cfg"\n    }\n\n    # Provisioning the VM Template for Cloud-Init Integration in Proxmox #3\n    provisioner "shell" {\n        inline = [ "sudo cp /tmp/99-pve.cfg /etc/cloud/cloud.cfg.d/99-pve.cfg" ]\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"httpuser-data",children:"http/user-data"}),"\n",(0,t.jsxs)(n.p,{children:["Packer will run a webserver for the proxmox host to connect to and download the following ",(0,t.jsx)(n.code,{children:"user-data"})," file to configure cloud-init for the new template vm."]}),"\n",(0,t.jsxs)(n.p,{children:["This version creates no default user, but sets up my own personal user under ",(0,t.jsx)(n.code,{children:"user-data"})," with authorized keys (pub), and this user will correspond to the ",(0,t.jsx)(n.code,{children:"ssh_username"})," and ",(0,t.jsx)(n.code,{children:"ssh_password"})," in ",(0,t.jsx)(n.code,{children:"ubuntu-server-focal.pkr.hcl"})," to be used by packer to SSH and run the ",(0,t.jsx)(n.code,{children:"inline"})," statement:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"#cloud-config\nautoinstall:\n  version: 1\n  locale: en_US\n  keyboard:\n    layout: us\n  updates: security\n  apt:\n    disable_suites: [security]\n  ssh:\n    install-server: true\n    allow-pw: true\n    disable_root: true\n    ssh_quiet_keygen: true\n    allow_public_ssh_keys: true\n  packages:\n    - qemu-guest-agent\n    - sudo\n  storage:\n    layout:\n      name: direct\n    swap:\n      size: 0\n  user-data:\n    package_upgrade: false\n    timezone: Pacific/Auckland\n    users:\n      - name: rxhackk\n        groups: [adm, sudo]\n        lock-passwd: false\n        sudo: ALL=(ALL) NOPASSWD:ALL\n        shell: /bin/bash\n        ssh_authorized_keys:\n          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDqGjvb1c8rfv2bYNnQaRn8ggOBAUhK5jUhZUTr3dEgZDKl88leX5yBG1RWQOfc/ka/rlv6VrjuwRjy+EB1f98L9bU4JklM+/6iNqka57wrQmWIo852wK7shoDdbz55vIjdcw9S6oVx1EYI39FNlVex0IYbhOlEoh/M1b0s= rxhackk@Computer\n"})}),"\n",(0,t.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,t.jsx)(n.p,{children:"Now nothing left to it, but to do it."}),"\n",(0,t.jsx)(n.h3,{id:"packer-validate",children:"packer validate"}),"\n",(0,t.jsx)(n.p,{children:"Check your configs & definitions are valid:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"packer validate -var-file='./variables.pkr.hcl' ./ubuntu-server-focal.pkr.hcl"})}),"\n",(0,t.jsx)(n.h3,{id:"packer-build",children:"packer build"}),"\n",(0,t.jsx)(n.p,{children:"Build the template:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"packer build -var-file='./variables.pkr.hcl' ./ubuntu-server-focal.pkr.hcl"})}),"\n",(0,t.jsx)(n.admonition,{title:"Video",type:"info",children:(0,t.jsx)(n.p,{children:"TBC: I will screen record the process and embed it here."})}),"\n",(0,t.jsx)(n.p,{children:"This is what success looks like:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Packer build success output showing successful Proxmox VM template creation with cloud-init configuration",src:o(97593).A+"",width:"742",height:"119"})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.admonition,{title:"ssh settings",type:"warning",children:(0,t.jsxs)(n.p,{children:["Most of the issues I ran into was because the ssh details i.e. the openssh server, the ssh user in ",(0,t.jsx)(n.code,{children:"http/user-data"})," as well as the template definition were all mismatched at different stages. The fixes were getting these parts correct because you can get indirectly related issues as well."]})}),"\n",(0,t.jsx)(n.h3,{id:"timeout-waiting-for-ssh",children:"Timeout waiting for SSH"}),"\n",(0,t.jsx)(n.p,{children:"I kept getting this error"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\uf31b \uf07c ~/R/proxmox-devops/packer/proxmox/ubuntu-server-focal \u276f packer build -var-file='../variables.pkr.hcl' ./ubuntu-server-focal.pkr.hcl                     took \uf252 20m 24s at \uf017 23:33:03\nubuntu-server-focal.proxmox.ubuntu-server-focal-template: output will be in this color.\n\n==> ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Creating VM\n==> ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Starting VM\n==> ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Starting HTTP server on port 8802\n==> ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Waiting 5s for boot\n==> ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Typing the boot command\n==> ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Waiting for SSH to become available...\n==> ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Timeout waiting for SSH.\n==> ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Stopping VM\n==> ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Deleting VM\nBuild 'ubuntu-server-focal.proxmox.ubuntu-server-focal-template' errored after 20 minutes 23 seconds: Timeout waiting for SSH.\n\n==> Wait completed after 20 minutes 23 seconds\n\n==> Some builds didn't complete successfully and had errors:\n--\x3e ubuntu-server-focal.proxmox.ubuntu-server-focal-template: Timeout waiting for SSH.\n\n==> Builds finished but no artifacts were created.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This was because the ssh I setup in ",(0,t.jsx)(n.code,{children:"http/user-data"})," didn't match the user in ",(0,t.jsx)(n.a,{href:"###ubuntu-server-focal.pkr.hcl",children:"ubuntu-server-focal.pkr.hcl"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"locked-out-of-vm",children:"locked out of vm"}),"\n",(0,t.jsxs)(n.p,{children:["Trying to diagnose the issue with a vm that had no root account, and the user I had setup was locked out, I managed to get into the vm, and when I checked logs ",(0,t.jsx)(n.code,{children:"/var/log/auth.log"})," I saw this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"May  6 04:25:56 ubuntu-focal sshd[2336]: Invalid user rxhackk from 172.16.2.209 port 35030\nMay  6 04:25:56 ubuntu-focal sshd[2336]: Connection closed by invalid user rxhackk 172.16.2.209 port 35030 [preauth]\nMay  6 04:26:03 ubuntu-focal sshd[2339]: error: kex_exchange_identification: Connection closed by remote host\nMay  6 04:26:03 ubuntu-focal sshd[2340]: Invalid user rxhackk from 172.16.2.209 port 34800\nMay  6 04:26:03 ubuntu-focal sshd[2340]: Connection closed by invalid user rxhackk 172.16.2.209 port 34800 [preauth]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This whole packer setup relies heavily on the ssh user setup."}),"\n",(0,t.jsx)(n.h3,{id:"reverse-shell-qm",children:"reverse shell qm"}),"\n",(0,t.jsxs)(n.p,{children:["ran listener on desktop ",(0,t.jsx)(n.code,{children:"rlwrap nc -lvnp 6666"})," and then tried to run ",(0,t.jsx)(n.code,{children:"qm guest exec 101 'bash -c 'exec bash -i &>/dev/tcp/172.16.2.209/6666 <&1''"})," on proxmox host."]}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:['"Agent not running issues", see ',(0,t.jsx)(n.a,{href:"https://github.com/hashicorp/packer-plugin-proxmox/issues/91",children:"oliviermichaelis"})," comment with the ",(0,t.jsx)(n.code,{children:"late-commands"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"proxmox qemu (qm) commands for diagnosing and troubleshooting vm disks and configs from proxmox host."}),"\n",(0,t.jsxs)(n.li,{children:["Ubuntu ",(0,t.jsx)(n.a,{href:"https://ubuntu.com/server/docs/install/autoinstall",children:"autoinstall docs"})]}),"\n",(0,t.jsxs)(n.li,{children:["Packer ",(0,t.jsx)(n.a,{href:"https://developer.hashicorp.com/packer/plugins/builders/proxmox/clone",children:"proxmox clone docs"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://thedatabaseme.de/2022/10/16/what-a-golden-boy-use-packer-to-build-proxmox-images/",children:"What a golden boy \u2013 Use Packer to build Proxmox images"})," -- great reference for configs."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"appendix",children:"Appendix"}),"\n",(0,t.jsx)(n.h3,{id:"cloud-config-identity",children:"cloud-config Identity"}),"\n",(0,t.jsxs)(n.p,{children:["This ",(0,t.jsx)(n.code,{children:"cloud-config"})," version creates an ",(0,t.jsx)(n.code,{children:"ubuntu"})," user with ",(0,t.jsx)(n.code,{children:"ubuntu"})," password, encrypted format via ",(0,t.jsx)(n.code,{children:"mkpasswd"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"#cloud-config\nautoinstall:\n  version: 1\n  locale: en_US\n  keyboard:\n    layout: us\n  identity:\n    realname: 'Ubuntu User'\n    username: ubuntu\n    password: '$y$j9T$Ht7UYyr0iHxvPC9gzZQCl1$mQe.T8pfy6ThzlbEULE0fk71zdofPwKaiZFF0l4VUT1'\n    hostname: ubuntu-focal\n  ssh:\n    install-server: true\n    allow-pw: true\n  packages:\n    - qemu-guest-agent\n    - sudo\n  storage:\n    layout:\n      name: direct\n    swap:\n      size: 0\n"})}),"\n",(0,t.jsxs)(n.p,{children:["the identity password needs to be in an encrypted format, use ",(0,t.jsx)(n.code,{children:"mkpasswd"})," to create your password in a valid format. the ",(0,t.jsx)(n.code,{children:"#cloud-config"})," at the start is a requirement for the file to be recognised as a valid cloud-init config file."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},83611:(e,n,o)=>{o.d(n,{A:()=>r});const r=o.p+"assets/images/packer-proxmox-process-f3594e7c2a98e443131a75ebfbd3885f.png"},97593:(e,n,o)=>{o.d(n,{A:()=>r});const r=o.p+"assets/images/packer-proxmox-success-71d327b8e209c3946b1fbab7b33a86ea.png"}}]);