"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[2261],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var s=i(96540);const t={},a=s.createContext(t);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},40653:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"engineer/AI/Claude3OpusFinancialAdvisor","title":"Claude 3 Opus Financial Advisor - AI-Powered Personal Finance Assistant","description":"Building a personal financial advisor using Claude 3 Opus for intelligent money management, investment advice, and financial planning with AI-powered insights.","source":"@site/docs/engineer/AI/Claude3OpusFinancialAdvisor.md","sourceDirName":"engineer/AI","slug":"/engineer/AI/Claude3OpusFinancialAdvisor","permalink":"/docs/engineer/AI/Claude3OpusFinancialAdvisor","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/AI/Claude3OpusFinancialAdvisor.md","tags":[{"inline":true,"label":"ai","permalink":"/docs/tags/ai"},{"inline":true,"label":"finance","permalink":"/docs/tags/finance"},{"inline":true,"label":"claude","permalink":"/docs/tags/claude"},{"inline":true,"label":"personal-finance","permalink":"/docs/tags/personal-finance"},{"inline":true,"label":"advisor","permalink":"/docs/tags/advisor"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"sidebarPosition":10,"frontMatter":{"title":"Claude 3 Opus Financial Advisor - AI-Powered Personal Finance Assistant","description":"Building a personal financial advisor using Claude 3 Opus for intelligent money management, investment advice, and financial planning with AI-powered insights.","keywords":["claude 3 opus","ai financial advisor","personal finance ai","financial planning","investment ai","money management","ai finance assistant"],"tags":["ai","finance","claude","personal-finance","advisor"],"sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"AWS GenAI Ambassador Program - AI Leadership and Community Building Notes","permalink":"/docs/engineer/AI/GenAIAmbassadorNotes"},"next":{"title":"AI Prompting Collection - System, User, and Advanced Prompt Templates","permalink":"/docs/engineer/AI/PromptingAI"}}');var t=i(74848),a=i(28453);const r={title:"Claude 3 Opus Financial Advisor - AI-Powered Personal Finance Assistant",description:"Building a personal financial advisor using Claude 3 Opus for intelligent money management, investment advice, and financial planning with AI-powered insights.",keywords:["claude 3 opus","ai financial advisor","personal finance ai","financial planning","investment ai","money management","ai finance assistant"],tags:["ai","finance","claude","personal-finance","advisor"],sidebar_position:10},d=void 0,o={},l=[{value:"Project Folder Structure",id:"project-folder-structure",level:2},{value:"Explain Folder Structure",id:"explain-folder-structure",level:3},{value:"Setup Script",id:"setup-script",level:3},{value:"Code",id:"code",level:2},{value:"Step 1: Set up the project and install dependencies",id:"step-1-set-up-the-project-and-install-dependencies",level:3},{value:"Step 2: Data Ingestion and Preprocessing",id:"step-2-data-ingestion-and-preprocessing",level:3},{value:"Step 3: Interaction with Claude 3 Opus API",id:"step-3-interaction-with-claude-3-opus-api",level:3},{value:"Appendix",id:"appendix",level:2},{value:"project setup script",id:"project-setup-script",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"This project is my notes and code for a Financial Advisor that I'm designing and building using Claude 3 Opus."}),(0,t.jsx)(n.p,{children:"I'm scratching a couple of itches with this project"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Learn how to build AI applications."}),"\n",(0,t.jsx)(n.li,{children:"Using an LLM to learn and build an entire project."}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:["I will link the initial design doc ",(0,t.jsx)(n.a,{href:"#",children:"here"})]}),"\n",(0,t.jsx)(n.h2,{id:"project-folder-structure",children:"Project Folder Structure"}),"\n",(0,t.jsx)(n.admonition,{title:"prompt",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"can you please give me the best practice python application folder structure for this\n"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"financial_analyzer/\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 data/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 data_ingestion.py\n\u2502   \u2502   \u2514\u2500\u2500 preprocessing.py\n\u2502   \u251c\u2500\u2500 models/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u2514\u2500\u2500 claude_api.py\n\u2502   \u251c\u2500\u2500 analysis/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 insights.py\n\u2502   \u2502   \u2514\u2500\u2500 metrics.py\n\u2502   \u251c\u2500\u2500 visualization/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 charts.py\n\u2502   \u2502   \u2514\u2500\u2500 report.py\n\u2502   \u2514\u2500\u2500 utils/\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u2514\u2500\u2500 helpers.py\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_data_ingestion.py\n\u2502   \u251c\u2500\u2500 test_preprocessing.py\n\u2502   \u251c\u2500\u2500 test_claude_api.py\n\u2502   \u251c\u2500\u2500 test_insights.py\n\u2502   \u251c\u2500\u2500 test_metrics.py\n\u2502   \u251c\u2500\u2500 test_charts.py\n\u2502   \u2514\u2500\u2500 test_report.py\n\u251c\u2500\u2500 data/\n\u2502   \u251c\u2500\u2500 raw/\n\u2502   \u2514\u2500\u2500 processed/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 README.md\n\u2502   \u2514\u2500\u2500 api_docs.md\n\u251c\u2500\u2500 notebooks/\n\u2502   \u2514\u2500\u2500 exploratory_analysis.ipynb\n\u251c\u2500\u2500 reports/\n\u2502   \u2514\u2500\u2500 generated_reports/\n\u251c\u2500\u2500 config/\n\u2502   \u2514\u2500\u2500 config.py\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 main.py\n"})}),"\n",(0,t.jsx)(n.h3,{id:"explain-folder-structure",children:"Explain Folder Structure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"app/"}),": Contains the main application code."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data/"}),": Handles data ingestion and preprocessing.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data_ingestion.py"}),": Code for reading CSV and PDF files."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"preprocessing.py"}),": Code for data cleaning, categorization, and preprocessing."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"models/"}),": Handles interaction with the Claude 3 Opus API.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"claude_api.py"}),": Code for generating embeddings and retrieving transactions using the Claude 3 Opus API."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"analysis/"}),": Handles data analysis and insights generation.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"insights.py"}),": Code for generating insights and summaries using the Claude 3 Opus API."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"metrics.py"}),": Code for calculating key metrics."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"visualization/"}),": Handles data visualization and report generation.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"charts.py"}),": Code for creating visualizations using Matplotlib or other libraries."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"report.py"}),": Code for generating PDF reports using ReportLab or other libraries."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"utils/"}),": Contains utility functions and helper modules.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"helpers.py"}),": Code for common utility functions used across the application."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tests/"}),": Contains unit tests for different modules of the application."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"data/"}),": Stores the raw and processed data files."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"raw/"}),": Contains the raw input data files (CSV or PDF)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"processed/"}),": Contains the preprocessed data files."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"docs/"}),": Contains documentation files."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"README.md"}),": Provides an overview and instructions for the project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"api_docs.md"}),": Contains documentation for the Claude 3 Opus API usage."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"notebooks/"}),": Contains Jupyter notebooks for exploratory analysis and experimentation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"reports/"}),": Stores the generated PDF reports."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"generated_reports/"}),": Contains the generated PDF reports."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"config/"}),": Contains configuration files."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"config.py"}),": Stores configuration variables and settings for the application."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"requirements.txt"}),": Lists the project dependencies and their versions."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"setup.py"}),": Contains setup configuration for the project."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"main.py"}),": The entry point of the application."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This folder structure organizes the codebase into logical modules and separates concerns. It promotes code reusability, maintainability, and ease of testing. You can adjust the structure based on your specific requirements and preferences."}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"Remember to keep sensitive information, such as API keys, in a separate configuration file or environment variables, and avoid committing them to version control."})}),"\n",(0,t.jsx)(n.h3,{id:"setup-script",children:"Setup Script"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"#project-setup-script",children:'"project setup script"'})," in the ",(0,t.jsx)(n.a,{href:"#appendix",children:"Appendix"})," below."]})}),"\n",(0,t.jsxs)(n.p,{children:["Paste this script into ",(0,t.jsx)(n.code,{children:"finad.sh"}),", then ",(0,t.jsx)(n.code,{children:"chmod +x ./finad.sh"})," then ",(0,t.jsx)(n.code,{children:"./finad.sh"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"You'll get:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"folder",src:i(83099).A+"",width:"180",height:"259"})}),"\n",(0,t.jsx)(n.p,{children:"Let's start coding."}),"\n",(0,t.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,t.jsx)(n.h3,{id:"step-1-set-up-the-project-and-install-dependencies",children:"Step 1: Set up the project and install dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Set up and activate a virtual environment."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"python3 -m venv .env\n~/Repositories/financial_analyzer \u276f source .env/bin/activate            at  17:39:23\n~/Repositories/financial_analyzer \u276f                                .env at  17:39:45\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install the necessary libraries:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# add to requirements.txt\npandas\nnumpy\nmatplotlib\nreportlab\nanthropic\n\n# install\npip install -r requirements.txt\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"step-2-data-ingestion-and-preprocessing",children:"Step 2: Data Ingestion and Preprocessing"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["In the file ",(0,t.jsx)(n.code,{children:"app/data/data_ingestion.py"})," and add the following code:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import pandas as pd\n\ndef read_csv(file_path):\n    df = pd.read_csv(file_path)\n    return df\n\ndef read_pdf(file_path):\n    # Implement code to read and parse PDF files\n    pass\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Open ",(0,t.jsx)(n.code,{children:"app/data/preprocessing.py"})," file and add the following code:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def preprocess_data(df):\n  # Perform data cleaning, categorization, and preprocessing tasks\n  # Example:\n  df['Date'] = pd.to_datetime(df['Date'])\n  df['Amount'] = df['Amount'].astype(float)\n  return df\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"step-3-interaction-with-claude-3-opus-api",children:"Step 3: Interaction with Claude 3 Opus API"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Open the ",(0,t.jsx)(n.code,{children:"app/models/claude_api.py"})," file and add the following code"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from anthropic import Claude\n\ndef generate_embeddings(df, api_key):\n    claude = Claude(api_key)\n    # Transform the preprocessed data into a format suitable for Claude 3 Opus\n    # Generate embeddings for each transaction or category using the Claude 3 Opus API\n    # Example:\n    embeddings = []\n    for _, row in df.iterrows():\n        prompt = f\"Transaction: {row['Description']}\\nAmount: {row['Amount']}\\nDate: {row['Date']}\"\n        response = claude.generate(prompt)\n        embeddings.append(response.generations[0].text)\n    return embeddings\n\ndef retrieve_transactions(query, embeddings):\n    # Implement similarity search or query-based retrieval using the generated embeddings\n    # Return the relevant transactions based on the query\n    pass\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"appendix",children:"Appendix"}),"\n",(0,t.jsx)(n.h3,{id:"project-setup-script",children:"project setup script"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n\n# Create the main project directory\nmkdir financial_analyzer\ncd financial_analyzer\n\n# Create the app directory and its subdirectories\nmkdir -p app/{data,models,analysis,visualization,utils}\ntouch app/{__init__.py,data/{__init__.py,data_ingestion.py,preprocessing.py},models/{__init__.py,claude_api.py},analysis/{__init__.py,insights.py,metrics.py},visualization/{__init__.py,charts.py,report.py},utils/{__init__.py,helpers.py}}\n\n# Create the tests directory and test files\nmkdir tests\ntouch tests/{__init__.py,test_data_ingestion.py,test_preprocessing.py,test_claude_api.py,test_insights.py,test_metrics.py,test_charts.py,test_report.py}\n\n# Create the data directory and its subdirectories\nmkdir -p data/{raw,processed}\n\n# Create the docs directory and documentation files\nmkdir docs\ntouch docs/{README.md,api_docs.md}\n\n# Create the notebooks directory and a sample notebook\nmkdir notebooks\ntouch notebooks/exploratory_analysis.ipynb\n\n# Create the reports directory and its subdirectory\nmkdir -p reports/generated_reports\n\n# Create the config directory and configuration file\nmkdir config\ntouch config/config.py\n\n# Create other project files\ntouch {requirements.txt,setup.py,main.py}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},83099:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/Claude3FinAdv-folder-9ce7dba2ba65754203f6682249bd41da.png"}}]);