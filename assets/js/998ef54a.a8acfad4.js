"use strict";(self.webpackChunkronamosa_github_io=self.webpackChunkronamosa_github_io||[]).push([[4650],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(96540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}},78142:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"engineer/Projects/personal-ai","title":"Personal AI","description":"dump notes:","source":"@site/docs/engineer/Projects/personal-ai.md","sourceDirName":"engineer/Projects","slug":"/engineer/Projects/personal-ai","permalink":"/docs/engineer/Projects/personal-ai","draft":false,"unlisted":false,"editUrl":"https://github.com/ronamosa/ronamosa.github.io/edit/main/website/docs/engineer/Projects/personal-ai.md","tags":[{"inline":true,"label":"ai","permalink":"/docs/tags/ai"}],"version":"current","lastUpdatedBy":"Ron Amosa","lastUpdatedAt":1758526302000,"frontMatter":{"title":"Personal AI","tags":["ai"]},"sidebar":"docsSidebar","previous":{"title":"Microservices","permalink":"/docs/engineer/Projects/microservices"},"next":{"title":"AWS EKS Workshop - Complete Kubernetes Container Orchestration Guide","permalink":"/docs/engineer/AWS/AWS-EKS-Workshop"}}');var o=t(74848),r=t(28453);const s={title:"Personal AI",tags:["ai"]},a=void 0,c={},l=[];function d(e){const n={a:"a",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"dump notes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://saiharishcherukuri.medium.com/real-time-speech-recognition-and-voice-enabled-ai-chatbot-integration-using-bing-and-openai-80f3709d870f",children:"voice-enabled chatbot, bing, openAI"})}),"\n",(0,o.jsx)(n.li,{children:"goal = privateGPT, train model on my docs, notes, emails, whatever, but private and offline."}),"\n",(0,o.jsx)(n.li,{children:"continually train it where I can, see if it can learn via verbal conversations with me."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);